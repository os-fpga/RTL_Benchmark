/* Generated by Yosys 0.16+65 (git sha1 051517d61, gcc 9.1.0 -fPIC -Os) */

module uart(clk_i, rst_ni, \tl_i.a_valid , \tl_i.d_ready , \tl_o.d_valid , \tl_o.d_error , \tl_o.a_ready , \alert_rx_i[0].ping_p , \alert_rx_i[0].ping_n , \alert_rx_i[0].ack_p , \alert_rx_i[0].ack_n , \alert_tx_o[0].alert_p , \alert_tx_o[0].alert_n , cio_rx_i, cio_tx_o, cio_tx_en_o, intr_tx_watermark_o, intr_rx_watermark_o, intr_tx_empty_o, intr_rx_overflow_o, intr_rx_frame_err_o
, intr_rx_break_err_o, intr_rx_timeout_o, intr_rx_parity_err_o, \tl_o.d_opcode , \tl_i.a_opcode , \tl_i.a_param , \tl_i.a_size , \tl_i.a_source , \tl_i.a_address , \tl_i.a_mask , \tl_i.a_data , \tl_i.a_user.rsvd , \tl_i.a_user.instr_type , \tl_i.a_user.cmd_intg , \tl_i.a_user.data_intg , \tl_o.d_param , \tl_o.d_size , \tl_o.d_source , \tl_o.d_sink , \tl_o.d_data , \tl_o.d_user.rsp_intg 
, \tl_o.d_user.data_intg );
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  input \alert_rx_i[0].ack_n ;
  wire \alert_rx_i[0].ack_n ;
  input \alert_rx_i[0].ack_p ;
  wire \alert_rx_i[0].ack_p ;
  input \alert_rx_i[0].ping_n ;
  wire \alert_rx_i[0].ping_n ;
  input \alert_rx_i[0].ping_p ;
  wire \alert_rx_i[0].ping_p ;
  output \alert_tx_o[0].alert_n ;
  wire \alert_tx_o[0].alert_n ;
  output \alert_tx_o[0].alert_p ;
  wire \alert_tx_o[0].alert_p ;
  input cio_rx_i;
  wire cio_rx_i;
  output cio_tx_en_o;
  wire cio_tx_en_o;
  output cio_tx_o;
  wire cio_tx_o;
  input clk_i;
  wire clk_i;
  wire \gen_alert_tx[0].u_prim_alert_sender.ack_level ;
  wire \gen_alert_tx[0].u_prim_alert_sender.i_decode_ack.level_q ;
  wire \gen_alert_tx[0].u_prim_alert_sender.i_decode_ping.gen_async.diff_pd ;
  wire [1:0] \gen_alert_tx[0].u_prim_alert_sender.i_decode_ping.gen_async.state_q ;
  wire [2:0] \gen_alert_tx[0].u_prim_alert_sender.state_q ;
  output intr_rx_break_err_o;
  wire intr_rx_break_err_o;
  output intr_rx_frame_err_o;
  wire intr_rx_frame_err_o;
  output intr_rx_overflow_o;
  wire intr_rx_overflow_o;
  output intr_rx_parity_err_o;
  wire intr_rx_parity_err_o;
  output intr_rx_timeout_o;
  wire intr_rx_timeout_o;
  output intr_rx_watermark_o;
  wire intr_rx_watermark_o;
  output intr_tx_empty_o;
  wire intr_tx_empty_o;
  output intr_tx_watermark_o;
  wire intr_tx_watermark_o;
  input rst_ni;
  wire rst_ni;
  input [31:0] \tl_i.a_address ;
  wire [31:0] \tl_i.a_address ;
  input [31:0] \tl_i.a_data ;
  wire [31:0] \tl_i.a_data ;
  input [3:0] \tl_i.a_mask ;
  wire [3:0] \tl_i.a_mask ;
  input [2:0] \tl_i.a_opcode ;
  wire [2:0] \tl_i.a_opcode ;
  input [2:0] \tl_i.a_param ;
  wire [2:0] \tl_i.a_param ;
  input [1:0] \tl_i.a_size ;
  wire [1:0] \tl_i.a_size ;
  input [7:0] \tl_i.a_source ;
  wire [7:0] \tl_i.a_source ;
  input [6:0] \tl_i.a_user.cmd_intg ;
  wire [6:0] \tl_i.a_user.cmd_intg ;
  input [6:0] \tl_i.a_user.data_intg ;
  wire [6:0] \tl_i.a_user.data_intg ;
  input [3:0] \tl_i.a_user.instr_type ;
  wire [3:0] \tl_i.a_user.instr_type ;
  input [4:0] \tl_i.a_user.rsvd ;
  wire [4:0] \tl_i.a_user.rsvd ;
  input \tl_i.a_valid ;
  wire \tl_i.a_valid ;
  input \tl_i.d_ready ;
  wire \tl_i.d_ready ;
  output \tl_o.a_ready ;
  wire \tl_o.a_ready ;
  output [31:0] \tl_o.d_data ;
  wire [31:0] \tl_o.d_data ;
  output \tl_o.d_error ;
  wire \tl_o.d_error ;
  output [2:0] \tl_o.d_opcode ;
  wire [2:0] \tl_o.d_opcode ;
  output [2:0] \tl_o.d_param ;
  wire [2:0] \tl_o.d_param ;
  output \tl_o.d_sink ;
  wire \tl_o.d_sink ;
  output [1:0] \tl_o.d_size ;
  wire [1:0] \tl_o.d_size ;
  output [7:0] \tl_o.d_source ;
  wire [7:0] \tl_o.d_source ;
  output [6:0] \tl_o.d_user.data_intg ;
  wire [6:0] \tl_o.d_user.data_intg ;
  output [6:0] \tl_o.d_user.rsp_intg ;
  wire [6:0] \tl_o.d_user.rsp_intg ;
  output \tl_o.d_valid ;
  wire \tl_o.d_valid ;
  wire [5:0] \u_reg.fifo_status_rxlvl_qs ;
  wire [5:0] \u_reg.fifo_status_txlvl_qs ;
  wire \u_reg.hw2reg.intr_state.rx_break_err.de ;
  wire \u_reg.hw2reg.intr_state.rx_frame_err.de ;
  wire \u_reg.hw2reg.intr_state.rx_overflow.de ;
  wire \u_reg.hw2reg.intr_state.rx_parity_err.de ;
  wire \u_reg.hw2reg.intr_state.rx_timeout.de ;
  wire \u_reg.hw2reg.intr_state.rx_watermark.de ;
  wire \u_reg.hw2reg.intr_state.tx_empty.de ;
  wire \u_reg.hw2reg.intr_state.tx_watermark.de ;
  wire \u_reg.intg_err ;
  wire \u_reg.u_reg_if.a_ack ;
  wire \uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_incr_rptr ;
  wire \uart_core.u_uart_txfifo.gen_normal_fifo.fifo_incr_wptr ;
  assign _006_ = 64'b0000000001000000000000001011101000000000101011100000000000000001 >> { _069_, \gen_alert_tx[0].u_prim_alert_sender.i_decode_ping.gen_async.diff_pd , _008_, _080_, _079_, \gen_alert_tx[0].u_prim_alert_sender.i_decode_ping.gen_async.state_q [0] };
  assign _090_ = 16'b0000000000000001 >> { \u_reg.fifo_status_txlvl_qs [2:1], \u_reg.fifo_status_txlvl_qs [4:3] };
  assign _065_ = 4'b1011 >> { _090_, \u_reg.fifo_status_txlvl_qs [5] };
  assign _091_ = 64'b0110100110010110100101100110100110010110011010010110100110010110 >> { \tl_i.a_address [24], \tl_i.a_address [2], \tl_i.a_address [18], \tl_i.a_address [25], \tl_i.a_address [28], \tl_i.a_address [12] };
  assign _092_ = 16'b1001011001101001 >> { \tl_i.a_user.instr_type [2], \tl_i.a_address [3], \tl_i.a_address [13], \tl_i.a_address [26] };
  assign _093_ = 64'b0110100110010110100101100110100110010110011010010110100110010110 >> { \tl_i.a_user.cmd_intg [3], \tl_i.a_address [8], \tl_i.a_address [4], \tl_i.a_mask [1], \tl_i.a_opcode [1], _092_ };
  assign _094_ = 16'b1001011001101001 >> { \tl_i.a_address [29], \tl_i.a_address [19], _091_, _093_ };
  assign _095_ = 16'b0110100110010110 >> { \tl_i.a_user.instr_type [0], \tl_i.a_address [1], \tl_i.a_address [11], \tl_i.a_address [25] };
  assign _096_ = 16'b1001011001101001 >> { \tl_i.a_address [6], \tl_i.a_address [27], \tl_i.a_address [16], \tl_i.a_address [22] };
  assign _097_ = 32'd2523490710 >> { \tl_i.a_address [4], \tl_i.a_opcode [0], _095_, \tl_i.a_address [23], \tl_i.a_user.instr_type [1] };
  assign _098_ = 64'b0110100110010110100101100110100110010110011010010110100110010110 >> { _096_, _097_, \tl_i.a_address [17], \tl_i.a_address [7], \tl_i.a_user.cmd_intg [6], \tl_i.a_address [26] };
  assign _099_ = 64'b0111111011100111111001110111111011100111011111100111111011100111 >> { \tl_i.a_address [14], \tl_i.a_user.instr_type [3], \tl_i.a_address [30], \tl_i.a_address [20], _098_, _094_ };
  assign _100_ = 64'b0110100110010110100101100110100110010110011010010110100110010110 >> { \tl_i.a_address [30], \tl_i.a_address [20], \tl_i.a_address [31], \tl_i.a_user.instr_type [0], \tl_i.a_address [22], \tl_i.a_mask [0] };
  assign _101_ = 16'b1001011001101001 >> { \tl_i.a_opcode [2], \tl_i.a_address [1], \tl_i.a_address [28], \tl_i.a_opcode [1] };
  assign _102_ = 16'b1001011001101001 >> { \tl_i.a_address [9], \tl_i.a_address [10], \tl_i.a_address [8], \tl_i.a_address [11] };
  assign _103_ = 32'd1771476585 >> { _102_, _101_, \tl_i.a_user.cmd_intg [2], \tl_i.a_address [18], _100_ };
  assign _104_ = 64'b0110100110010110100101100110100110010110011010010110100110010110 >> { \tl_i.a_address [31], \tl_i.a_address [17], \tl_i.a_address [7], \tl_i.a_address [10], \tl_i.a_address [15], \tl_i.a_address [5] };
  assign _105_ = 64'b0110100110010110100101100110100110010110011010010110100110010110 >> { \tl_i.a_user.cmd_intg [5], \tl_i.a_mask [3], \tl_i.a_address [24], \tl_i.a_address [27], _092_, _104_ };
  assign _106_ = 64'b0110100110010110100101100110100110010110011010010110100110010110 >> { \tl_i.a_address [23], \tl_i.a_address [21], \tl_i.a_address [29], \tl_i.a_address [19], \tl_i.a_user.instr_type [1], \tl_i.a_address [0] };
  assign _107_ = 64'b1001011001101001011010011001011001101001100101101001011001101001 >> { \tl_i.a_data [5], \tl_i.a_data [1], \tl_i.a_data [25], \tl_i.a_data [31], \tl_i.a_data [4], \tl_i.a_data [9] };
  assign _108_ = 64'b0110100110010110100101100110100110010110011010010110100110010110 >> { \tl_i.a_data [16], \tl_i.a_data [0], \tl_i.a_data [12], \tl_i.a_user.data_intg [4], \tl_i.a_data [30], _107_ };
  assign _109_ = 16'b1001011001101001 >> { \tl_i.a_data [22], \tl_i.a_data [3], \tl_i.a_data [23], \tl_i.a_data [13] };
  assign _110_ = 64'b0110100110010110100101100110100110010110011010010110100110010110 >> { \tl_i.a_data [19:18], \tl_i.a_data [26], \tl_i.a_data [2], \tl_i.a_data [24], \tl_i.a_user.data_intg [5] };
  assign _111_ = 64'b1001011001101001011010011001011001101001100101101001011001101001 >> { \tl_i.a_data [9], \tl_i.a_data [14], \tl_i.a_data [29], \tl_i.a_data [6], \tl_i.a_data [27], _110_ };
  assign _112_ = 32'd1771476585 >> { \tl_i.a_address [4], \tl_i.a_opcode [0], \tl_i.a_user.cmd_intg [0], \tl_i.a_address [6], \tl_i.a_address [0] };
  assign _113_ = 64'b0110100110010110100101100110100110010110011010010110100110010110 >> { \tl_i.a_address [7], \tl_i.a_address [5], _101_, \tl_i.a_address [3:2], _112_ };
  assign _114_ = 64'b0110100110010110100101100110100110010110011010010110100110010110 >> { \tl_i.a_address [14], \tl_i.a_opcode [0], \tl_i.a_address [12], \tl_i.a_address [16], \tl_i.a_user.cmd_intg [1], \tl_i.a_address [28] };
  assign _115_ = 32'd1771476585 >> { \tl_i.a_address [13], \tl_i.a_address [17], _102_, \tl_i.a_address [15], _114_ };
  assign _116_ = 16'b1001011001101001 >> { \tl_i.a_data [10], \tl_i.a_data [12], \tl_i.a_data [2], \tl_i.a_data [8] };
  assign _117_ = 16'b1001011001101001 >> { \tl_i.a_data [25], \tl_i.a_data [15], \tl_i.a_data [17], \tl_i.a_data [26] };
  assign _118_ = 32'd1771476585 >> { \tl_i.a_data [29], \tl_i.a_data [13], \tl_i.a_data [5], \tl_i.a_data [18], _116_ };
  assign _119_ = 16'b1001011001101001 >> { \tl_i.a_user.instr_type [0], \tl_i.a_user.instr_type [2], \tl_i.a_address [31], \tl_i.a_user.instr_type [3] };
  assign _120_ = 64'b1001011001101001011010011001011001101001100101101001011001101001 >> { \tl_i.a_address [15], \tl_i.a_address [5], \tl_i.a_mask [2], _096_, _091_, _119_ };
  assign _121_ = 32'd1771476585 >> { \tl_i.a_address [21], \tl_i.a_opcode [2], _120_, \tl_i.a_user.cmd_intg [4], \tl_i.a_address [9] };
  assign _122_ = 32'd2523490710 >> { \tl_i.a_mask [2], \tl_i.a_mask [0], \tl_i.a_address [30:29], \tl_i.a_mask [3] };
  assign _123_ = 16'b1001011001101001 >> { \tl_i.a_user.instr_type [1], \tl_i.a_mask [1], _119_, _122_ };
  assign _124_ = 16'b1001011001101001 >> { \tl_i.a_data [16], \tl_i.a_data [7], \tl_i.a_data [11], \tl_i.a_data [24] };
  assign _125_ = 64'b1001011001101001011010011001011001101001100101101001011001101001 >> { \tl_i.a_data [8], \tl_i.a_data [5], \tl_i.a_data [15], \tl_i.a_data [18], \tl_i.a_data [1], \tl_i.a_data [3] };
  assign _126_ = 16'b1001011001101001 >> { \tl_i.a_data [21:20], \tl_i.a_data [30], \tl_i.a_data [19] };
  assign _127_ = 64'b1001011001101001011010011001011001101001100101101001011001101001 >> { \tl_i.a_data [1], \tl_i.a_data [20], \tl_i.a_data [7], \tl_i.a_user.data_intg [6], \tl_i.a_data [14], \tl_i.a_data [22] };
  assign _128_ = 64'b0110100110010110100101100110100110010110011010010110100110010110 >> { \tl_i.a_data [6], \tl_i.a_user.data_intg [1], _117_, \tl_i.a_data [4], \tl_i.a_data [23], _126_ };
  assign _129_ = 64'b1001011001101001011010011001011001101001100101101001011001101001 >> { \tl_i.a_data [9], \tl_i.a_data [28], \tl_i.a_data [17], \tl_i.a_data [6], \tl_i.a_data [14], \tl_i.a_data [0] };
  assign _130_ = 64'b1001011001101001011010011001011001101001100101101001011001101001 >> { \tl_i.a_data [4], \tl_i.a_data [21], \tl_i.a_data [10], \tl_i.a_user.data_intg [3], \tl_i.a_data [29], _129_ };
  assign _131_ = 64'b0001100010000001100000010001100001000010001001000010010001000010 >> { _127_, \tl_i.a_data [31], \tl_i.a_data [27], \tl_i.a_data [28], _116_, _128_ };
  assign _132_ = 32'd2683727865 >> { _126_, _130_, _124_, \tl_i.a_user.data_intg [2], _125_ };
  assign _133_ = 16'b0001000000000100 >> { _106_, _105_, _103_, _132_ };
  assign _134_ = 64'b0000000101000000000000000000000000000000000000000000000000000000 >> { _131_, _133_, _111_, _108_, _109_, _099_ };
  assign _135_ = 64'b0100000100010100000101000100000100010100010000010100000100010100 >> { \tl_i.a_data [11], \tl_i.a_user.data_intg [0], \tl_i.a_data [0], _117_, _118_, _121_ };
  assign \u_reg.intg_err  = 64'b1000101010100010101010101010101010101010101010101010101010101010 >> { _134_, _135_, _113_, _123_, _115_, \tl_i.a_valid  };
  assign \u_reg.u_reg_if.a_ack  = 4'b0100 >> { \tl_i.a_valid , \tl_o.d_valid  };
  assign _136_ = 8'b00010000 >> { \u_reg.u_reg_if.a_ack , \tl_i.a_opcode [1], \tl_i.a_opcode [2] };
  assign _137_ = 64'b1111000011110011111100001111001111110000111100110000000001010001 >> { \tl_i.a_address [0], \tl_i.a_size [0], \tl_i.a_mask [3], \tl_i.a_address [1], \tl_i.a_mask [2:1] };
  assign _138_ = 64'b0001010100010101000101010011111100000000000000000000000000000000 >> { \tl_i.a_valid , \tl_i.a_mask [2], \tl_i.a_size [0], \tl_i.a_mask [1], \tl_i.a_address [1:0] };
  assign _139_ = 32'd4278124032 >> { \tl_i.a_address [0], \tl_i.a_address [1], \tl_i.a_size [1], \tl_i.a_mask [0], _136_ };
  assign _140_ = 64'b0000001000000000000000001100000000000000000000000000000000000000 >> { _138_, \tl_i.a_user.instr_type [3], \tl_i.a_user.instr_type [1:0], \tl_i.a_user.instr_type [2], \tl_i.a_opcode [2] };
  assign _141_ = 64'b0000000000000011000000000000101000000000000000000000000000000000 >> { _140_, \tl_i.a_size [1], \u_reg.intg_err , _139_, \tl_i.a_size [0], _137_ };
  assign _142_ = 64'b0011111111111111111111111111111100101011100000101000001000101011 >> { \tl_i.a_size [1], \tl_i.a_mask [2], \tl_i.a_mask [0], \tl_i.a_mask [1], \tl_i.a_mask [3], \tl_i.a_size [0] };
  assign _143_ = 32'd51183616 >> { _141_, \tl_i.a_opcode [0], \tl_i.a_opcode [1], \tl_i.a_opcode [2], _142_ };
  assign _046_ = 64'b1111111111111111111000000000000011111111111111111111111111111111 >> { _143_, _136_, \tl_i.a_address [5:2] };
  assign _144_ = 16'b0001000000000000 >> { \tl_i.a_address [4], \tl_i.a_address [2], \tl_i.a_address [3], \tl_i.a_address [5] };
  assign _145_ = 8'b10000000 >> { _144_, _090_, \u_reg.fifo_status_txlvl_qs [5] };
  assign _146_ = 16'b0000000000000001 >> { \tl_i.a_address [2], \tl_i.a_address [5], \tl_i.a_address [3], \tl_i.a_address [4] };
  assign _147_ = 16'b0001000000000000 >> { \tl_i.a_address [2], \tl_i.a_address [5], \tl_i.a_address [3], \tl_i.a_address [4] };
  assign _032_ = 64'b1111111111111111111110001111100011111111111111111111111110001000 >> { \u_reg.fifo_status_txlvl_qs [0], _046_, _145_, _147_, _029_, _146_ };
  assign \gen_alert_tx[0].u_prim_alert_sender.ack_level  = 16'b1111111001000000 >> { \gen_alert_tx[0].u_prim_alert_sender.i_decode_ack.level_q , _067_, _066_, _003_ };
  assign _148_ = 8'b00000001 >> { _058_, _082_, \u_reg.intg_err  };
  assign _002_ = 64'b0000000000000000000000000000000000000000000000000110111111110110 >> { _004_, _003_, _078_, _067_, _077_, _066_ };
  assign _007_ = 64'b0000000000000000000000000000000000000000000000000110111111110110 >> { _008_, \gen_alert_tx[0].u_prim_alert_sender.i_decode_ping.gen_async.state_q [0], _069_, _080_, _079_, \gen_alert_tx[0].u_prim_alert_sender.i_decode_ping.gen_async.diff_pd  };
  assign _149_ = 32'd460544 >> { _069_, \gen_alert_tx[0].u_prim_alert_sender.i_decode_ping.gen_async.diff_pd , _007_, _008_, \gen_alert_tx[0].u_prim_alert_sender.i_decode_ping.gen_async.state_q [0] };
  assign _150_ = 16'b0000000011101011 >> { _149_, _067_, _066_, _002_ };
  assign _072_ = 64'b0000000000000000000000000000000011111110111111111111111111111111 >> { _148_, _150_, _015_, _014_, \gen_alert_tx[0].u_prim_alert_sender.ack_level , \gen_alert_tx[0].u_prim_alert_sender.state_q [0] };
  assign _038_ = 8'b11111000 >> { _046_, _051_, _146_ };
  assign _020_ = 32'd2147450880 >> { _025_, _022_, \u_reg.fifo_status_rxlvl_qs [0], _023_, _024_ };
  assign _151_ = 32'd4093112320 >> { \tl_i.a_address [2], \tl_i.a_address [3], \tl_i.a_address [4], \tl_i.a_mask [1], \tl_i.a_mask [2] };
  assign _152_ = 64'b1111111111111111000000000000000001111111000000000111111100000000 >> { _151_, \tl_i.a_address [5:4], \tl_i.a_mask [1], \tl_i.a_mask [3:2] };
  assign _153_ = 32'd1073741824 >> { \tl_i.a_address [3], _136_, \tl_i.a_mask [0], _143_, _152_ };
  assign _154_ = 16'b0000000100000000 >> { _153_, \tl_i.a_address [2], \tl_i.a_address [5:4] };
  assign \u_reg.hw2reg.intr_state.tx_watermark.de  = 16'b1000111110001000 >> { _027_, _065_, \tl_i.a_data [0], _154_ };
  assign _047_ = 16'b0001000000000000 >> { \tl_i.a_opcode [2], \u_reg.u_reg_if.a_ack , \tl_i.a_opcode [1:0] };
  assign _155_ = 64'b0000000100001111000011110000111100001111000011110000111100001111 >> { \tl_i.a_address [5], _047_, \tl_i.a_address [4], _136_, \tl_i.a_address [2], \tl_i.a_address [3] };
  assign _031_ = 16'b0000101111111111 >> { _143_, _155_, \tl_i.a_mask [0], _152_ };
  assign _156_ = 32'd1 >> { _022_, \u_reg.fifo_status_rxlvl_qs [0], _023_, _024_, _025_ };
  assign _064_ = 4'b1011 >> { _156_, _026_ };
  assign _157_ = 32'd268435456 >> { \tl_i.a_address [3], \tl_i.a_address [4], _047_, \tl_i.a_address [2], \tl_i.a_address [5] };
  assign \uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_incr_rptr  = 8'b10000000 >> { _064_, _157_, _141_ };
  assign _088_ = 32'd2147450880 >> { \u_reg.fifo_status_txlvl_qs [4], \u_reg.fifo_status_txlvl_qs [0], \u_reg.fifo_status_txlvl_qs [1], \u_reg.fifo_status_txlvl_qs [2], \u_reg.fifo_status_txlvl_qs [3] };
  assign _089_ = 64'b0111111111111111111111111111111110000000000000000000000000000000 >> { \u_reg.fifo_status_txlvl_qs [5], \u_reg.fifo_status_txlvl_qs [0], \u_reg.fifo_status_txlvl_qs [1], \u_reg.fifo_status_txlvl_qs [2], \u_reg.fifo_status_txlvl_qs [3], \u_reg.fifo_status_txlvl_qs [4] };
  assign _086_ = 8'b01111000 >> { \u_reg.fifo_status_txlvl_qs [2], \u_reg.fifo_status_txlvl_qs [0], \u_reg.fifo_status_txlvl_qs [1] };
  assign _087_ = 16'b0111111110000000 >> { \u_reg.fifo_status_txlvl_qs [3], \u_reg.fifo_status_txlvl_qs [0], \u_reg.fifo_status_txlvl_qs [1], \u_reg.fifo_status_txlvl_qs [2] };
  assign _158_ = 64'b1011010001001011010010111011010001001011101101001011010001001011 >> { \tl_o.d_data [4], \tl_o.d_data [0], \tl_o.d_data [17:16], \tl_o.d_data [21], \tl_o.d_data [31] };
  assign \tl_o.d_user.data_intg [3] = 8'b10010110 >> { \tl_o.d_data [6], \tl_o.d_data [7], _158_ };
  assign _039_ = 8'b11111000 >> { _046_, _060_, _146_ };
  assign _013_ = 64'b0000000011110101000011111111110000000000000000000000000000000000 >> { _150_, _014_, \gen_alert_tx[0].u_prim_alert_sender.state_q [0], _015_, _148_, \gen_alert_tx[0].u_prim_alert_sender.ack_level  };
  assign _159_ = 16'b0110100110010110 >> { \tl_o.d_data [4], \tl_o.d_data [0], \tl_o.d_data [1], \tl_o.d_data [3] };
  assign \tl_o.d_user.data_intg [4] = 16'b1110101100010100 >> { _159_, \tl_o.d_data [16], \tl_o.d_data [5], \tl_o.d_data [31] };
  assign _160_ = 64'b0000000010101011000000000000000000000000000000000000000011101010 >> { \gen_alert_tx[0].u_prim_alert_sender.i_decode_ping.gen_async.diff_pd , _069_, _008_, _079_, _080_, \gen_alert_tx[0].u_prim_alert_sender.i_decode_ping.gen_async.state_q [0] };
  assign _161_ = 4'b0001 >> { _081_, _160_ };
  assign _071_ = 64'b0000000000000000000000000000000011111110111111111111111111111111 >> { _161_, _014_, _150_, \gen_alert_tx[0].u_prim_alert_sender.ack_level , \gen_alert_tx[0].u_prim_alert_sender.state_q [0], _015_ };
  assign \u_reg.hw2reg.intr_state.rx_break_err.de  = 4'b1000 >> { \tl_i.a_data [5], _154_ };
  assign \tl_o.d_user.data_intg [5] = 64'b1011010001001011010010111011010001001011101101001011010001001011 >> { \tl_o.d_data [19:18], \tl_o.d_data [3:2], \tl_o.d_data [6], \tl_o.d_data [31] };
  assign \tl_o.d_user.data_intg [6] = 32'd351005460 >> { \tl_o.d_data [1], \tl_o.d_data [2], \tl_o.d_data [20], \tl_o.d_data [7], \tl_o.d_data [31] };
  assign _009_ = 64'b1111111011111111111111111111111111111111111111111111111111111111 >> { _161_, _148_, _150_, _014_, \gen_alert_tx[0].u_prim_alert_sender.state_q [0], _015_ };
  assign _011_ = 32'd4026466304 >> { _009_, _150_, \gen_alert_tx[0].u_prim_alert_sender.state_q [0], _014_, \gen_alert_tx[0].u_prim_alert_sender.ack_level  };
  assign _162_ = 16'b0000000011101111 >> { _046_, _144_, \u_reg.fifo_status_txlvl_qs [0], _065_ };
  assign _034_ = 32'd4169727999 >> { _162_, _147_, \u_reg.fifo_status_txlvl_qs [2], _049_, _146_ };
  assign _010_ = 32'd863499071 >> { \gen_alert_tx[0].u_prim_alert_sender.state_q [0], _014_, _015_, _150_, \gen_alert_tx[0].u_prim_alert_sender.ack_level  };
  assign _028_ = 4'b1110 >> { _029_, \u_reg.hw2reg.intr_state.tx_watermark.de  };
  assign \u_reg.hw2reg.intr_state.rx_watermark.de  = 16'b1000111110001000 >> { _064_, _076_, \tl_i.a_data [1], _154_ };
  assign _052_ = 4'b1110 >> { _053_, \u_reg.hw2reg.intr_state.rx_watermark.de  };
  assign _005_ = 16'b1110101110111110 >> { _069_, \gen_alert_tx[0].u_prim_alert_sender.i_decode_ping.gen_async.diff_pd , _008_, \gen_alert_tx[0].u_prim_alert_sender.i_decode_ping.gen_async.state_q [0] };
  assign _021_ = 64'b0111111111111111111111111111111110000000000000000000000000000000 >> { _026_, _022_, \u_reg.fifo_status_rxlvl_qs [0], _023_, _024_, _025_ };
  assign _001_ = 64'b0000000001000000000000001011101000000000101011100000000000000001 >> { _067_, _066_, _003_, _078_, _077_, _004_ };
  assign _017_ = 4'b0110 >> { _022_, \u_reg.fifo_status_rxlvl_qs [0] };
  assign _041_ = 8'b11111000 >> { _046_, _017_, _147_ };
  assign _045_ = 16'b1110101110101010 >> { _147_, _026_, _156_, _046_ };
  assign \u_reg.hw2reg.intr_state.tx_empty.de  = 4'b1000 >> { \tl_i.a_data [2], _154_ };
  assign _048_ = 4'b1110 >> { _049_, \u_reg.hw2reg.intr_state.tx_empty.de  };
  assign _163_ = 16'b0000011101110111 >> { \u_reg.fifo_status_txlvl_qs [5], _147_, _057_, _146_ };
  assign _037_ = 16'b1111001011111111 >> { _163_, _046_, _064_, _144_ };
  assign \u_reg.hw2reg.intr_state.rx_overflow.de  = 4'b1000 >> { \tl_i.a_data [3], _154_ };
  assign \uart_core.u_uart_txfifo.gen_normal_fifo.fifo_incr_wptr  = 16'b1011111100000000 >> { _075_, _090_, \u_reg.fifo_status_txlvl_qs [5], \u_reg.fifo_status_txlvl_qs [0] };
  assign _085_ = 4'b0110 >> { \u_reg.fifo_status_txlvl_qs [0], \u_reg.fifo_status_txlvl_qs [1] };
  assign _040_ = 8'b11111000 >> { _046_, \u_reg.fifo_status_rxlvl_qs [0], _147_ };
  assign _164_ = 64'b0110100110010110100101100110100110010110011010010110100110010110 >> { \tl_o.d_data [1], \tl_o.d_data [20], \tl_o.d_data [18], \tl_o.d_data [7], \tl_o.d_data [3], \tl_o.d_data [19] };
  assign \tl_o.d_user.data_intg [2] = 32'd3024833460 >> { \tl_o.d_data [21], \tl_o.d_data [5], _164_, \tl_o.d_data [16], \tl_o.d_data [31] };
  assign _056_ = 4'b1110 >> { _057_, \u_reg.hw2reg.intr_state.rx_break_err.de  };
  assign _063_ = 8'b10000000 >> { \tl_i.a_address [4], \tl_i.a_address [2], _153_ };
  assign \tl_o.d_user.rsp_intg [1] = 16'b1001011001101001 >> { \tl_o.d_error , \tl_o.d_opcode [0], \tl_o.d_size  };
  assign _030_ = 8'b10101100 >> { \tl_o.d_valid , \tl_i.a_valid , \tl_i.d_ready  };
  assign _036_ = 64'b1111111111111111111111111111111111111111111111111111100010001000 >> { _046_, _144_, _147_, \u_reg.fifo_status_txlvl_qs [4], _055_, _146_ };
  assign _000_ = 16'b1110001100111110 >> { _067_, _066_, _003_, _004_ };
  assign _165_ = 64'b1111111111111111111100001111000011111111111111111111111110001000 >> { \gen_alert_tx[0].u_prim_alert_sender.state_q [0], _014_, _015_, \gen_alert_tx[0].u_prim_alert_sender.ack_level , _161_, _148_ };
  assign _074_ = 64'b0000000000000000111111111111111100010000000000000001000000000000 >> { _150_, _165_, \gen_alert_tx[0].u_prim_alert_sender.state_q [0], _014_, \alert_tx_o[0].alert_p , _015_ };
  assign _019_ = 16'b0111111110000000 >> { _024_, _022_, \u_reg.fifo_status_rxlvl_qs [0], _023_ };
  assign _166_ = 16'b1001011001101001 >> { \tl_o.d_data [6], \tl_o.d_data [4], \tl_o.d_data [20:19] };
  assign \tl_o.d_user.data_intg [1] = 16'b1110101100010100 >> { _166_, \tl_o.d_data [17], \tl_o.d_data [21], \tl_o.d_data [31] };
  assign _043_ = 64'b1010101010101011111111111111111010101010101010101010101010101010 >> { _147_, _024_, _022_, \u_reg.fifo_status_rxlvl_qs [0], _023_, _046_ };
  assign _167_ = 16'b0000011101110111 >> { \u_reg.fifo_status_txlvl_qs [1], _147_, _053_, _146_ };
  assign _033_ = 32'd4294934783 >> { _046_, _167_, _026_, _144_, _156_ };
  assign \tl_o.d_user.data_intg [0] = 64'b0100000100010100101111101110101110111110111010110100000100010100 >> { \tl_o.d_data [2], \tl_o.d_data [0], \tl_o.d_data [17], \tl_o.d_data [18], \tl_o.d_data [5], \tl_o.d_data [31] };
  assign _018_ = 8'b01111000 >> { _023_, _022_, \u_reg.fifo_status_rxlvl_qs [0] };
  assign _012_ = 32'd264568831 >> { _150_, _014_, \gen_alert_tx[0].u_prim_alert_sender.state_q [0], _015_, \gen_alert_tx[0].u_prim_alert_sender.ack_level  };
  assign \u_reg.hw2reg.intr_state.rx_frame_err.de  = 4'b1000 >> { \tl_i.a_data [4], _154_ };
  assign _054_ = 4'b1110 >> { _055_, \u_reg.hw2reg.intr_state.rx_frame_err.de  };
  assign \u_reg.hw2reg.intr_state.rx_parity_err.de  = 4'b1000 >> { \tl_i.a_data [7], _154_ };
  assign _059_ = 4'b1110 >> { _060_, \u_reg.hw2reg.intr_state.rx_parity_err.de  };
  assign \u_reg.hw2reg.intr_state.rx_timeout.de  = 4'b1000 >> { \tl_i.a_data [6], _154_ };
  assign _050_ = 4'b1110 >> { _051_, \u_reg.hw2reg.intr_state.rx_timeout.de  };
  assign _042_ = 32'd2885593770 >> { _147_, _023_, _022_, \u_reg.fifo_status_rxlvl_qs [0], _046_ };
  assign _061_ = 4'b1110 >> { _062_, \u_reg.hw2reg.intr_state.rx_overflow.de  };
  assign _035_ = 32'd4169727999 >> { _162_, _147_, \u_reg.fifo_status_txlvl_qs [3], _062_, _146_ };
  assign _168_ = 32'd131070 >> { _025_, _022_, \u_reg.fifo_status_rxlvl_qs [0], _023_, _024_ };
  assign _044_ = 8'b11111000 >> { _046_, _168_, _147_ };
  assign _073_ = 64'b0000000000000000111011111111111111111111111111111111111111111111 >> { _165_, _150_, \gen_alert_tx[0].u_prim_alert_sender.state_q [0], _014_, \alert_tx_o[0].alert_p , _015_ };
  assign _070_ = 2'b01 >> \alert_rx_i[0].ping_n ;
  assign _016_ = 2'b01 >> \u_reg.fifo_status_rxlvl_qs [0];
  assign _084_ = 2'b01 >> \u_reg.fifo_status_txlvl_qs [0];
  assign \tl_o.a_ready  = 2'b01 >> \tl_o.d_valid ;
  assign \tl_o.d_user.rsp_intg [0] = 2'b01 >> \tl_o.d_user.rsp_intg [1];
  assign \tl_o.d_user.rsp_intg [5] = 2'b01 >> \tl_o.d_opcode [0];
  assign _068_ = 2'b01 >> \alert_rx_i[0].ack_n ;
  assign \tl_o.d_user.rsp_intg [3] = 2'b01 >> \tl_o.d_size [0];
  assign \alert_tx_o[0].alert_n  = 2'b01 >> _083_;
  dffsre _336_ (
    .C(clk_i),
    .D(_001_),
    .E(_000_),
    .Q(_003_),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _337_ (
    .C(clk_i),
    .D(_002_),
    .E(_000_),
    .Q(_004_),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _338_ (
    .C(clk_i),
    .D(_006_),
    .E(_005_),
    .Q(_008_),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _339_ (
    .C(clk_i),
    .D(_007_),
    .E(_005_),
    .Q(\gen_alert_tx[0].u_prim_alert_sender.i_decode_ping.gen_async.state_q [0]),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _340_ (
    .C(clk_i),
    .D(_010_),
    .E(_009_),
    .Q(\gen_alert_tx[0].u_prim_alert_sender.state_q [0]),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _341_ (
    .C(clk_i),
    .D(_012_),
    .E(_011_),
    .Q(_014_),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _342_ (
    .C(clk_i),
    .D(_013_),
    .E(_011_),
    .Q(_015_),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _343_ (
    .C(clk_i),
    .D(_016_),
    .E(\uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_incr_rptr ),
    .Q(\u_reg.fifo_status_rxlvl_qs [0]),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _344_ (
    .C(clk_i),
    .D(_017_),
    .E(\uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_incr_rptr ),
    .Q(_022_),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _345_ (
    .C(clk_i),
    .D(_018_),
    .E(\uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_incr_rptr ),
    .Q(_023_),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _346_ (
    .C(clk_i),
    .D(_019_),
    .E(\uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_incr_rptr ),
    .Q(_024_),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _347_ (
    .C(clk_i),
    .D(_020_),
    .E(\uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_incr_rptr ),
    .Q(_025_),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _348_ (
    .C(clk_i),
    .D(_021_),
    .E(\uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_incr_rptr ),
    .Q(_026_),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _349_ (
    .C(clk_i),
    .D(_028_),
    .E(\u_reg.hw2reg.intr_state.tx_watermark.de ),
    .Q(_029_),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _350_ (
    .C(clk_i),
    .D(\u_reg.u_reg_if.a_ack ),
    .E(_030_),
    .Q(\tl_o.d_valid ),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _351_ (
    .C(clk_i),
    .D(_031_),
    .E(\u_reg.u_reg_if.a_ack ),
    .Q(\tl_o.d_error ),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _352_ (
    .C(clk_i),
    .D(_032_),
    .E(\u_reg.u_reg_if.a_ack ),
    .Q(\tl_o.d_data [0]),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _353_ (
    .C(clk_i),
    .D(_033_),
    .E(\u_reg.u_reg_if.a_ack ),
    .Q(\tl_o.d_data [1]),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _354_ (
    .C(clk_i),
    .D(_034_),
    .E(\u_reg.u_reg_if.a_ack ),
    .Q(\tl_o.d_data [2]),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _355_ (
    .C(clk_i),
    .D(_035_),
    .E(\u_reg.u_reg_if.a_ack ),
    .Q(\tl_o.d_data [3]),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _356_ (
    .C(clk_i),
    .D(_036_),
    .E(\u_reg.u_reg_if.a_ack ),
    .Q(\tl_o.d_data [4]),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _357_ (
    .C(clk_i),
    .D(_037_),
    .E(\u_reg.u_reg_if.a_ack ),
    .Q(\tl_o.d_data [5]),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _358_ (
    .C(clk_i),
    .D(_038_),
    .E(\u_reg.u_reg_if.a_ack ),
    .Q(\tl_o.d_data [6]),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _359_ (
    .C(clk_i),
    .D(_039_),
    .E(\u_reg.u_reg_if.a_ack ),
    .Q(\tl_o.d_data [7]),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _360_ (
    .C(clk_i),
    .D(_040_),
    .E(\u_reg.u_reg_if.a_ack ),
    .Q(\tl_o.d_data [16]),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _361_ (
    .C(clk_i),
    .D(_041_),
    .E(\u_reg.u_reg_if.a_ack ),
    .Q(\tl_o.d_data [17]),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _362_ (
    .C(clk_i),
    .D(_042_),
    .E(\u_reg.u_reg_if.a_ack ),
    .Q(\tl_o.d_data [18]),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _363_ (
    .C(clk_i),
    .D(_043_),
    .E(\u_reg.u_reg_if.a_ack ),
    .Q(\tl_o.d_data [19]),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _364_ (
    .C(clk_i),
    .D(_044_),
    .E(\u_reg.u_reg_if.a_ack ),
    .Q(\tl_o.d_data [20]),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _365_ (
    .C(clk_i),
    .D(_045_),
    .E(\u_reg.u_reg_if.a_ack ),
    .Q(\tl_o.d_data [21]),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _366_ (
    .C(clk_i),
    .D(_046_),
    .E(\u_reg.u_reg_if.a_ack ),
    .Q(\tl_o.d_data [31]),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _367_ (
    .C(clk_i),
    .D(\tl_i.a_source [0]),
    .E(\u_reg.u_reg_if.a_ack ),
    .Q(\tl_o.d_source [0]),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _368_ (
    .C(clk_i),
    .D(\tl_i.a_source [1]),
    .E(\u_reg.u_reg_if.a_ack ),
    .Q(\tl_o.d_source [1]),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _369_ (
    .C(clk_i),
    .D(\tl_i.a_source [2]),
    .E(\u_reg.u_reg_if.a_ack ),
    .Q(\tl_o.d_source [2]),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _370_ (
    .C(clk_i),
    .D(\tl_i.a_source [3]),
    .E(\u_reg.u_reg_if.a_ack ),
    .Q(\tl_o.d_source [3]),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _371_ (
    .C(clk_i),
    .D(\tl_i.a_source [4]),
    .E(\u_reg.u_reg_if.a_ack ),
    .Q(\tl_o.d_source [4]),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _372_ (
    .C(clk_i),
    .D(\tl_i.a_source [5]),
    .E(\u_reg.u_reg_if.a_ack ),
    .Q(\tl_o.d_source [5]),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _373_ (
    .C(clk_i),
    .D(\tl_i.a_source [6]),
    .E(\u_reg.u_reg_if.a_ack ),
    .Q(\tl_o.d_source [6]),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _374_ (
    .C(clk_i),
    .D(\tl_i.a_source [7]),
    .E(\u_reg.u_reg_if.a_ack ),
    .Q(\tl_o.d_source [7]),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _375_ (
    .C(clk_i),
    .D(\tl_i.a_size [0]),
    .E(\u_reg.u_reg_if.a_ack ),
    .Q(\tl_o.d_size [0]),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _376_ (
    .C(clk_i),
    .D(\tl_i.a_size [1]),
    .E(\u_reg.u_reg_if.a_ack ),
    .Q(\tl_o.d_size [1]),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _377_ (
    .C(clk_i),
    .D(_047_),
    .E(\u_reg.u_reg_if.a_ack ),
    .Q(\tl_o.d_opcode [0]),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _378_ (
    .C(clk_i),
    .D(_048_),
    .E(\u_reg.hw2reg.intr_state.tx_empty.de ),
    .Q(_049_),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _379_ (
    .C(clk_i),
    .D(_050_),
    .E(\u_reg.hw2reg.intr_state.rx_timeout.de ),
    .Q(_051_),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _380_ (
    .C(clk_i),
    .D(_052_),
    .E(\u_reg.hw2reg.intr_state.rx_watermark.de ),
    .Q(_053_),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _381_ (
    .C(clk_i),
    .D(_054_),
    .E(\u_reg.hw2reg.intr_state.rx_frame_err.de ),
    .Q(_055_),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _382_ (
    .C(clk_i),
    .D(_056_),
    .E(\u_reg.hw2reg.intr_state.rx_break_err.de ),
    .Q(_057_),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _383_ (
    .C(clk_i),
    .D(1'b1),
    .E(\u_reg.intg_err ),
    .Q(_058_),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _384_ (
    .C(clk_i),
    .D(_059_),
    .E(\u_reg.hw2reg.intr_state.rx_parity_err.de ),
    .Q(_060_),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _385_ (
    .C(clk_i),
    .D(_061_),
    .E(\u_reg.hw2reg.intr_state.rx_overflow.de ),
    .Q(_062_),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _386_ (
    .C(clk_i),
    .D(_063_),
    .E(1'b1),
    .Q(_075_),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _387_ (
    .C(clk_i),
    .D(_064_),
    .E(1'b1),
    .Q(_076_),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _388_ (
    .C(clk_i),
    .D(_065_),
    .E(1'b1),
    .Q(_027_),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _389_ (
    .C(clk_i),
    .D(_169_),
    .E(1'b1),
    .Q(_066_),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _390_ (
    .C(clk_i),
    .D(_066_),
    .E(1'b1),
    .Q(_077_),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _391_ (
    .C(clk_i),
    .D(_170_),
    .E(1'b1),
    .Q(_067_),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _392_ (
    .C(clk_i),
    .D(_067_),
    .E(1'b1),
    .Q(_078_),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _393_ (
    .C(clk_i),
    .D(\gen_alert_tx[0].u_prim_alert_sender.ack_level ),
    .E(1'b1),
    .Q(\gen_alert_tx[0].u_prim_alert_sender.i_decode_ack.level_q ),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _394_ (
    .C(clk_i),
    .D(\alert_rx_i[0].ack_p ),
    .E(1'b1),
    .Q(_169_),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _395_ (
    .C(clk_i),
    .D(_068_),
    .E(1'b1),
    .Q(_170_),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _396_ (
    .C(clk_i),
    .D(_171_),
    .E(1'b1),
    .Q(\gen_alert_tx[0].u_prim_alert_sender.i_decode_ping.gen_async.diff_pd ),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _397_ (
    .C(clk_i),
    .D(\gen_alert_tx[0].u_prim_alert_sender.i_decode_ping.gen_async.diff_pd ),
    .E(1'b1),
    .Q(_079_),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _398_ (
    .C(clk_i),
    .D(_172_),
    .E(1'b1),
    .Q(_069_),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _399_ (
    .C(clk_i),
    .D(_069_),
    .E(1'b1),
    .Q(_080_),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _400_ (
    .C(clk_i),
    .D(\alert_rx_i[0].ping_p ),
    .E(1'b1),
    .Q(_171_),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _401_ (
    .C(clk_i),
    .D(_070_),
    .E(1'b1),
    .Q(_172_),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _402_ (
    .C(clk_i),
    .D(_071_),
    .E(1'b1),
    .Q(_081_),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _403_ (
    .C(clk_i),
    .D(_072_),
    .E(1'b1),
    .Q(_082_),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _404_ (
    .C(clk_i),
    .D(_073_),
    .E(1'b1),
    .Q(_083_),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _405_ (
    .C(clk_i),
    .D(_074_),
    .E(1'b1),
    .Q(\alert_tx_o[0].alert_p ),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _406_ (
    .C(clk_i),
    .D(_084_),
    .E(\uart_core.u_uart_txfifo.gen_normal_fifo.fifo_incr_wptr ),
    .Q(\u_reg.fifo_status_txlvl_qs [0]),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _407_ (
    .C(clk_i),
    .D(_085_),
    .E(\uart_core.u_uart_txfifo.gen_normal_fifo.fifo_incr_wptr ),
    .Q(\u_reg.fifo_status_txlvl_qs [1]),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _408_ (
    .C(clk_i),
    .D(_086_),
    .E(\uart_core.u_uart_txfifo.gen_normal_fifo.fifo_incr_wptr ),
    .Q(\u_reg.fifo_status_txlvl_qs [2]),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _409_ (
    .C(clk_i),
    .D(_087_),
    .E(\uart_core.u_uart_txfifo.gen_normal_fifo.fifo_incr_wptr ),
    .Q(\u_reg.fifo_status_txlvl_qs [3]),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _410_ (
    .C(clk_i),
    .D(_088_),
    .E(\uart_core.u_uart_txfifo.gen_normal_fifo.fifo_incr_wptr ),
    .Q(\u_reg.fifo_status_txlvl_qs [4]),
    .R(rst_ni),
    .S(1'b1)
  );
  dffsre _411_ (
    .C(clk_i),
    .D(_089_),
    .E(\uart_core.u_uart_txfifo.gen_normal_fifo.fifo_incr_wptr ),
    .Q(\u_reg.fifo_status_txlvl_qs [5]),
    .R(rst_ni),
    .S(1'b1)
  );
  assign { \tl_o.d_user.rsp_intg [6], \tl_o.d_user.rsp_intg [4], \tl_o.d_user.rsp_intg [2] } = { 1'b0, \tl_o.d_size [1], \tl_o.d_error  };
  assign \tl_o.d_sink  = 1'b0;
  assign \tl_o.d_param  = 3'b000;
  assign \tl_o.d_opcode [2:1] = 2'b00;
  assign { \tl_o.d_data [30:22], \tl_o.d_data [15:8] } = { \tl_o.d_data [31], \tl_o.d_data [31], \tl_o.d_data [31], \tl_o.d_data [31], \tl_o.d_data [31], \tl_o.d_data [31], \tl_o.d_data [31], \tl_o.d_data [31], \tl_o.d_data [31], \tl_o.d_data [31], \tl_o.d_data [31], \tl_o.d_data [31], \tl_o.d_data [31], \tl_o.d_data [31], \tl_o.d_data [31], \tl_o.d_data [31], \tl_o.d_data [31] };
  assign intr_tx_watermark_o = 1'b0;
  assign intr_tx_empty_o = 1'b0;
  assign intr_rx_watermark_o = 1'b0;
  assign intr_rx_timeout_o = 1'b0;
  assign intr_rx_parity_err_o = 1'b0;
  assign intr_rx_overflow_o = 1'b0;
  assign intr_rx_frame_err_o = 1'b0;
  assign intr_rx_break_err_o = 1'b0;
  assign cio_tx_o = 1'b1;
  assign cio_tx_en_o = 1'b1;
endmodule
