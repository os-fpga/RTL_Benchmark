-- VHDL data flow description generated from `dec16to288`
--		date : Fri Jul 27 01:34:23 2001


-- Entity Declaration

ENTITY dec16to288 IS
  PORT (
  a : in bit_vector(15 DOWNTO 0) ;	-- a
  clr : in BIT;	-- clr
  en : in BIT;	-- en
  sel : in bit_vector(4 DOWNTO 0) ;	-- sel
  o1 : out bit_vector(15 DOWNTO 0) ;	-- o1
  o2 : out bit_vector(15 DOWNTO 0) ;	-- o2
  o3 : out bit_vector(15 DOWNTO 0) ;	-- o3
  o4 : out bit_vector(15 DOWNTO 0) ;	-- o4
  o5 : out bit_vector(15 DOWNTO 0) ;	-- o5
  o6 : out bit_vector(15 DOWNTO 0) ;	-- o6
  o7 : out bit_vector(15 DOWNTO 0) ;	-- o7
  o8 : out bit_vector(15 DOWNTO 0) ;	-- o8
  o9 : out bit_vector(15 DOWNTO 0) ;	-- o9
  o10 : out bit_vector(15 DOWNTO 0) ;	-- o10
  o11 : out bit_vector(15 DOWNTO 0) ;	-- o11
  o12 : out bit_vector(15 DOWNTO 0) ;	-- o12
  o13 : out bit_vector(15 DOWNTO 0) ;	-- o13
  o14 : out bit_vector(15 DOWNTO 0) ;	-- o14
  o15 : out bit_vector(15 DOWNTO 0) ;	-- o15
  o16 : out bit_vector(15 DOWNTO 0) ;	-- o16
  o17 : out bit_vector(15 DOWNTO 0) ;	-- o17
  o18 : out bit_vector(15 DOWNTO 0) ;	-- o18
  vdd : in BIT;	-- vdd
  vss : in BIT	-- vss
  );
END dec16to288;


-- Architecture Declaration

ARCHITECTURE behaviour_data_flow OF dec16to288 IS
  SIGNAL reg1 : REG_VECTOR(15 DOWNTO 0) REGISTER;	-- reg1
  SIGNAL reg2 : REG_VECTOR(15 DOWNTO 0) REGISTER;	-- reg2
  SIGNAL reg3 : REG_VECTOR(15 DOWNTO 0) REGISTER;	-- reg3
  SIGNAL reg4 : REG_VECTOR(15 DOWNTO 0) REGISTER;	-- reg4
  SIGNAL reg5 : REG_VECTOR(15 DOWNTO 0) REGISTER;	-- reg5
  SIGNAL reg6 : REG_VECTOR(15 DOWNTO 0) REGISTER;	-- reg6
  SIGNAL reg7 : REG_VECTOR(15 DOWNTO 0) REGISTER;	-- reg7
  SIGNAL reg8 : REG_VECTOR(15 DOWNTO 0) REGISTER;	-- reg8
  SIGNAL reg9 : REG_VECTOR(15 DOWNTO 0) REGISTER;	-- reg9
  SIGNAL reg10 : REG_VECTOR(15 DOWNTO 0) REGISTER;	-- reg10
  SIGNAL reg11 : REG_VECTOR(15 DOWNTO 0) REGISTER;	-- reg11
  SIGNAL reg12 : REG_VECTOR(15 DOWNTO 0) REGISTER;	-- reg12
  SIGNAL reg13 : REG_VECTOR(15 DOWNTO 0) REGISTER;	-- reg13
  SIGNAL reg14 : REG_VECTOR(15 DOWNTO 0) REGISTER;	-- reg14
  SIGNAL reg15 : REG_VECTOR(15 DOWNTO 0) REGISTER;	-- reg15
  SIGNAL reg16 : REG_VECTOR(15 DOWNTO 0) REGISTER;	-- reg16
  SIGNAL reg17 : REG_VECTOR(15 DOWNTO 0) REGISTER;	-- reg17
  SIGNAL reg18 : REG_VECTOR(15 DOWNTO 0) REGISTER;	-- reg18
  SIGNAL aux63 : BIT;		-- aux63
  SIGNAL aux62 : BIT;		-- aux62
  SIGNAL aux61 : BIT;		-- aux61
  SIGNAL aux60 : BIT;		-- aux60
  SIGNAL aux59 : BIT;		-- aux59
  SIGNAL aux58 : BIT;		-- aux58
  SIGNAL aux57 : BIT;		-- aux57
  SIGNAL aux56 : BIT;		-- aux56
  SIGNAL aux55 : BIT;		-- aux55
  SIGNAL aux54 : BIT;		-- aux54
  SIGNAL aux53 : BIT;		-- aux53
  SIGNAL aux52 : BIT;		-- aux52
  SIGNAL aux51 : BIT;		-- aux51
  SIGNAL aux50 : BIT;		-- aux50
  SIGNAL aux49 : BIT;		-- aux49
  SIGNAL aux48 : BIT;		-- aux48
  SIGNAL aux47 : BIT;		-- aux47
  SIGNAL aux46 : BIT;		-- aux46
  SIGNAL aux45 : BIT;		-- aux45
  SIGNAL aux44 : BIT;		-- aux44
  SIGNAL aux43 : BIT;		-- aux43
  SIGNAL aux42 : BIT;		-- aux42
  SIGNAL aux41 : BIT;		-- aux41
  SIGNAL aux40 : BIT;		-- aux40
  SIGNAL aux39 : BIT;		-- aux39
  SIGNAL aux37 : BIT;		-- aux37
  SIGNAL aux35 : BIT;		-- aux35
  SIGNAL aux33 : BIT;		-- aux33
  SIGNAL aux64 : BIT;		-- aux64
  SIGNAL aux65 : BIT;		-- aux65

BEGIN
  ASSERT ((vdd and not (vss)) = '1')
    REPORT "power supply is missing on dec16to288x"
    SEVERITY WARNING;

  aux65 <= (not (sel (3)) and not (sel (4)));
  aux64 <= (not (sel (4)) and sel (3));
  aux33 <= (not (sel (2)) and not (sel (1)) and sel (0));
  aux35 <= (sel (4) and not (sel (3)) and aux33);
  aux37 <= (not (sel (2)) and not (sel (1)) and not (sel (0)));
  aux39 <= (sel (4) and not (sel (3)) and aux37);
  aux40 <= (sel (1) and sel (0));
  aux41 <= (sel (2) and aux40);
  aux42 <= (aux64 and aux41);
  aux43 <= (not (sel (0)) and sel (1));
  aux44 <= (sel (2) and aux43);
  aux45 <= (aux64 and aux44);
  aux46 <= (sel (2) and not (sel (1)) and sel (0));
  aux47 <= (aux64 and aux46);
  aux48 <= (sel (2) and not (sel (1)) and not (sel (0)));
  aux49 <= (aux64 and aux48);
  aux50 <= (not (sel (2)) and aux40);
  aux51 <= (aux64 and aux50);
  aux52 <= (not (sel (2)) and aux43);
  aux53 <= (aux64 and aux52);
  aux54 <= (aux64 and aux33);
  aux55 <= (aux64 and aux37);
  aux56 <= (aux65 and aux41);
  aux57 <= (aux65 and aux44);
  aux58 <= (aux65 and aux46);
  aux59 <= (aux65 and aux48);
  aux60 <= (aux65 and aux50);
  aux61 <= (aux65 and aux52);
  aux62 <= (not (sel (4)) and not (sel (3)) and aux33);
  aux63 <= (not (sel (4)) and not (sel (3)) and aux37);
  label0 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg18 (0) <= GUARDED (a (0) and aux35);
  END BLOCK label0;
  label1 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg18 (1) <= GUARDED (a (1) and aux35);
  END BLOCK label1;
  label2 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg18 (2) <= GUARDED (a (2) and aux35);
  END BLOCK label2;
  label3 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg18 (3) <= GUARDED (a (3) and aux35);
  END BLOCK label3;
  label4 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg18 (4) <= GUARDED (a (4) and aux35);
  END BLOCK label4;
  label5 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg18 (5) <= GUARDED (a (5) and aux35);
  END BLOCK label5;
  label6 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg18 (6) <= GUARDED (a (6) and aux35);
  END BLOCK label6;
  label7 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg18 (7) <= GUARDED (a (7) and aux35);
  END BLOCK label7;
  label8 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg18 (8) <= GUARDED (a (8) and aux35);
  END BLOCK label8;
  label9 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg18 (9) <= GUARDED (a (9) and aux35);
  END BLOCK label9;
  label10 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg18 (10) <= GUARDED (a (10) and aux35);
  END BLOCK label10;
  label11 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg18 (11) <= GUARDED (a (11) and aux35);
  END BLOCK label11;
  label12 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg18 (12) <= GUARDED (a (12) and aux35);
  END BLOCK label12;
  label13 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg18 (13) <= GUARDED (a (13) and aux35);
  END BLOCK label13;
  label14 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg18 (14) <= GUARDED (a (14) and aux35);
  END BLOCK label14;
  label15 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg18 (15) <= GUARDED (a (15) and aux35);
  END BLOCK label15;
  label16 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg17 (0) <= GUARDED (a (0) and aux39);
  END BLOCK label16;
  label17 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg17 (1) <= GUARDED (a (1) and aux39);
  END BLOCK label17;
  label18 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg17 (2) <= GUARDED (a (2) and aux39);
  END BLOCK label18;
  label19 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg17 (3) <= GUARDED (a (3) and aux39);
  END BLOCK label19;
  label20 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg17 (4) <= GUARDED (a (4) and aux39);
  END BLOCK label20;
  label21 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg17 (5) <= GUARDED (a (5) and aux39);
  END BLOCK label21;
  label22 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg17 (6) <= GUARDED (a (6) and aux39);
  END BLOCK label22;
  label23 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg17 (7) <= GUARDED (a (7) and aux39);
  END BLOCK label23;
  label24 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg17 (8) <= GUARDED (a (8) and aux39);
  END BLOCK label24;
  label25 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg17 (9) <= GUARDED (a (9) and aux39);
  END BLOCK label25;
  label26 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg17 (10) <= GUARDED (a (10) and aux39);
  END BLOCK label26;
  label27 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg17 (11) <= GUARDED (a (11) and aux39);
  END BLOCK label27;
  label28 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg17 (12) <= GUARDED (a (12) and aux39);
  END BLOCK label28;
  label29 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg17 (13) <= GUARDED (a (13) and aux39);
  END BLOCK label29;
  label30 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg17 (14) <= GUARDED (a (14) and aux39);
  END BLOCK label30;
  label31 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg17 (15) <= GUARDED (a (15) and aux39);
  END BLOCK label31;
  label32 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg16 (0) <= GUARDED (a (0) and aux42);
  END BLOCK label32;
  label33 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg16 (1) <= GUARDED (a (1) and aux42);
  END BLOCK label33;
  label34 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg16 (2) <= GUARDED (a (2) and aux42);
  END BLOCK label34;
  label35 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg16 (3) <= GUARDED (a (3) and aux42);
  END BLOCK label35;
  label36 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg16 (4) <= GUARDED (a (4) and aux42);
  END BLOCK label36;
  label37 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg16 (5) <= GUARDED (a (5) and aux42);
  END BLOCK label37;
  label38 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg16 (6) <= GUARDED (a (6) and aux42);
  END BLOCK label38;
  label39 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg16 (7) <= GUARDED (a (7) and aux42);
  END BLOCK label39;
  label40 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg16 (8) <= GUARDED (a (8) and aux42);
  END BLOCK label40;
  label41 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg16 (9) <= GUARDED (a (9) and aux42);
  END BLOCK label41;
  label42 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg16 (10) <= GUARDED (a (10) and aux42);
  END BLOCK label42;
  label43 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg16 (11) <= GUARDED (a (11) and aux42);
  END BLOCK label43;
  label44 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg16 (12) <= GUARDED (a (12) and aux42);
  END BLOCK label44;
  label45 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg16 (13) <= GUARDED (a (13) and aux42);
  END BLOCK label45;
  label46 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg16 (14) <= GUARDED (a (14) and aux42);
  END BLOCK label46;
  label47 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg16 (15) <= GUARDED (a (15) and aux42);
  END BLOCK label47;
  label48 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg15 (0) <= GUARDED (a (0) and aux45);
  END BLOCK label48;
  label49 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg15 (1) <= GUARDED (a (1) and aux45);
  END BLOCK label49;
  label50 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg15 (2) <= GUARDED (a (2) and aux45);
  END BLOCK label50;
  label51 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg15 (3) <= GUARDED (a (3) and aux45);
  END BLOCK label51;
  label52 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg15 (4) <= GUARDED (a (4) and aux45);
  END BLOCK label52;
  label53 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg15 (5) <= GUARDED (a (5) and aux45);
  END BLOCK label53;
  label54 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg15 (6) <= GUARDED (a (6) and aux45);
  END BLOCK label54;
  label55 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg15 (7) <= GUARDED (a (7) and aux45);
  END BLOCK label55;
  label56 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg15 (8) <= GUARDED (a (8) and aux45);
  END BLOCK label56;
  label57 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg15 (9) <= GUARDED (a (9) and aux45);
  END BLOCK label57;
  label58 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg15 (10) <= GUARDED (a (10) and aux45);
  END BLOCK label58;
  label59 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg15 (11) <= GUARDED (a (11) and aux45);
  END BLOCK label59;
  label60 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg15 (12) <= GUARDED (a (12) and aux45);
  END BLOCK label60;
  label61 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg15 (13) <= GUARDED (a (13) and aux45);
  END BLOCK label61;
  label62 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg15 (14) <= GUARDED (a (14) and aux45);
  END BLOCK label62;
  label63 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg15 (15) <= GUARDED (a (15) and aux45);
  END BLOCK label63;
  label64 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg14 (0) <= GUARDED (a (0) and aux47);
  END BLOCK label64;
  label65 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg14 (1) <= GUARDED (a (1) and aux47);
  END BLOCK label65;
  label66 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg14 (2) <= GUARDED (a (2) and aux47);
  END BLOCK label66;
  label67 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg14 (3) <= GUARDED (a (3) and aux47);
  END BLOCK label67;
  label68 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg14 (4) <= GUARDED (a (4) and aux47);
  END BLOCK label68;
  label69 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg14 (5) <= GUARDED (a (5) and aux47);
  END BLOCK label69;
  label70 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg14 (6) <= GUARDED (a (6) and aux47);
  END BLOCK label70;
  label71 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg14 (7) <= GUARDED (a (7) and aux47);
  END BLOCK label71;
  label72 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg14 (8) <= GUARDED (a (8) and aux47);
  END BLOCK label72;
  label73 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg14 (9) <= GUARDED (a (9) and aux47);
  END BLOCK label73;
  label74 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg14 (10) <= GUARDED (a (10) and aux47);
  END BLOCK label74;
  label75 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg14 (11) <= GUARDED (a (11) and aux47);
  END BLOCK label75;
  label76 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg14 (12) <= GUARDED (a (12) and aux47);
  END BLOCK label76;
  label77 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg14 (13) <= GUARDED (a (13) and aux47);
  END BLOCK label77;
  label78 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg14 (14) <= GUARDED (a (14) and aux47);
  END BLOCK label78;
  label79 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg14 (15) <= GUARDED (a (15) and aux47);
  END BLOCK label79;
  label80 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg13 (0) <= GUARDED (a (0) and aux49);
  END BLOCK label80;
  label81 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg13 (1) <= GUARDED (a (1) and aux49);
  END BLOCK label81;
  label82 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg13 (2) <= GUARDED (a (2) and aux49);
  END BLOCK label82;
  label83 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg13 (3) <= GUARDED (a (3) and aux49);
  END BLOCK label83;
  label84 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg13 (4) <= GUARDED (a (4) and aux49);
  END BLOCK label84;
  label85 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg13 (5) <= GUARDED (a (5) and aux49);
  END BLOCK label85;
  label86 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg13 (6) <= GUARDED (a (6) and aux49);
  END BLOCK label86;
  label87 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg13 (7) <= GUARDED (a (7) and aux49);
  END BLOCK label87;
  label88 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg13 (8) <= GUARDED (a (8) and aux49);
  END BLOCK label88;
  label89 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg13 (9) <= GUARDED (a (9) and aux49);
  END BLOCK label89;
  label90 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg13 (10) <= GUARDED (a (10) and aux49);
  END BLOCK label90;
  label91 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg13 (11) <= GUARDED (a (11) and aux49);
  END BLOCK label91;
  label92 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg13 (12) <= GUARDED (a (12) and aux49);
  END BLOCK label92;
  label93 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg13 (13) <= GUARDED (a (13) and aux49);
  END BLOCK label93;
  label94 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg13 (14) <= GUARDED (a (14) and aux49);
  END BLOCK label94;
  label95 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg13 (15) <= GUARDED (a (15) and aux49);
  END BLOCK label95;
  label96 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg12 (0) <= GUARDED (a (0) and aux51);
  END BLOCK label96;
  label97 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg12 (1) <= GUARDED (a (1) and aux51);
  END BLOCK label97;
  label98 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg12 (2) <= GUARDED (a (2) and aux51);
  END BLOCK label98;
  label99 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg12 (3) <= GUARDED (a (3) and aux51);
  END BLOCK label99;
  label100 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg12 (4) <= GUARDED (a (4) and aux51);
  END BLOCK label100;
  label101 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg12 (5) <= GUARDED (a (5) and aux51);
  END BLOCK label101;
  label102 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg12 (6) <= GUARDED (a (6) and aux51);
  END BLOCK label102;
  label103 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg12 (7) <= GUARDED (a (7) and aux51);
  END BLOCK label103;
  label104 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg12 (8) <= GUARDED (a (8) and aux51);
  END BLOCK label104;
  label105 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg12 (9) <= GUARDED (a (9) and aux51);
  END BLOCK label105;
  label106 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg12 (10) <= GUARDED (a (10) and aux51);
  END BLOCK label106;
  label107 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg12 (11) <= GUARDED (a (11) and aux51);
  END BLOCK label107;
  label108 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg12 (12) <= GUARDED (a (12) and aux51);
  END BLOCK label108;
  label109 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg12 (13) <= GUARDED (a (13) and aux51);
  END BLOCK label109;
  label110 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg12 (14) <= GUARDED (a (14) and aux51);
  END BLOCK label110;
  label111 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg12 (15) <= GUARDED (a (15) and aux51);
  END BLOCK label111;
  label112 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg11 (0) <= GUARDED (a (0) and aux53);
  END BLOCK label112;
  label113 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg11 (1) <= GUARDED (a (1) and aux53);
  END BLOCK label113;
  label114 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg11 (2) <= GUARDED (a (2) and aux53);
  END BLOCK label114;
  label115 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg11 (3) <= GUARDED (a (3) and aux53);
  END BLOCK label115;
  label116 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg11 (4) <= GUARDED (a (4) and aux53);
  END BLOCK label116;
  label117 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg11 (5) <= GUARDED (a (5) and aux53);
  END BLOCK label117;
  label118 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg11 (6) <= GUARDED (a (6) and aux53);
  END BLOCK label118;
  label119 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg11 (7) <= GUARDED (a (7) and aux53);
  END BLOCK label119;
  label120 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg11 (8) <= GUARDED (a (8) and aux53);
  END BLOCK label120;
  label121 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg11 (9) <= GUARDED (a (9) and aux53);
  END BLOCK label121;
  label122 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg11 (10) <= GUARDED (a (10) and aux53);
  END BLOCK label122;
  label123 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg11 (11) <= GUARDED (a (11) and aux53);
  END BLOCK label123;
  label124 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg11 (12) <= GUARDED (a (12) and aux53);
  END BLOCK label124;
  label125 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg11 (13) <= GUARDED (a (13) and aux53);
  END BLOCK label125;
  label126 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg11 (14) <= GUARDED (a (14) and aux53);
  END BLOCK label126;
  label127 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg11 (15) <= GUARDED (a (15) and aux53);
  END BLOCK label127;
  label128 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg10 (0) <= GUARDED (a (0) and aux54);
  END BLOCK label128;
  label129 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg10 (1) <= GUARDED (a (1) and aux54);
  END BLOCK label129;
  label130 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg10 (2) <= GUARDED (a (2) and aux54);
  END BLOCK label130;
  label131 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg10 (3) <= GUARDED (a (3) and aux54);
  END BLOCK label131;
  label132 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg10 (4) <= GUARDED (a (4) and aux54);
  END BLOCK label132;
  label133 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg10 (5) <= GUARDED (a (5) and aux54);
  END BLOCK label133;
  label134 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg10 (6) <= GUARDED (a (6) and aux54);
  END BLOCK label134;
  label135 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg10 (7) <= GUARDED (a (7) and aux54);
  END BLOCK label135;
  label136 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg10 (8) <= GUARDED (a (8) and aux54);
  END BLOCK label136;
  label137 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg10 (9) <= GUARDED (a (9) and aux54);
  END BLOCK label137;
  label138 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg10 (10) <= GUARDED (a (10) and aux54);
  END BLOCK label138;
  label139 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg10 (11) <= GUARDED (a (11) and aux54);
  END BLOCK label139;
  label140 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg10 (12) <= GUARDED (a (12) and aux54);
  END BLOCK label140;
  label141 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg10 (13) <= GUARDED (a (13) and aux54);
  END BLOCK label141;
  label142 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg10 (14) <= GUARDED (a (14) and aux54);
  END BLOCK label142;
  label143 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg10 (15) <= GUARDED (a (15) and aux54);
  END BLOCK label143;
  label144 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg9 (0) <= GUARDED (a (0) and aux55);
  END BLOCK label144;
  label145 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg9 (1) <= GUARDED (a (1) and aux55);
  END BLOCK label145;
  label146 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg9 (2) <= GUARDED (a (2) and aux55);
  END BLOCK label146;
  label147 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg9 (3) <= GUARDED (a (3) and aux55);
  END BLOCK label147;
  label148 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg9 (4) <= GUARDED (a (4) and aux55);
  END BLOCK label148;
  label149 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg9 (5) <= GUARDED (a (5) and aux55);
  END BLOCK label149;
  label150 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg9 (6) <= GUARDED (a (6) and aux55);
  END BLOCK label150;
  label151 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg9 (7) <= GUARDED (a (7) and aux55);
  END BLOCK label151;
  label152 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg9 (8) <= GUARDED (a (8) and aux55);
  END BLOCK label152;
  label153 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg9 (9) <= GUARDED (a (9) and aux55);
  END BLOCK label153;
  label154 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg9 (10) <= GUARDED (a (10) and aux55);
  END BLOCK label154;
  label155 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg9 (11) <= GUARDED (a (11) and aux55);
  END BLOCK label155;
  label156 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg9 (12) <= GUARDED (a (12) and aux55);
  END BLOCK label156;
  label157 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg9 (13) <= GUARDED (a (13) and aux55);
  END BLOCK label157;
  label158 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg9 (14) <= GUARDED (a (14) and aux55);
  END BLOCK label158;
  label159 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg9 (15) <= GUARDED (a (15) and aux55);
  END BLOCK label159;
  label160 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg8 (0) <= GUARDED (a (0) and aux56);
  END BLOCK label160;
  label161 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg8 (1) <= GUARDED (a (1) and aux56);
  END BLOCK label161;
  label162 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg8 (2) <= GUARDED (a (2) and aux56);
  END BLOCK label162;
  label163 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg8 (3) <= GUARDED (a (3) and aux56);
  END BLOCK label163;
  label164 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg8 (4) <= GUARDED (a (4) and aux56);
  END BLOCK label164;
  label165 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg8 (5) <= GUARDED (a (5) and aux56);
  END BLOCK label165;
  label166 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg8 (6) <= GUARDED (a (6) and aux56);
  END BLOCK label166;
  label167 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg8 (7) <= GUARDED (a (7) and aux56);
  END BLOCK label167;
  label168 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg8 (8) <= GUARDED (a (8) and aux56);
  END BLOCK label168;
  label169 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg8 (9) <= GUARDED (a (9) and aux56);
  END BLOCK label169;
  label170 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg8 (10) <= GUARDED (a (10) and aux56);
  END BLOCK label170;
  label171 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg8 (11) <= GUARDED (a (11) and aux56);
  END BLOCK label171;
  label172 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg8 (12) <= GUARDED (a (12) and aux56);
  END BLOCK label172;
  label173 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg8 (13) <= GUARDED (a (13) and aux56);
  END BLOCK label173;
  label174 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg8 (14) <= GUARDED (a (14) and aux56);
  END BLOCK label174;
  label175 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg8 (15) <= GUARDED (a (15) and aux56);
  END BLOCK label175;
  label176 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg7 (0) <= GUARDED (a (0) and aux57);
  END BLOCK label176;
  label177 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg7 (1) <= GUARDED (a (1) and aux57);
  END BLOCK label177;
  label178 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg7 (2) <= GUARDED (a (2) and aux57);
  END BLOCK label178;
  label179 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg7 (3) <= GUARDED (a (3) and aux57);
  END BLOCK label179;
  label180 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg7 (4) <= GUARDED (a (4) and aux57);
  END BLOCK label180;
  label181 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg7 (5) <= GUARDED (a (5) and aux57);
  END BLOCK label181;
  label182 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg7 (6) <= GUARDED (a (6) and aux57);
  END BLOCK label182;
  label183 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg7 (7) <= GUARDED (a (7) and aux57);
  END BLOCK label183;
  label184 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg7 (8) <= GUARDED (a (8) and aux57);
  END BLOCK label184;
  label185 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg7 (9) <= GUARDED (a (9) and aux57);
  END BLOCK label185;
  label186 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg7 (10) <= GUARDED (a (10) and aux57);
  END BLOCK label186;
  label187 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg7 (11) <= GUARDED (a (11) and aux57);
  END BLOCK label187;
  label188 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg7 (12) <= GUARDED (a (12) and aux57);
  END BLOCK label188;
  label189 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg7 (13) <= GUARDED (a (13) and aux57);
  END BLOCK label189;
  label190 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg7 (14) <= GUARDED (a (14) and aux57);
  END BLOCK label190;
  label191 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg7 (15) <= GUARDED (a (15) and aux57);
  END BLOCK label191;
  label192 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg6 (0) <= GUARDED (a (0) and aux58);
  END BLOCK label192;
  label193 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg6 (1) <= GUARDED (a (1) and aux58);
  END BLOCK label193;
  label194 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg6 (2) <= GUARDED (a (2) and aux58);
  END BLOCK label194;
  label195 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg6 (3) <= GUARDED (a (3) and aux58);
  END BLOCK label195;
  label196 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg6 (4) <= GUARDED (a (4) and aux58);
  END BLOCK label196;
  label197 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg6 (5) <= GUARDED (a (5) and aux58);
  END BLOCK label197;
  label198 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg6 (6) <= GUARDED (a (6) and aux58);
  END BLOCK label198;
  label199 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg6 (7) <= GUARDED (a (7) and aux58);
  END BLOCK label199;
  label200 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg6 (8) <= GUARDED (a (8) and aux58);
  END BLOCK label200;
  label201 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg6 (9) <= GUARDED (a (9) and aux58);
  END BLOCK label201;
  label202 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg6 (10) <= GUARDED (a (10) and aux58);
  END BLOCK label202;
  label203 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg6 (11) <= GUARDED (a (11) and aux58);
  END BLOCK label203;
  label204 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg6 (12) <= GUARDED (a (12) and aux58);
  END BLOCK label204;
  label205 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg6 (13) <= GUARDED (a (13) and aux58);
  END BLOCK label205;
  label206 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg6 (14) <= GUARDED (a (14) and aux58);
  END BLOCK label206;
  label207 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg6 (15) <= GUARDED (a (15) and aux58);
  END BLOCK label207;
  label208 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg5 (0) <= GUARDED (a (0) and aux59);
  END BLOCK label208;
  label209 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg5 (1) <= GUARDED (a (1) and aux59);
  END BLOCK label209;
  label210 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg5 (2) <= GUARDED (a (2) and aux59);
  END BLOCK label210;
  label211 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg5 (3) <= GUARDED (a (3) and aux59);
  END BLOCK label211;
  label212 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg5 (4) <= GUARDED (a (4) and aux59);
  END BLOCK label212;
  label213 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg5 (5) <= GUARDED (a (5) and aux59);
  END BLOCK label213;
  label214 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg5 (6) <= GUARDED (a (6) and aux59);
  END BLOCK label214;
  label215 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg5 (7) <= GUARDED (a (7) and aux59);
  END BLOCK label215;
  label216 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg5 (8) <= GUARDED (a (8) and aux59);
  END BLOCK label216;
  label217 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg5 (9) <= GUARDED (a (9) and aux59);
  END BLOCK label217;
  label218 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg5 (10) <= GUARDED (a (10) and aux59);
  END BLOCK label218;
  label219 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg5 (11) <= GUARDED (a (11) and aux59);
  END BLOCK label219;
  label220 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg5 (12) <= GUARDED (a (12) and aux59);
  END BLOCK label220;
  label221 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg5 (13) <= GUARDED (a (13) and aux59);
  END BLOCK label221;
  label222 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg5 (14) <= GUARDED (a (14) and aux59);
  END BLOCK label222;
  label223 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg5 (15) <= GUARDED (a (15) and aux59);
  END BLOCK label223;
  label224 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg4 (0) <= GUARDED (a (0) and aux60);
  END BLOCK label224;
  label225 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg4 (1) <= GUARDED (a (1) and aux60);
  END BLOCK label225;
  label226 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg4 (2) <= GUARDED (a (2) and aux60);
  END BLOCK label226;
  label227 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg4 (3) <= GUARDED (a (3) and aux60);
  END BLOCK label227;
  label228 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg4 (4) <= GUARDED (a (4) and aux60);
  END BLOCK label228;
  label229 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg4 (5) <= GUARDED (a (5) and aux60);
  END BLOCK label229;
  label230 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg4 (6) <= GUARDED (a (6) and aux60);
  END BLOCK label230;
  label231 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg4 (7) <= GUARDED (a (7) and aux60);
  END BLOCK label231;
  label232 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg4 (8) <= GUARDED (a (8) and aux60);
  END BLOCK label232;
  label233 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg4 (9) <= GUARDED (a (9) and aux60);
  END BLOCK label233;
  label234 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg4 (10) <= GUARDED (a (10) and aux60);
  END BLOCK label234;
  label235 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg4 (11) <= GUARDED (a (11) and aux60);
  END BLOCK label235;
  label236 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg4 (12) <= GUARDED (a (12) and aux60);
  END BLOCK label236;
  label237 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg4 (13) <= GUARDED (a (13) and aux60);
  END BLOCK label237;
  label238 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg4 (14) <= GUARDED (a (14) and aux60);
  END BLOCK label238;
  label239 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg4 (15) <= GUARDED (a (15) and aux60);
  END BLOCK label239;
  label240 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg3 (0) <= GUARDED (a (0) and aux61);
  END BLOCK label240;
  label241 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg3 (1) <= GUARDED (a (1) and aux61);
  END BLOCK label241;
  label242 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg3 (2) <= GUARDED (a (2) and aux61);
  END BLOCK label242;
  label243 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg3 (3) <= GUARDED (a (3) and aux61);
  END BLOCK label243;
  label244 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg3 (4) <= GUARDED (a (4) and aux61);
  END BLOCK label244;
  label245 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg3 (5) <= GUARDED (a (5) and aux61);
  END BLOCK label245;
  label246 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg3 (6) <= GUARDED (a (6) and aux61);
  END BLOCK label246;
  label247 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg3 (7) <= GUARDED (a (7) and aux61);
  END BLOCK label247;
  label248 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg3 (8) <= GUARDED (a (8) and aux61);
  END BLOCK label248;
  label249 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg3 (9) <= GUARDED (a (9) and aux61);
  END BLOCK label249;
  label250 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg3 (10) <= GUARDED (a (10) and aux61);
  END BLOCK label250;
  label251 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg3 (11) <= GUARDED (a (11) and aux61);
  END BLOCK label251;
  label252 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg3 (12) <= GUARDED (a (12) and aux61);
  END BLOCK label252;
  label253 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg3 (13) <= GUARDED (a (13) and aux61);
  END BLOCK label253;
  label254 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg3 (14) <= GUARDED (a (14) and aux61);
  END BLOCK label254;
  label255 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg3 (15) <= GUARDED (a (15) and aux61);
  END BLOCK label255;
  label256 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg2 (0) <= GUARDED (a (0) and aux62);
  END BLOCK label256;
  label257 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg2 (1) <= GUARDED (a (1) and aux62);
  END BLOCK label257;
  label258 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg2 (2) <= GUARDED (a (2) and aux62);
  END BLOCK label258;
  label259 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg2 (3) <= GUARDED (a (3) and aux62);
  END BLOCK label259;
  label260 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg2 (4) <= GUARDED (a (4) and aux62);
  END BLOCK label260;
  label261 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg2 (5) <= GUARDED (a (5) and aux62);
  END BLOCK label261;
  label262 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg2 (6) <= GUARDED (a (6) and aux62);
  END BLOCK label262;
  label263 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg2 (7) <= GUARDED (a (7) and aux62);
  END BLOCK label263;
  label264 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg2 (8) <= GUARDED (a (8) and aux62);
  END BLOCK label264;
  label265 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg2 (9) <= GUARDED (a (9) and aux62);
  END BLOCK label265;
  label266 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg2 (10) <= GUARDED (a (10) and aux62);
  END BLOCK label266;
  label267 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg2 (11) <= GUARDED (a (11) and aux62);
  END BLOCK label267;
  label268 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg2 (12) <= GUARDED (a (12) and aux62);
  END BLOCK label268;
  label269 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg2 (13) <= GUARDED (a (13) and aux62);
  END BLOCK label269;
  label270 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg2 (14) <= GUARDED (a (14) and aux62);
  END BLOCK label270;
  label271 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg2 (15) <= GUARDED (a (15) and aux62);
  END BLOCK label271;
  label272 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg1 (0) <= GUARDED (a (0) and aux63);
  END BLOCK label272;
  label273 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg1 (1) <= GUARDED (a (1) and aux63);
  END BLOCK label273;
  label274 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg1 (2) <= GUARDED (a (2) and aux63);
  END BLOCK label274;
  label275 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg1 (3) <= GUARDED (a (3) and aux63);
  END BLOCK label275;
  label276 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg1 (4) <= GUARDED (a (4) and aux63);
  END BLOCK label276;
  label277 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg1 (5) <= GUARDED (a (5) and aux63);
  END BLOCK label277;
  label278 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg1 (6) <= GUARDED (a (6) and aux63);
  END BLOCK label278;
  label279 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg1 (7) <= GUARDED (a (7) and aux63);
  END BLOCK label279;
  label280 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg1 (8) <= GUARDED (a (8) and aux63);
  END BLOCK label280;
  label281 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg1 (9) <= GUARDED (a (9) and aux63);
  END BLOCK label281;
  label282 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg1 (10) <= GUARDED (a (10) and aux63);
  END BLOCK label282;
  label283 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg1 (11) <= GUARDED (a (11) and aux63);
  END BLOCK label283;
  label284 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg1 (12) <= GUARDED (a (12) and aux63);
  END BLOCK label284;
  label285 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg1 (13) <= GUARDED (a (13) and aux63);
  END BLOCK label285;
  label286 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg1 (14) <= GUARDED (a (14) and aux63);
  END BLOCK label286;
  label287 : BLOCK ((en and not (en'STABLE)) = '1')
  BEGIN
    reg1 (15) <= GUARDED (a (15) and aux63);
  END BLOCK label287;

o18 (0) <= (not (clr) and reg18 (0));

o18 (1) <= (not (clr) and reg18 (1));

o18 (2) <= (not (clr) and reg18 (2));

o18 (3) <= (not (clr) and reg18 (3));

o18 (4) <= (not (clr) and reg18 (4));

o18 (5) <= (not (clr) and reg18 (5));

o18 (6) <= (not (clr) and reg18 (6));

o18 (7) <= (not (clr) and reg18 (7));

o18 (8) <= (not (clr) and reg18 (8));

o18 (9) <= (not (clr) and reg18 (9));

o18 (10) <= (not (clr) and reg18 (10));

o18 (11) <= (not (clr) and reg18 (11));

o18 (12) <= (not (clr) and reg18 (12));

o18 (13) <= (not (clr) and reg18 (13));

o18 (14) <= (not (clr) and reg18 (14));

o18 (15) <= (not (clr) and reg18 (15));

o17 (0) <= (not (clr) and reg17 (0));

o17 (1) <= (not (clr) and reg17 (1));

o17 (2) <= (not (clr) and reg17 (2));

o17 (3) <= (not (clr) and reg17 (3));

o17 (4) <= (not (clr) and reg17 (4));

o17 (5) <= (not (clr) and reg17 (5));

o17 (6) <= (not (clr) and reg17 (6));

o17 (7) <= (not (clr) and reg17 (7));

o17 (8) <= (not (clr) and reg17 (8));

o17 (9) <= (not (clr) and reg17 (9));

o17 (10) <= (not (clr) and reg17 (10));

o17 (11) <= (not (clr) and reg17 (11));

o17 (12) <= (not (clr) and reg17 (12));

o17 (13) <= (not (clr) and reg17 (13));

o17 (14) <= (not (clr) and reg17 (14));

o17 (15) <= (not (clr) and reg17 (15));

o16 (0) <= (not (clr) and reg16 (0));

o16 (1) <= (not (clr) and reg16 (1));

o16 (2) <= (not (clr) and reg16 (2));

o16 (3) <= (not (clr) and reg16 (3));

o16 (4) <= (not (clr) and reg16 (4));

o16 (5) <= (not (clr) and reg16 (5));

o16 (6) <= (not (clr) and reg16 (6));

o16 (7) <= (not (clr) and reg16 (7));

o16 (8) <= (not (clr) and reg16 (8));

o16 (9) <= (not (clr) and reg16 (9));

o16 (10) <= (not (clr) and reg16 (10));

o16 (11) <= (not (clr) and reg16 (11));

o16 (12) <= (not (clr) and reg16 (12));

o16 (13) <= (not (clr) and reg16 (13));

o16 (14) <= (not (clr) and reg16 (14));

o16 (15) <= (not (clr) and reg16 (15));

o15 (0) <= (not (clr) and reg15 (0));

o15 (1) <= (not (clr) and reg15 (1));

o15 (2) <= (not (clr) and reg15 (2));

o15 (3) <= (not (clr) and reg15 (3));

o15 (4) <= (not (clr) and reg15 (4));

o15 (5) <= (not (clr) and reg15 (5));

o15 (6) <= (not (clr) and reg15 (6));

o15 (7) <= (not (clr) and reg15 (7));

o15 (8) <= (not (clr) and reg15 (8));

o15 (9) <= (not (clr) and reg15 (9));

o15 (10) <= (not (clr) and reg15 (10));

o15 (11) <= (not (clr) and reg15 (11));

o15 (12) <= (not (clr) and reg15 (12));

o15 (13) <= (not (clr) and reg15 (13));

o15 (14) <= (not (clr) and reg15 (14));

o15 (15) <= (not (clr) and reg15 (15));

o14 (0) <= (not (clr) and reg14 (0));

o14 (1) <= (not (clr) and reg14 (1));

o14 (2) <= (not (clr) and reg14 (2));

o14 (3) <= (not (clr) and reg14 (3));

o14 (4) <= (not (clr) and reg14 (4));

o14 (5) <= (not (clr) and reg14 (5));

o14 (6) <= (not (clr) and reg14 (6));

o14 (7) <= (not (clr) and reg14 (7));

o14 (8) <= (not (clr) and reg14 (8));

o14 (9) <= (not (clr) and reg14 (9));

o14 (10) <= (not (clr) and reg14 (10));

o14 (11) <= (not (clr) and reg14 (11));

o14 (12) <= (not (clr) and reg14 (12));

o14 (13) <= (not (clr) and reg14 (13));

o14 (14) <= (not (clr) and reg14 (14));

o14 (15) <= (not (clr) and reg14 (15));

o13 (0) <= (not (clr) and reg13 (0));

o13 (1) <= (not (clr) and reg13 (1));

o13 (2) <= (not (clr) and reg13 (2));

o13 (3) <= (not (clr) and reg13 (3));

o13 (4) <= (not (clr) and reg13 (4));

o13 (5) <= (not (clr) and reg13 (5));

o13 (6) <= (not (clr) and reg13 (6));

o13 (7) <= (not (clr) and reg13 (7));

o13 (8) <= (not (clr) and reg13 (8));

o13 (9) <= (not (clr) and reg13 (9));

o13 (10) <= (not (clr) and reg13 (10));

o13 (11) <= (not (clr) and reg13 (11));

o13 (12) <= (not (clr) and reg13 (12));

o13 (13) <= (not (clr) and reg13 (13));

o13 (14) <= (not (clr) and reg13 (14));

o13 (15) <= (not (clr) and reg13 (15));

o12 (0) <= (not (clr) and reg12 (0));

o12 (1) <= (not (clr) and reg12 (1));

o12 (2) <= (not (clr) and reg12 (2));

o12 (3) <= (not (clr) and reg12 (3));

o12 (4) <= (not (clr) and reg12 (4));

o12 (5) <= (not (clr) and reg12 (5));

o12 (6) <= (not (clr) and reg12 (6));

o12 (7) <= (not (clr) and reg12 (7));

o12 (8) <= (not (clr) and reg12 (8));

o12 (9) <= (not (clr) and reg12 (9));

o12 (10) <= (not (clr) and reg12 (10));

o12 (11) <= (not (clr) and reg12 (11));

o12 (12) <= (not (clr) and reg12 (12));

o12 (13) <= (not (clr) and reg12 (13));

o12 (14) <= (not (clr) and reg12 (14));

o12 (15) <= (not (clr) and reg12 (15));

o11 (0) <= (not (clr) and reg11 (0));

o11 (1) <= (not (clr) and reg11 (1));

o11 (2) <= (not (clr) and reg11 (2));

o11 (3) <= (not (clr) and reg11 (3));

o11 (4) <= (not (clr) and reg11 (4));

o11 (5) <= (not (clr) and reg11 (5));

o11 (6) <= (not (clr) and reg11 (6));

o11 (7) <= (not (clr) and reg11 (7));

o11 (8) <= (not (clr) and reg11 (8));

o11 (9) <= (not (clr) and reg11 (9));

o11 (10) <= (not (clr) and reg11 (10));

o11 (11) <= (not (clr) and reg11 (11));

o11 (12) <= (not (clr) and reg11 (12));

o11 (13) <= (not (clr) and reg11 (13));

o11 (14) <= (not (clr) and reg11 (14));

o11 (15) <= (not (clr) and reg11 (15));

o10 (0) <= (not (clr) and reg10 (0));

o10 (1) <= (not (clr) and reg10 (1));

o10 (2) <= (not (clr) and reg10 (2));

o10 (3) <= (not (clr) and reg10 (3));

o10 (4) <= (not (clr) and reg10 (4));

o10 (5) <= (not (clr) and reg10 (5));

o10 (6) <= (not (clr) and reg10 (6));

o10 (7) <= (not (clr) and reg10 (7));

o10 (8) <= (not (clr) and reg10 (8));

o10 (9) <= (not (clr) and reg10 (9));

o10 (10) <= (not (clr) and reg10 (10));

o10 (11) <= (not (clr) and reg10 (11));

o10 (12) <= (not (clr) and reg10 (12));

o10 (13) <= (not (clr) and reg10 (13));

o10 (14) <= (not (clr) and reg10 (14));

o10 (15) <= (not (clr) and reg10 (15));

o9 (0) <= (not (clr) and reg9 (0));

o9 (1) <= (not (clr) and reg9 (1));

o9 (2) <= (not (clr) and reg9 (2));

o9 (3) <= (not (clr) and reg9 (3));

o9 (4) <= (not (clr) and reg9 (4));

o9 (5) <= (not (clr) and reg9 (5));

o9 (6) <= (not (clr) and reg9 (6));

o9 (7) <= (not (clr) and reg9 (7));

o9 (8) <= (not (clr) and reg9 (8));

o9 (9) <= (not (clr) and reg9 (9));

o9 (10) <= (not (clr) and reg9 (10));

o9 (11) <= (not (clr) and reg9 (11));

o9 (12) <= (not (clr) and reg9 (12));

o9 (13) <= (not (clr) and reg9 (13));

o9 (14) <= (not (clr) and reg9 (14));

o9 (15) <= (not (clr) and reg9 (15));

o8 (0) <= (not (clr) and reg8 (0));

o8 (1) <= (not (clr) and reg8 (1));

o8 (2) <= (not (clr) and reg8 (2));

o8 (3) <= (not (clr) and reg8 (3));

o8 (4) <= (not (clr) and reg8 (4));

o8 (5) <= (not (clr) and reg8 (5));

o8 (6) <= (not (clr) and reg8 (6));

o8 (7) <= (not (clr) and reg8 (7));

o8 (8) <= (not (clr) and reg8 (8));

o8 (9) <= (not (clr) and reg8 (9));

o8 (10) <= (not (clr) and reg8 (10));

o8 (11) <= (not (clr) and reg8 (11));

o8 (12) <= (not (clr) and reg8 (12));

o8 (13) <= (not (clr) and reg8 (13));

o8 (14) <= (not (clr) and reg8 (14));

o8 (15) <= (not (clr) and reg8 (15));

o7 (0) <= (not (clr) and reg7 (0));

o7 (1) <= (not (clr) and reg7 (1));

o7 (2) <= (not (clr) and reg7 (2));

o7 (3) <= (not (clr) and reg7 (3));

o7 (4) <= (not (clr) and reg7 (4));

o7 (5) <= (not (clr) and reg7 (5));

o7 (6) <= (not (clr) and reg7 (6));

o7 (7) <= (not (clr) and reg7 (7));

o7 (8) <= (not (clr) and reg7 (8));

o7 (9) <= (not (clr) and reg7 (9));

o7 (10) <= (not (clr) and reg7 (10));

o7 (11) <= (not (clr) and reg7 (11));

o7 (12) <= (not (clr) and reg7 (12));

o7 (13) <= (not (clr) and reg7 (13));

o7 (14) <= (not (clr) and reg7 (14));

o7 (15) <= (not (clr) and reg7 (15));

o6 (0) <= (not (clr) and reg6 (0));

o6 (1) <= (not (clr) and reg6 (1));

o6 (2) <= (not (clr) and reg6 (2));

o6 (3) <= (not (clr) and reg6 (3));

o6 (4) <= (not (clr) and reg6 (4));

o6 (5) <= (not (clr) and reg6 (5));

o6 (6) <= (not (clr) and reg6 (6));

o6 (7) <= (not (clr) and reg6 (7));

o6 (8) <= (not (clr) and reg6 (8));

o6 (9) <= (not (clr) and reg6 (9));

o6 (10) <= (not (clr) and reg6 (10));

o6 (11) <= (not (clr) and reg6 (11));

o6 (12) <= (not (clr) and reg6 (12));

o6 (13) <= (not (clr) and reg6 (13));

o6 (14) <= (not (clr) and reg6 (14));

o6 (15) <= (not (clr) and reg6 (15));

o5 (0) <= (not (clr) and reg5 (0));

o5 (1) <= (not (clr) and reg5 (1));

o5 (2) <= (not (clr) and reg5 (2));

o5 (3) <= (not (clr) and reg5 (3));

o5 (4) <= (not (clr) and reg5 (4));

o5 (5) <= (not (clr) and reg5 (5));

o5 (6) <= (not (clr) and reg5 (6));

o5 (7) <= (not (clr) and reg5 (7));

o5 (8) <= (not (clr) and reg5 (8));

o5 (9) <= (not (clr) and reg5 (9));

o5 (10) <= (not (clr) and reg5 (10));

o5 (11) <= (not (clr) and reg5 (11));

o5 (12) <= (not (clr) and reg5 (12));

o5 (13) <= (not (clr) and reg5 (13));

o5 (14) <= (not (clr) and reg5 (14));

o5 (15) <= (not (clr) and reg5 (15));

o4 (0) <= (not (clr) and reg4 (0));

o4 (1) <= (not (clr) and reg4 (1));

o4 (2) <= (not (clr) and reg4 (2));

o4 (3) <= (not (clr) and reg4 (3));

o4 (4) <= (not (clr) and reg4 (4));

o4 (5) <= (not (clr) and reg4 (5));

o4 (6) <= (not (clr) and reg4 (6));

o4 (7) <= (not (clr) and reg4 (7));

o4 (8) <= (not (clr) and reg4 (8));

o4 (9) <= (not (clr) and reg4 (9));

o4 (10) <= (not (clr) and reg4 (10));

o4 (11) <= (not (clr) and reg4 (11));

o4 (12) <= (not (clr) and reg4 (12));

o4 (13) <= (not (clr) and reg4 (13));

o4 (14) <= (not (clr) and reg4 (14));

o4 (15) <= (not (clr) and reg4 (15));

o3 (0) <= (not (clr) and reg3 (0));

o3 (1) <= (not (clr) and reg3 (1));

o3 (2) <= (not (clr) and reg3 (2));

o3 (3) <= (not (clr) and reg3 (3));

o3 (4) <= (not (clr) and reg3 (4));

o3 (5) <= (not (clr) and reg3 (5));

o3 (6) <= (not (clr) and reg3 (6));

o3 (7) <= (not (clr) and reg3 (7));

o3 (8) <= (not (clr) and reg3 (8));

o3 (9) <= (not (clr) and reg3 (9));

o3 (10) <= (not (clr) and reg3 (10));

o3 (11) <= (not (clr) and reg3 (11));

o3 (12) <= (not (clr) and reg3 (12));

o3 (13) <= (not (clr) and reg3 (13));

o3 (14) <= (not (clr) and reg3 (14));

o3 (15) <= (not (clr) and reg3 (15));

o2 (0) <= (not (clr) and reg2 (0));

o2 (1) <= (not (clr) and reg2 (1));

o2 (2) <= (not (clr) and reg2 (2));

o2 (3) <= (not (clr) and reg2 (3));

o2 (4) <= (not (clr) and reg2 (4));

o2 (5) <= (not (clr) and reg2 (5));

o2 (6) <= (not (clr) and reg2 (6));

o2 (7) <= (not (clr) and reg2 (7));

o2 (8) <= (not (clr) and reg2 (8));

o2 (9) <= (not (clr) and reg2 (9));

o2 (10) <= (not (clr) and reg2 (10));

o2 (11) <= (not (clr) and reg2 (11));

o2 (12) <= (not (clr) and reg2 (12));

o2 (13) <= (not (clr) and reg2 (13));

o2 (14) <= (not (clr) and reg2 (14));

o2 (15) <= (not (clr) and reg2 (15));

o1 (0) <= (not (clr) and reg1 (0));

o1 (1) <= (not (clr) and reg1 (1));

o1 (2) <= (not (clr) and reg1 (2));

o1 (3) <= (not (clr) and reg1 (3));

o1 (4) <= (not (clr) and reg1 (4));

o1 (5) <= (not (clr) and reg1 (5));

o1 (6) <= (not (clr) and reg1 (6));

o1 (7) <= (not (clr) and reg1 (7));

o1 (8) <= (not (clr) and reg1 (8));

o1 (9) <= (not (clr) and reg1 (9));

o1 (10) <= (not (clr) and reg1 (10));

o1 (11) <= (not (clr) and reg1 (11));

o1 (12) <= (not (clr) and reg1 (12));

o1 (13) <= (not (clr) and reg1 (13));

o1 (14) <= (not (clr) and reg1 (14));

o1 (15) <= (not (clr) and reg1 (15));
END;
