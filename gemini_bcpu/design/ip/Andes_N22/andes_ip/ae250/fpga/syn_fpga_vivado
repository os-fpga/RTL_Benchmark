#!/bin/sh

if [ -e $NDS_HOME/andes_ip/vc_core/top/hdl/config.inc ]; then
	core_name=vc_core
elif [ -e $NDS_HOME/andes_ip/n22_core/top/hdl/config.inc ]; then
	core_name=n22_core
else
	echo "Could not check core name!"
fi

# step 0: set cfg/platform
 # extract platform name
platform=$(pwd |perl -pe "s/.*andes_ip\/(.*)\/fpga.*/\1/")
platform_cfg=ae250_config.vh
platform_cfg_path=$NDS_HOME/andes_ip/ae250/top/hdl/include

# step 1: setting board and part_name
family_name=xc7k
 # Help message
function usage() {
        echo -e "This script calls vivado to synthesis and generate bitmap file."
        echo -e "usage:"
        echo -e "\tsyn_fpga_vivado [-b board_name] [-h]"
        echo -e "Arguments:"
        echo -e "\t[-b[oard] board_name]\t: You can choose xc7k or xc5v, default \"xc7k\""
        echo -e "\t[-h[elp] ]\t\t: show help message"
        if (( $use_run_cmd_lib )); then
                show_run_cmd_help
        fi
}

while [[ $# -gt 0 ]]; do
        case "$1" in
                -h|-help|--help)
                        usage; exit 1 ;;
                -b|-board|--board)
                        family_name=$2; shift 2 ;;
                *)
                        argv=("${argv[@]}" "$1"); shift ;;
        esac
done
set -- "${argv[@]:0}" # overwrite command line argv

case $family_name in
    "xc5v")
        part_name=xc5vlx110-ff676-1
	    board=leopard;;
    "xc7k160t"|"160t"|"orca")
        part_name=xc7k160tffg676-1
	    board=orca;;
    "xc7k410t"|"410t"|"bigorca"|"orca_v2")
        part_name=xc7k410tffg676-2
	    board=orca;;
    "xc7a100t"|"cf1")
        part_name=xc7a100tftg256-1
	    board=cf1;;
    *)
        part_name=xc7k160tffg676-1
	    board=orca;;
esac
echo -e "part_name: $part_name"


# step 2: generate rundir

if [ -e fpga_${platform}_vivado ]; then
	mv -f fpga_${platform}_vivado fpga_${platform}_vivado_`date +'%F_%H:%M'`
	mkdir fpga_${platform}_vivado
else
	mkdir fpga_${platform}_vivado
fi
cd fpga_${platform}_vivado

# step 3: link $platform_cfg, fpga_config.inc and config.inc 
echo -e "\`define NDS_FPGA" > ./fpga_config.inc
echo -e "\`define NDS_BOARD_${board^^}" >> ./fpga_config.inc   

if [ -e $NDS_HOME/andes_ip/vc_core/top/hdl/config.inc ]; then
echo -e "\`define NDS_CORE_VC" >> ./fpga_config.inc
elif [ -e $NDS_HOME/andes_ip/n22_core/top/hdl/config.inc ]; then
echo -e "\`define NDS_CORE_N22" >> ./fpga_config.inc
echo -e "\`define AE250_CORE_CLK_20MHZ" >> ./fpga_config.inc
echo -e "\`define AE250_SPI_CLK_40MHZ" >> ./fpga_config.inc
else
	echo "Could not check core name!"
fi

if [ -e ../ae250_config.vh ]; then
        unlink ../ae250_config.vh
fi
ln -s $NDS_HOME/andes_ip/ae250/top/hdl/include/ae250_config.vh ../ae250_config.vh

if [ -e ../config.inc ]; then
        unlink ../config.inc
fi
ln -s $NDS_HOME/andes_ip/$core_name/top/hdl/config.inc ../config.inc

ln -s ../$platform_cfg ./$platform_cfg
ln -s ../config.inc ./config.inc

if [ ! -e $platform_cfg ]; then
	printf "ERROR: can't find $platform_cfg\n"
	exit
fi
if [ ! -e fpga_config.inc ]; then
	printf "ERROR: can't find fpga_config.inc\n"
	exit
fi
if [ ! -e config.inc ]; then
	printf "ERROR: can't find config.inc\n"
	exit
fi

# step 4: prepare vivado script
ln -s ../vivado_flow/flist          flist
ln -s ../vivado_flow/constraint     constraint
ln -s ../vivado_flow/script         script
ln -s ../vivado_flow/${platform}_vivado.tcl  ${platform}_vivado.tcl

# step 5: run vivado
vivado -mode batch -source ./${platform}_vivado.tcl

