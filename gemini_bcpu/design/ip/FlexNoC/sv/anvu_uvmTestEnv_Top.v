
// Copyright (c) 2006-2013 Arteris, Inc. All rights reserved.
// Copyright (c) 2013-2020 Qualcomm Technologies, Inc. All rights reserved.
// These files contain material which is the Confidential Information of Arteris and which is protected by various intellectual property rights.
// You may make, have made, use, reproduce, display or perform (publicly or otherwise), prepare
// derivative works based on, offer for sale, sell, distribute, import,
// disclose, license, sublicense, dispose of and otherwise exploit this RTL solely in
// accordance with your license agreement with Arteris, Inc or Arteris IP, SAS.
// If you have not agreed to all of the terms and conditions in such License
// Agreement, you should immediately return these files (including any copies)
// to your licensor Arteris, Inc or Arteris IP, SAS.
// The material in these files or portions thereof are protected under U.S. and foreign patent and patent applications.
// This software and hardware IP product is protected by patents as described at http://www.arteris.com/patents.


// Generated by FlexNoC
// Tool Version 4.7.0
// Platform     centos:7
// Date         Tue Sep 13 13:51:50 2022


// FlexNoC version    : 4.7.0
// PDD File           : /home/aptashko/GEMINI/design/ip/FlexNoC/rsnoc_arch_edit.pdd
// Exported Structure : /Specification.Architecture.Structure
// ExportOption       : /verilog

`include "anvu_interfaces.sv"
`timescale 1ps/1ps
module anvu_uvmTestEnv_Top_z_T_C_S_C_L_S_Ce_R ( En , I , O );
	input   En ;
	input   I  ;
	output  O  ;
	reg  LatchedEn ;
	initial LatchedEn = 0 ;
	always @( I or En )		if ( I == 0)
			LatchedEn <= #1.0 ( En );
assign O = LatchedEn && I;
endmodule

`timescale 1ps/1ps
module anvu_uvmTestEnv_Top_z_T_C_S_C_L_R_Cm (
	ClkI0
,	ClkI0_ClkS
,	ClkI0_En
,	ClkI0_EnS
,	ClkI0_RetRstN
,	ClkI0_RstN
,	ClkI0_Tm
,	ClkI1
,	ClkI1_ClkS
,	ClkI1_En
,	ClkI1_EnS
,	ClkI1_RetRstN
,	ClkI1_RstN
,	ClkI1_Tm
,	ClkO
,	ClkO_ClkS
,	ClkO_En
,	ClkO_EnS
,	ClkO_RetRstN
,	ClkO_RstN
,	ClkO_Tm
,	Sel
);
	input   ClkI0         ;
	input   ClkI0_ClkS    ;
	input   ClkI0_En      ;
	input   ClkI0_EnS     ;
	input   ClkI0_RetRstN ;
	input   ClkI0_RstN    ;
	input   ClkI0_Tm      ;
	input   ClkI1         ;
	input   ClkI1_ClkS    ;
	input   ClkI1_En      ;
	input   ClkI1_EnS     ;
	input   ClkI1_RetRstN ;
	input   ClkI1_RstN    ;
	input   ClkI1_Tm      ;
	output  ClkO          ;
	output  ClkO_ClkS     ;
	output  ClkO_En       ;
	output  ClkO_EnS      ;
	output  ClkO_RetRstN  ;
	output  ClkO_RstN     ;
	output  ClkO_Tm       ;
	input   Sel           ;
	assign ClkO = Sel ? ClkI1 : ClkI0;
	assign ClkO_ClkS = Sel ? ClkI1_ClkS : ClkI0_ClkS;
	assign ClkO_En = Sel ? ClkI1_En : ClkI0_En;
	assign ClkO_EnS = Sel ? ClkI1_EnS : ClkI0_EnS;
	assign ClkO_RetRstN = Sel ? ClkI1_RetRstN : ClkI0_RetRstN;
	assign ClkO_RstN = ClkI0_RstN & ClkI1_RstN;
	assign ClkO_Tm = Sel ? ClkI1_Tm : ClkI0_Tm;
endmodule

`timescale 1ps/1ps
module anvu_uvmTestEnv_Top_z_T_C_S_C_L_S_O_f04ed ( Clk , Clk_ClkS , Clk_En , Clk_EnS , Clk_RetRstN , Clk_RstN , Clk_Tm );
	output  Clk         ;
	output  Clk_ClkS    ;
	output  Clk_En      ;
	output  Clk_EnS     ;
	output  Clk_RetRstN ;
	output  Clk_RstN    ;
	output  Clk_Tm      ;
	reg   Clk                 ;
	reg   Clk_ClkS            ;
	reg   Clk_En              ;
	reg   Clk_EnS             ;
	reg   Clk_RetRstN         ;
	reg   Clk_RstN            ;
	reg   Clk_Tm              ;
	real  frequency           ;
	real  halfPeriod = 1374.0 ;
	initial begin
		Clk = 1'b0 ;
		Clk_ClkS = 1'b0 ;
		#1000.0 ;
		Clk_En = 1'b1 ;
		Clk_EnS = 1'b1 ;
		Clk_Tm = 1'b0 ;
		forever begin
			Clk = 1'b1 ;
			Clk_ClkS = 1'b1 ;
			#(halfPeriod) ;
			Clk = 1'b0 ;
			Clk_ClkS = 1'b0 ;
			#(halfPeriod) ;
		end
	end
	initial begin
		Clk_RstN = 1'b0;
		Clk_RetRstN = 1'b0;
		#1000.0 ;
		#54960.0 ;
			#1.0 Clk_RstN = 1'b1 ; Clk_RetRstN = 1'b1 ;
	end
endmodule

`timescale 1ps/1ps
module anvu_uvmTestEnv_Top_z_T_C_S_C_L_S_O_51d17 ( Clk , Clk_ClkS , Clk_En , Clk_EnS , Clk_RetRstN , Clk_RstN , Clk_Tm );
	output  Clk         ;
	output  Clk_ClkS    ;
	output  Clk_En      ;
	output  Clk_EnS     ;
	output  Clk_RetRstN ;
	output  Clk_RstN    ;
	output  Clk_Tm      ;
	reg   Clk                 ;
	reg   Clk_ClkS            ;
	reg   Clk_En              ;
	reg   Clk_EnS             ;
	reg   Clk_RetRstN         ;
	reg   Clk_RstN            ;
	reg   Clk_Tm              ;
	real  frequency           ;
	real  halfPeriod = 1250.0 ;
	initial begin
		if ($value$plusargs("freq_fpga_clk_m0=%0F",frequency)) begin
			halfPeriod = (1000000.0/(2*frequency));
			$display("%0t : Frequency for clock fpga_clk_m0 has been updated to %f Mhz, half period %f",$realtime,frequency,halfPeriod);
		end
		Clk = 1'b0 ;
		Clk_ClkS = 1'b0 ;
		#1000.0 ;
		Clk_En = 1'b1 ;
		Clk_EnS = 1'b1 ;
		Clk_Tm = 1'b0 ;
		forever begin
			Clk = 1'b1 ;
			Clk_ClkS = 1'b1 ;
			#(halfPeriod) ;
			Clk = 1'b0 ;
			Clk_ClkS = 1'b0 ;
			#(halfPeriod) ;
		end
	end
	initial begin
		Clk_RstN = 1'b0;
		Clk_RetRstN = 1'b0;
		#1000.0 ;
		#50000.0 ;
			#1.0 Clk_RstN = 1'b1 ; Clk_RetRstN = 1'b1 ;
	end
endmodule

`timescale 1ps/1ps
module anvu_uvmTestEnv_Top_z_T_C_S_C_L_S_O_5e7fc ( Clk , Clk_ClkS , Clk_En , Clk_EnS , Clk_RetRstN , Clk_RstN , Clk_Tm );
	output  Clk         ;
	output  Clk_ClkS    ;
	output  Clk_En      ;
	output  Clk_EnS     ;
	output  Clk_RetRstN ;
	output  Clk_RstN    ;
	output  Clk_Tm      ;
	reg   Clk                 ;
	reg   Clk_ClkS            ;
	reg   Clk_En              ;
	reg   Clk_EnS             ;
	reg   Clk_RetRstN         ;
	reg   Clk_RstN            ;
	reg   Clk_Tm              ;
	real  frequency           ;
	real  halfPeriod = 1250.0 ;
	initial begin
		if ($value$plusargs("freq_fpga_clk_m1=%0F",frequency)) begin
			halfPeriod = (1000000.0/(2*frequency));
			$display("%0t : Frequency for clock fpga_clk_m1 has been updated to %f Mhz, half period %f",$realtime,frequency,halfPeriod);
		end
		Clk = 1'b0 ;
		Clk_ClkS = 1'b0 ;
		#1000.0 ;
		Clk_En = 1'b1 ;
		Clk_EnS = 1'b1 ;
		Clk_Tm = 1'b0 ;
		forever begin
			Clk = 1'b1 ;
			Clk_ClkS = 1'b1 ;
			#(halfPeriod) ;
			Clk = 1'b0 ;
			Clk_ClkS = 1'b0 ;
			#(halfPeriod) ;
		end
	end
	initial begin
		Clk_RstN = 1'b0;
		Clk_RetRstN = 1'b0;
		#1000.0 ;
		#50000.0 ;
			#1.0 Clk_RstN = 1'b1 ; Clk_RetRstN = 1'b1 ;
	end
endmodule

`timescale 1ps/1ps
module anvu_uvmTestEnv_Top_z_T_C_S_C_L_S_O_547b6 ( Clk , Clk_ClkS , Clk_En , Clk_EnS , Clk_RetRstN , Clk_RstN , Clk_Tm );
	output  Clk         ;
	output  Clk_ClkS    ;
	output  Clk_En      ;
	output  Clk_EnS     ;
	output  Clk_RetRstN ;
	output  Clk_RstN    ;
	output  Clk_Tm      ;
	reg   Clk                 ;
	reg   Clk_ClkS            ;
	reg   Clk_En              ;
	reg   Clk_EnS             ;
	reg   Clk_RetRstN         ;
	reg   Clk_RstN            ;
	reg   Clk_Tm              ;
	real  frequency           ;
	real  halfPeriod = 1250.0 ;
	initial begin
		if ($value$plusargs("freq_fpga_clk_s0=%0F",frequency)) begin
			halfPeriod = (1000000.0/(2*frequency));
			$display("%0t : Frequency for clock fpga_clk_s0 has been updated to %f Mhz, half period %f",$realtime,frequency,halfPeriod);
		end
		Clk = 1'b0 ;
		Clk_ClkS = 1'b0 ;
		#1000.0 ;
		Clk_En = 1'b1 ;
		Clk_EnS = 1'b1 ;
		Clk_Tm = 1'b0 ;
		forever begin
			Clk = 1'b1 ;
			Clk_ClkS = 1'b1 ;
			#(halfPeriod) ;
			Clk = 1'b0 ;
			Clk_ClkS = 1'b0 ;
			#(halfPeriod) ;
		end
	end
	initial begin
		Clk_RstN = 1'b0;
		Clk_RetRstN = 1'b0;
		#1000.0 ;
		#50000.0 ;
			#1.0 Clk_RstN = 1'b1 ; Clk_RetRstN = 1'b1 ;
	end
endmodule

`timescale 1ps/1ps
module anvu_uvmTestEnv_Top_z_T_C_S_C_L_S_O_dbd35 ( Clk , Clk_ClkS , Clk_En , Clk_EnS , Clk_RetRstN , Clk_RstN , Clk_Tm );
	output  Clk         ;
	output  Clk_ClkS    ;
	output  Clk_En      ;
	output  Clk_EnS     ;
	output  Clk_RetRstN ;
	output  Clk_RstN    ;
	output  Clk_Tm      ;
	reg   Clk                ;
	reg   Clk_ClkS           ;
	reg   Clk_En             ;
	reg   Clk_EnS            ;
	reg   Clk_RetRstN        ;
	reg   Clk_RstN           ;
	reg   Clk_Tm             ;
	real  frequency          ;
	real  halfPeriod = 938.0 ;
	initial begin
		if ($value$plusargs("freq_clk_533=%0F",frequency)) begin
			halfPeriod = (1000000.0/(2*frequency));
			$display("%0t : Frequency for clock clk_533 has been updated to %f Mhz, half period %f",$realtime,frequency,halfPeriod);
		end
		Clk = 1'b0 ;
		Clk_ClkS = 1'b0 ;
		#1000.0 ;
		Clk_En = 1'b1 ;
		Clk_EnS = 1'b1 ;
		Clk_Tm = 1'b0 ;
		forever begin
			Clk = 1'b1 ;
			Clk_ClkS = 1'b1 ;
			#(halfPeriod) ;
			Clk = 1'b0 ;
			Clk_ClkS = 1'b0 ;
			#(halfPeriod) ;
		end
	end
	initial begin
		Clk_RstN = 1'b0;
		Clk_RetRstN = 1'b0;
		#1000.0 ;
		#37520.0 ;
			#1.0 Clk_RstN = 1'b1 ; Clk_RetRstN = 1'b1 ;
	end
endmodule

`timescale 1ps/1ps
module anvu_uvmTestEnv_Top_z_S_R_U_Cg_U_f5e0e607 (
	DomainClocks_fpga_regime_m0_Cm_root
,	DomainClocks_fpga_regime_m0_Cm_root_ClkS
,	DomainClocks_fpga_regime_m0_Cm_root_En
,	DomainClocks_fpga_regime_m0_Cm_root_EnS
,	DomainClocks_fpga_regime_m0_Cm_root_RetRstN
,	DomainClocks_fpga_regime_m0_Cm_root_RstN
,	DomainClocks_fpga_regime_m0_Cm_root_Tm
,	DomainClocks_fpga_regime_m1_Cm_root
,	DomainClocks_fpga_regime_m1_Cm_root_ClkS
,	DomainClocks_fpga_regime_m1_Cm_root_En
,	DomainClocks_fpga_regime_m1_Cm_root_EnS
,	DomainClocks_fpga_regime_m1_Cm_root_RetRstN
,	DomainClocks_fpga_regime_m1_Cm_root_RstN
,	DomainClocks_fpga_regime_m1_Cm_root_Tm
,	DomainClocks_fpga_regime_s0_Cm_root
,	DomainClocks_fpga_regime_s0_Cm_root_ClkS
,	DomainClocks_fpga_regime_s0_Cm_root_En
,	DomainClocks_fpga_regime_s0_Cm_root_EnS
,	DomainClocks_fpga_regime_s0_Cm_root_RetRstN
,	DomainClocks_fpga_regime_s0_Cm_root_RstN
,	DomainClocks_fpga_regime_s0_Cm_root_Tm
,	DomainClocks_interconnect_synch_regime_Cm133_root
,	DomainClocks_interconnect_synch_regime_Cm133_root_ClkS
,	DomainClocks_interconnect_synch_regime_Cm133_root_En
,	DomainClocks_interconnect_synch_regime_Cm133_root_EnS
,	DomainClocks_interconnect_synch_regime_Cm133_root_RetRstN
,	DomainClocks_interconnect_synch_regime_Cm133_root_RstN
,	DomainClocks_interconnect_synch_regime_Cm133_root_Tm
,	DomainClocks_interconnect_synch_regime_Cm266_root
,	DomainClocks_interconnect_synch_regime_Cm266_root_ClkS
,	DomainClocks_interconnect_synch_regime_Cm266_root_En
,	DomainClocks_interconnect_synch_regime_Cm266_root_EnS
,	DomainClocks_interconnect_synch_regime_Cm266_root_RetRstN
,	DomainClocks_interconnect_synch_regime_Cm266_root_RstN
,	DomainClocks_interconnect_synch_regime_Cm266_root_Tm
,	DomainClocks_interconnect_synch_regime_Cm533_root
,	DomainClocks_interconnect_synch_regime_Cm533_root_ClkS
,	DomainClocks_interconnect_synch_regime_Cm533_root_En
,	DomainClocks_interconnect_synch_regime_Cm533_root_EnS
,	DomainClocks_interconnect_synch_regime_Cm533_root_RetRstN
,	DomainClocks_interconnect_synch_regime_Cm533_root_RstN
,	DomainClocks_interconnect_synch_regime_Cm533_root_Tm
,	FastRstN
,	Ref_fpga_regime_m0
,	Ref_fpga_regime_m1
,	Ref_fpga_regime_s0
,	Ref_interconnect_synch_regime
,	RegimeClocks_Async
,	RegimeClocks_Async_ClkS
,	RegimeClocks_Async_En
,	RegimeClocks_Async_EnS
,	RegimeClocks_Async_RetRstN
,	RegimeClocks_Async_RstN
,	RegimeClocks_Async_Tm
,	RegimeClocks_fpga_regime_m0
,	RegimeClocks_fpga_regime_m0_ClkS
,	RegimeClocks_fpga_regime_m0_En
,	RegimeClocks_fpga_regime_m0_EnS
,	RegimeClocks_fpga_regime_m0_RetRstN
,	RegimeClocks_fpga_regime_m0_RstN
,	RegimeClocks_fpga_regime_m0_Tm
,	RegimeClocks_fpga_regime_m1
,	RegimeClocks_fpga_regime_m1_ClkS
,	RegimeClocks_fpga_regime_m1_En
,	RegimeClocks_fpga_regime_m1_EnS
,	RegimeClocks_fpga_regime_m1_RetRstN
,	RegimeClocks_fpga_regime_m1_RstN
,	RegimeClocks_fpga_regime_m1_Tm
,	RegimeClocks_fpga_regime_s0
,	RegimeClocks_fpga_regime_s0_ClkS
,	RegimeClocks_fpga_regime_s0_En
,	RegimeClocks_fpga_regime_s0_EnS
,	RegimeClocks_fpga_regime_s0_RetRstN
,	RegimeClocks_fpga_regime_s0_RstN
,	RegimeClocks_fpga_regime_s0_Tm
,	RegimeClocks_interconnect_synch_regime
,	RegimeClocks_interconnect_synch_regime_ClkS
,	RegimeClocks_interconnect_synch_regime_En
,	RegimeClocks_interconnect_synch_regime_EnS
,	RegimeClocks_interconnect_synch_regime_RetRstN
,	RegimeClocks_interconnect_synch_regime_RstN
,	RegimeClocks_interconnect_synch_regime_Tm
,	Sel_fpga_regime_m0
,	Sel_fpga_regime_m1
,	Sel_fpga_regime_s0
,	Sel_interconnect_synch_regime
,	clk_133
,	clk_266
,	clk_533
,	fpga_clk_m0
,	fpga_clk_m1
,	fpga_clk_s0
,	fpga_rstm0_n
,	fpga_rstm1_n
,	fpga_rsts0_n
,	rst_133_n
,	rst_266_n
,	rst_533_n
,	tm
);
	output  DomainClocks_fpga_regime_m0_Cm_root                       ;
	output  DomainClocks_fpga_regime_m0_Cm_root_ClkS                  ;
	output  DomainClocks_fpga_regime_m0_Cm_root_En                    ;
	output  DomainClocks_fpga_regime_m0_Cm_root_EnS                   ;
	output  DomainClocks_fpga_regime_m0_Cm_root_RetRstN               ;
	output  DomainClocks_fpga_regime_m0_Cm_root_RstN                  ;
	output  DomainClocks_fpga_regime_m0_Cm_root_Tm                    ;
	output  DomainClocks_fpga_regime_m1_Cm_root                       ;
	output  DomainClocks_fpga_regime_m1_Cm_root_ClkS                  ;
	output  DomainClocks_fpga_regime_m1_Cm_root_En                    ;
	output  DomainClocks_fpga_regime_m1_Cm_root_EnS                   ;
	output  DomainClocks_fpga_regime_m1_Cm_root_RetRstN               ;
	output  DomainClocks_fpga_regime_m1_Cm_root_RstN                  ;
	output  DomainClocks_fpga_regime_m1_Cm_root_Tm                    ;
	output  DomainClocks_fpga_regime_s0_Cm_root                       ;
	output  DomainClocks_fpga_regime_s0_Cm_root_ClkS                  ;
	output  DomainClocks_fpga_regime_s0_Cm_root_En                    ;
	output  DomainClocks_fpga_regime_s0_Cm_root_EnS                   ;
	output  DomainClocks_fpga_regime_s0_Cm_root_RetRstN               ;
	output  DomainClocks_fpga_regime_s0_Cm_root_RstN                  ;
	output  DomainClocks_fpga_regime_s0_Cm_root_Tm                    ;
	output  DomainClocks_interconnect_synch_regime_Cm133_root         ;
	output  DomainClocks_interconnect_synch_regime_Cm133_root_ClkS    ;
	output  DomainClocks_interconnect_synch_regime_Cm133_root_En      ;
	output  DomainClocks_interconnect_synch_regime_Cm133_root_EnS     ;
	output  DomainClocks_interconnect_synch_regime_Cm133_root_RetRstN ;
	output  DomainClocks_interconnect_synch_regime_Cm133_root_RstN    ;
	output  DomainClocks_interconnect_synch_regime_Cm133_root_Tm      ;
	output  DomainClocks_interconnect_synch_regime_Cm266_root         ;
	output  DomainClocks_interconnect_synch_regime_Cm266_root_ClkS    ;
	output  DomainClocks_interconnect_synch_regime_Cm266_root_En      ;
	output  DomainClocks_interconnect_synch_regime_Cm266_root_EnS     ;
	output  DomainClocks_interconnect_synch_regime_Cm266_root_RetRstN ;
	output  DomainClocks_interconnect_synch_regime_Cm266_root_RstN    ;
	output  DomainClocks_interconnect_synch_regime_Cm266_root_Tm      ;
	output  DomainClocks_interconnect_synch_regime_Cm533_root         ;
	output  DomainClocks_interconnect_synch_regime_Cm533_root_ClkS    ;
	output  DomainClocks_interconnect_synch_regime_Cm533_root_En      ;
	output  DomainClocks_interconnect_synch_regime_Cm533_root_EnS     ;
	output  DomainClocks_interconnect_synch_regime_Cm533_root_RetRstN ;
	output  DomainClocks_interconnect_synch_regime_Cm533_root_RstN    ;
	output  DomainClocks_interconnect_synch_regime_Cm533_root_Tm      ;
	output  FastRstN                                                  ;
	input   Ref_fpga_regime_m0                                        ;
	input   Ref_fpga_regime_m1                                        ;
	input   Ref_fpga_regime_s0                                        ;
	input   Ref_interconnect_synch_regime                             ;
	output  RegimeClocks_Async                                        ;
	output  RegimeClocks_Async_ClkS                                   ;
	output  RegimeClocks_Async_En                                     ;
	output  RegimeClocks_Async_EnS                                    ;
	output  RegimeClocks_Async_RetRstN                                ;
	output  RegimeClocks_Async_RstN                                   ;
	output  RegimeClocks_Async_Tm                                     ;
	output  RegimeClocks_fpga_regime_m0                               ;
	output  RegimeClocks_fpga_regime_m0_ClkS                          ;
	output  RegimeClocks_fpga_regime_m0_En                            ;
	output  RegimeClocks_fpga_regime_m0_EnS                           ;
	output  RegimeClocks_fpga_regime_m0_RetRstN                       ;
	output  RegimeClocks_fpga_regime_m0_RstN                          ;
	output  RegimeClocks_fpga_regime_m0_Tm                            ;
	output  RegimeClocks_fpga_regime_m1                               ;
	output  RegimeClocks_fpga_regime_m1_ClkS                          ;
	output  RegimeClocks_fpga_regime_m1_En                            ;
	output  RegimeClocks_fpga_regime_m1_EnS                           ;
	output  RegimeClocks_fpga_regime_m1_RetRstN                       ;
	output  RegimeClocks_fpga_regime_m1_RstN                          ;
	output  RegimeClocks_fpga_regime_m1_Tm                            ;
	output  RegimeClocks_fpga_regime_s0                               ;
	output  RegimeClocks_fpga_regime_s0_ClkS                          ;
	output  RegimeClocks_fpga_regime_s0_En                            ;
	output  RegimeClocks_fpga_regime_s0_EnS                           ;
	output  RegimeClocks_fpga_regime_s0_RetRstN                       ;
	output  RegimeClocks_fpga_regime_s0_RstN                          ;
	output  RegimeClocks_fpga_regime_s0_Tm                            ;
	output  RegimeClocks_interconnect_synch_regime                    ;
	output  RegimeClocks_interconnect_synch_regime_ClkS               ;
	output  RegimeClocks_interconnect_synch_regime_En                 ;
	output  RegimeClocks_interconnect_synch_regime_EnS                ;
	output  RegimeClocks_interconnect_synch_regime_RetRstN            ;
	output  RegimeClocks_interconnect_synch_regime_RstN               ;
	output  RegimeClocks_interconnect_synch_regime_Tm                 ;
	input   Sel_fpga_regime_m0                                        ;
	input   Sel_fpga_regime_m1                                        ;
	input   Sel_fpga_regime_s0                                        ;
	input   Sel_interconnect_synch_regime                             ;
	output  clk_133                                                   ;
	output  clk_266                                                   ;
	output  clk_533                                                   ;
	output  fpga_clk_m0                                               ;
	output  fpga_clk_m1                                               ;
	output  fpga_clk_s0                                               ;
	input   fpga_rstm0_n                                              ;
	input   fpga_rstm1_n                                              ;
	input   fpga_rsts0_n                                              ;
	input   rst_133_n                                                 ;
	input   rst_266_n                                                 ;
	input   rst_533_n                                                 ;
	input   tm                                                        ;
	wire       u                                                        ;
	wire       u_ClkS                                                   ;
	wire       u_RetRstN                                                ;
	wire       u_RstN                                                   ;
	wire       u_Tm                                                     ;
	wire       u_114                                                    ;
	wire       u_114_RstN                                               ;
	wire       u_122                                                    ;
	reg  [2:0] u_123                                                    ;
	wire       u_156                                                    ;
	wire       u_156_RstN                                               ;
	wire       u_164                                                    ;
	reg  [1:0] u_165                                                    ;
	wire       u_18                                                     ;
	wire       u_18_ClkS                                                ;
	wire       u_18_RetRstN                                             ;
	wire       u_18_RstN                                                ;
	wire       u_18_Tm                                                  ;
	wire       u_1e1f                                                   ;
	wire       u_214c                                                   ;
	wire       u_29                                                     ;
	wire       u_29_ClkS                                                ;
	wire       u_29_RetRstN                                             ;
	wire       u_29_RstN                                                ;
	wire       u_29_Tm                                                  ;
	wire       u_7                                                      ;
	wire       u_7_ClkS                                                 ;
	wire       u_7_RetRstN                                              ;
	wire       u_7_RstN                                                 ;
	wire       u_7_Tm                                                   ;
	wire       InternalClocks_fpga_regime_m0_Cm_root_Clk                ;
	wire       InternalClocks_fpga_regime_m0_Cm_root_ClkS               ;
	wire       InternalClocks_fpga_regime_m0_Cm_root_En                 ;
	wire       InternalClocks_fpga_regime_m0_Cm_root_EnS                ;
	wire       InternalClocks_fpga_regime_m1_Cm_root_Clk                ;
	wire       InternalClocks_fpga_regime_m1_Cm_root_ClkS               ;
	wire       InternalClocks_fpga_regime_m1_Cm_root_En                 ;
	wire       InternalClocks_fpga_regime_m1_Cm_root_EnS                ;
	wire       InternalClocks_fpga_regime_s0_Cm_root_Clk                ;
	wire       InternalClocks_fpga_regime_s0_Cm_root_ClkS               ;
	wire       InternalClocks_fpga_regime_s0_Cm_root_En                 ;
	wire       InternalClocks_fpga_regime_s0_Cm_root_EnS                ;
	wire       InternalClocks_interconnect_synch_regime_Cm133_root_Clk  ;
	wire       InternalClocks_interconnect_synch_regime_Cm133_root_ClkS ;
	wire       InternalClocks_interconnect_synch_regime_Cm133_root_En   ;
	wire       InternalClocks_interconnect_synch_regime_Cm133_root_EnS  ;
	wire       InternalClocks_interconnect_synch_regime_Cm266_root_Clk  ;
	wire       InternalClocks_interconnect_synch_regime_Cm266_root_ClkS ;
	wire       InternalClocks_interconnect_synch_regime_Cm266_root_En   ;
	wire       InternalClocks_interconnect_synch_regime_Cm266_root_EnS  ;
	wire       InternalClocks_interconnect_synch_regime_Cm533_root_Clk  ;
	wire       InternalClocks_interconnect_synch_regime_Cm533_root_ClkS ;
	wire       InternalClocks_interconnect_synch_regime_Cm533_root_En   ;
	wire       InternalClocks_interconnect_synch_regime_Cm533_root_EnS  ;
	wire       RegimeClocksOsc_fpga_regime_m0                           ;
	wire       RegimeClocksOsc_fpga_regime_m0_ClkS                      ;
	wire       RegimeClocksOsc_fpga_regime_m0_En                        ;
	wire       RegimeClocksOsc_fpga_regime_m0_EnS                       ;
	wire       RegimeClocksOsc_fpga_regime_m0_RetRstN                   ;
	wire       RegimeClocksOsc_fpga_regime_m0_RstN                      ;
	wire       RegimeClocksOsc_fpga_regime_m0_Tm                        ;
	wire       RegimeClocksOsc_fpga_regime_m1                           ;
	wire       RegimeClocksOsc_fpga_regime_m1_ClkS                      ;
	wire       RegimeClocksOsc_fpga_regime_m1_En                        ;
	wire       RegimeClocksOsc_fpga_regime_m1_EnS                       ;
	wire       RegimeClocksOsc_fpga_regime_m1_RetRstN                   ;
	wire       RegimeClocksOsc_fpga_regime_m1_RstN                      ;
	wire       RegimeClocksOsc_fpga_regime_m1_Tm                        ;
	wire       RegimeClocksOsc_fpga_regime_s0                           ;
	wire       RegimeClocksOsc_fpga_regime_s0_ClkS                      ;
	wire       RegimeClocksOsc_fpga_regime_s0_En                        ;
	wire       RegimeClocksOsc_fpga_regime_s0_EnS                       ;
	wire       RegimeClocksOsc_fpga_regime_s0_RetRstN                   ;
	wire       RegimeClocksOsc_fpga_regime_s0_RstN                      ;
	wire       RegimeClocksOsc_fpga_regime_s0_Tm                        ;
	wire       RegimeClocksOsc_interconnect_synch_regime                ;
	wire       RegimeClocksOsc_interconnect_synch_regime_ClkS           ;
	wire       RegimeClocksOsc_interconnect_synch_regime_En             ;
	wire       RegimeClocksOsc_interconnect_synch_regime_EnS            ;
	wire       RegimeClocksOsc_interconnect_synch_regime_RetRstN        ;
	wire       RegimeClocksOsc_interconnect_synch_regime_RstN           ;
	wire       RegimeClocksOsc_interconnect_synch_regime_Tm             ;
	anvu_uvmTestEnv_Top_z_T_C_S_C_L_S_O_51d17 Ofpga_regime_m0(
		.Clk( RegimeClocksOsc_fpga_regime_m0 )
	,	.Clk_ClkS( RegimeClocksOsc_fpga_regime_m0_ClkS )
	,	.Clk_En( RegimeClocksOsc_fpga_regime_m0_En )
	,	.Clk_EnS( RegimeClocksOsc_fpga_regime_m0_EnS )
	,	.Clk_RetRstN( RegimeClocksOsc_fpga_regime_m0_RetRstN )
	,	.Clk_RstN( RegimeClocksOsc_fpga_regime_m0_RstN )
	,	.Clk_Tm( RegimeClocksOsc_fpga_regime_m0_Tm )
	);
	assign u_29 = Ref_fpga_regime_m0;
	assign u_29_ClkS = Ref_fpga_regime_m0;
	assign u_29_RetRstN = RegimeClocksOsc_fpga_regime_m0_RetRstN;
	assign u_29_RstN = RegimeClocksOsc_fpga_regime_m0_RstN;
	assign u_29_Tm = RegimeClocksOsc_fpga_regime_m0_Tm;
	anvu_uvmTestEnv_Top_z_T_C_S_C_L_R_Cm ucm39(
		.ClkI0( RegimeClocksOsc_fpga_regime_m0 )
	,	.ClkI0_ClkS( RegimeClocksOsc_fpga_regime_m0_ClkS )
	,	.ClkI0_En( RegimeClocksOsc_fpga_regime_m0_En )
	,	.ClkI0_EnS( RegimeClocksOsc_fpga_regime_m0_EnS )
	,	.ClkI0_RetRstN( RegimeClocksOsc_fpga_regime_m0_RetRstN )
	,	.ClkI0_RstN( RegimeClocksOsc_fpga_regime_m0_RstN )
	,	.ClkI0_Tm( RegimeClocksOsc_fpga_regime_m0_Tm )
	,	.ClkI1( u_29 )
	,	.ClkI1_ClkS( u_29_ClkS )
	,	.ClkI1_En( 1'b1 )
	,	.ClkI1_EnS( 1'b1 )
	,	.ClkI1_RetRstN( u_29_RetRstN )
	,	.ClkI1_RstN( u_29_RstN )
	,	.ClkI1_Tm( u_29_Tm )
	,	.ClkO( RegimeClocks_fpga_regime_m0 )
	,	.ClkO_ClkS( RegimeClocks_fpga_regime_m0_ClkS )
	,	.ClkO_En( RegimeClocks_fpga_regime_m0_En )
	,	.ClkO_EnS( RegimeClocks_fpga_regime_m0_EnS )
	,	.ClkO_RetRstN( RegimeClocks_fpga_regime_m0_RetRstN )
	,	.ClkO_RstN( RegimeClocks_fpga_regime_m0_RstN )
	,	.ClkO_Tm( RegimeClocks_fpga_regime_m0_Tm )
	,	.Sel( Sel_fpga_regime_m0 )
	);
	assign InternalClocks_fpga_regime_m0_Cm_root_Clk = RegimeClocks_fpga_regime_m0;
	assign DomainClocks_fpga_regime_m0_Cm_root = InternalClocks_fpga_regime_m0_Cm_root_Clk;
	assign InternalClocks_fpga_regime_m0_Cm_root_ClkS = RegimeClocks_fpga_regime_m0_ClkS;
	assign DomainClocks_fpga_regime_m0_Cm_root_ClkS = InternalClocks_fpga_regime_m0_Cm_root_ClkS;
	assign InternalClocks_fpga_regime_m0_Cm_root_En = RegimeClocks_fpga_regime_m0_En;
	assign DomainClocks_fpga_regime_m0_Cm_root_En = InternalClocks_fpga_regime_m0_Cm_root_En;
	assign InternalClocks_fpga_regime_m0_Cm_root_EnS = RegimeClocks_fpga_regime_m0_EnS;
	assign DomainClocks_fpga_regime_m0_Cm_root_EnS = InternalClocks_fpga_regime_m0_Cm_root_EnS;
	assign DomainClocks_fpga_regime_m0_Cm_root_RetRstN = fpga_rstm0_n;
	assign DomainClocks_fpga_regime_m0_Cm_root_RstN = fpga_rstm0_n;
	assign DomainClocks_fpga_regime_m0_Cm_root_Tm = tm;
	anvu_uvmTestEnv_Top_z_T_C_S_C_L_S_O_5e7fc Ofpga_regime_m1(
		.Clk( RegimeClocksOsc_fpga_regime_m1 )
	,	.Clk_ClkS( RegimeClocksOsc_fpga_regime_m1_ClkS )
	,	.Clk_En( RegimeClocksOsc_fpga_regime_m1_En )
	,	.Clk_EnS( RegimeClocksOsc_fpga_regime_m1_EnS )
	,	.Clk_RetRstN( RegimeClocksOsc_fpga_regime_m1_RetRstN )
	,	.Clk_RstN( RegimeClocksOsc_fpga_regime_m1_RstN )
	,	.Clk_Tm( RegimeClocksOsc_fpga_regime_m1_Tm )
	);
	assign u_18 = Ref_fpga_regime_m1;
	assign u_18_ClkS = Ref_fpga_regime_m1;
	assign u_18_RetRstN = RegimeClocksOsc_fpga_regime_m1_RetRstN;
	assign u_18_RstN = RegimeClocksOsc_fpga_regime_m1_RstN;
	assign u_18_Tm = RegimeClocksOsc_fpga_regime_m1_Tm;
	anvu_uvmTestEnv_Top_z_T_C_S_C_L_R_Cm ucm28(
		.ClkI0( RegimeClocksOsc_fpga_regime_m1 )
	,	.ClkI0_ClkS( RegimeClocksOsc_fpga_regime_m1_ClkS )
	,	.ClkI0_En( RegimeClocksOsc_fpga_regime_m1_En )
	,	.ClkI0_EnS( RegimeClocksOsc_fpga_regime_m1_EnS )
	,	.ClkI0_RetRstN( RegimeClocksOsc_fpga_regime_m1_RetRstN )
	,	.ClkI0_RstN( RegimeClocksOsc_fpga_regime_m1_RstN )
	,	.ClkI0_Tm( RegimeClocksOsc_fpga_regime_m1_Tm )
	,	.ClkI1( u_18 )
	,	.ClkI1_ClkS( u_18_ClkS )
	,	.ClkI1_En( 1'b1 )
	,	.ClkI1_EnS( 1'b1 )
	,	.ClkI1_RetRstN( u_18_RetRstN )
	,	.ClkI1_RstN( u_18_RstN )
	,	.ClkI1_Tm( u_18_Tm )
	,	.ClkO( RegimeClocks_fpga_regime_m1 )
	,	.ClkO_ClkS( RegimeClocks_fpga_regime_m1_ClkS )
	,	.ClkO_En( RegimeClocks_fpga_regime_m1_En )
	,	.ClkO_EnS( RegimeClocks_fpga_regime_m1_EnS )
	,	.ClkO_RetRstN( RegimeClocks_fpga_regime_m1_RetRstN )
	,	.ClkO_RstN( RegimeClocks_fpga_regime_m1_RstN )
	,	.ClkO_Tm( RegimeClocks_fpga_regime_m1_Tm )
	,	.Sel( Sel_fpga_regime_m1 )
	);
	assign InternalClocks_fpga_regime_m1_Cm_root_Clk = RegimeClocks_fpga_regime_m1;
	assign DomainClocks_fpga_regime_m1_Cm_root = InternalClocks_fpga_regime_m1_Cm_root_Clk;
	assign InternalClocks_fpga_regime_m1_Cm_root_ClkS = RegimeClocks_fpga_regime_m1_ClkS;
	assign DomainClocks_fpga_regime_m1_Cm_root_ClkS = InternalClocks_fpga_regime_m1_Cm_root_ClkS;
	assign InternalClocks_fpga_regime_m1_Cm_root_En = RegimeClocks_fpga_regime_m1_En;
	assign DomainClocks_fpga_regime_m1_Cm_root_En = InternalClocks_fpga_regime_m1_Cm_root_En;
	assign InternalClocks_fpga_regime_m1_Cm_root_EnS = RegimeClocks_fpga_regime_m1_EnS;
	assign DomainClocks_fpga_regime_m1_Cm_root_EnS = InternalClocks_fpga_regime_m1_Cm_root_EnS;
	assign DomainClocks_fpga_regime_m1_Cm_root_RetRstN = fpga_rstm1_n;
	assign DomainClocks_fpga_regime_m1_Cm_root_RstN = fpga_rstm1_n;
	assign DomainClocks_fpga_regime_m1_Cm_root_Tm = tm;
	anvu_uvmTestEnv_Top_z_T_C_S_C_L_S_O_547b6 Ofpga_regime_s0(
		.Clk( RegimeClocksOsc_fpga_regime_s0 )
	,	.Clk_ClkS( RegimeClocksOsc_fpga_regime_s0_ClkS )
	,	.Clk_En( RegimeClocksOsc_fpga_regime_s0_En )
	,	.Clk_EnS( RegimeClocksOsc_fpga_regime_s0_EnS )
	,	.Clk_RetRstN( RegimeClocksOsc_fpga_regime_s0_RetRstN )
	,	.Clk_RstN( RegimeClocksOsc_fpga_regime_s0_RstN )
	,	.Clk_Tm( RegimeClocksOsc_fpga_regime_s0_Tm )
	);
	assign u_7 = Ref_fpga_regime_s0;
	assign u_7_ClkS = Ref_fpga_regime_s0;
	assign u_7_RetRstN = RegimeClocksOsc_fpga_regime_s0_RetRstN;
	assign u_7_RstN = RegimeClocksOsc_fpga_regime_s0_RstN;
	assign u_7_Tm = RegimeClocksOsc_fpga_regime_s0_Tm;
	anvu_uvmTestEnv_Top_z_T_C_S_C_L_R_Cm ucm17(
		.ClkI0( RegimeClocksOsc_fpga_regime_s0 )
	,	.ClkI0_ClkS( RegimeClocksOsc_fpga_regime_s0_ClkS )
	,	.ClkI0_En( RegimeClocksOsc_fpga_regime_s0_En )
	,	.ClkI0_EnS( RegimeClocksOsc_fpga_regime_s0_EnS )
	,	.ClkI0_RetRstN( RegimeClocksOsc_fpga_regime_s0_RetRstN )
	,	.ClkI0_RstN( RegimeClocksOsc_fpga_regime_s0_RstN )
	,	.ClkI0_Tm( RegimeClocksOsc_fpga_regime_s0_Tm )
	,	.ClkI1( u_7 )
	,	.ClkI1_ClkS( u_7_ClkS )
	,	.ClkI1_En( 1'b1 )
	,	.ClkI1_EnS( 1'b1 )
	,	.ClkI1_RetRstN( u_7_RetRstN )
	,	.ClkI1_RstN( u_7_RstN )
	,	.ClkI1_Tm( u_7_Tm )
	,	.ClkO( RegimeClocks_fpga_regime_s0 )
	,	.ClkO_ClkS( RegimeClocks_fpga_regime_s0_ClkS )
	,	.ClkO_En( RegimeClocks_fpga_regime_s0_En )
	,	.ClkO_EnS( RegimeClocks_fpga_regime_s0_EnS )
	,	.ClkO_RetRstN( RegimeClocks_fpga_regime_s0_RetRstN )
	,	.ClkO_RstN( RegimeClocks_fpga_regime_s0_RstN )
	,	.ClkO_Tm( RegimeClocks_fpga_regime_s0_Tm )
	,	.Sel( Sel_fpga_regime_s0 )
	);
	assign InternalClocks_fpga_regime_s0_Cm_root_Clk = RegimeClocks_fpga_regime_s0;
	assign DomainClocks_fpga_regime_s0_Cm_root = InternalClocks_fpga_regime_s0_Cm_root_Clk;
	assign InternalClocks_fpga_regime_s0_Cm_root_ClkS = RegimeClocks_fpga_regime_s0_ClkS;
	assign DomainClocks_fpga_regime_s0_Cm_root_ClkS = InternalClocks_fpga_regime_s0_Cm_root_ClkS;
	assign InternalClocks_fpga_regime_s0_Cm_root_En = RegimeClocks_fpga_regime_s0_En;
	assign DomainClocks_fpga_regime_s0_Cm_root_En = InternalClocks_fpga_regime_s0_Cm_root_En;
	assign InternalClocks_fpga_regime_s0_Cm_root_EnS = RegimeClocks_fpga_regime_s0_EnS;
	assign DomainClocks_fpga_regime_s0_Cm_root_EnS = InternalClocks_fpga_regime_s0_Cm_root_EnS;
	assign DomainClocks_fpga_regime_s0_Cm_root_RetRstN = fpga_rsts0_n;
	assign DomainClocks_fpga_regime_s0_Cm_root_RstN = fpga_rsts0_n;
	assign DomainClocks_fpga_regime_s0_Cm_root_Tm = tm;
	anvu_uvmTestEnv_Top_z_T_C_S_C_L_S_O_dbd35 Ointerconnect_synch_regime(
		.Clk( RegimeClocksOsc_interconnect_synch_regime )
	,	.Clk_ClkS( RegimeClocksOsc_interconnect_synch_regime_ClkS )
	,	.Clk_En( RegimeClocksOsc_interconnect_synch_regime_En )
	,	.Clk_EnS( RegimeClocksOsc_interconnect_synch_regime_EnS )
	,	.Clk_RetRstN( RegimeClocksOsc_interconnect_synch_regime_RetRstN )
	,	.Clk_RstN( RegimeClocksOsc_interconnect_synch_regime_RstN )
	,	.Clk_Tm( RegimeClocksOsc_interconnect_synch_regime_Tm )
	);
	assign u = Ref_interconnect_synch_regime;
	assign u_ClkS = Ref_interconnect_synch_regime;
	assign u_RetRstN = RegimeClocksOsc_interconnect_synch_regime_RetRstN;
	assign u_RstN = RegimeClocksOsc_interconnect_synch_regime_RstN;
	assign u_Tm = RegimeClocksOsc_interconnect_synch_regime_Tm;
	anvu_uvmTestEnv_Top_z_T_C_S_C_L_R_Cm ucm(
		.ClkI0( RegimeClocksOsc_interconnect_synch_regime )
	,	.ClkI0_ClkS( RegimeClocksOsc_interconnect_synch_regime_ClkS )
	,	.ClkI0_En( RegimeClocksOsc_interconnect_synch_regime_En )
	,	.ClkI0_EnS( RegimeClocksOsc_interconnect_synch_regime_EnS )
	,	.ClkI0_RetRstN( RegimeClocksOsc_interconnect_synch_regime_RetRstN )
	,	.ClkI0_RstN( RegimeClocksOsc_interconnect_synch_regime_RstN )
	,	.ClkI0_Tm( RegimeClocksOsc_interconnect_synch_regime_Tm )
	,	.ClkI1( u )
	,	.ClkI1_ClkS( u_ClkS )
	,	.ClkI1_En( 1'b1 )
	,	.ClkI1_EnS( 1'b1 )
	,	.ClkI1_RetRstN( u_RetRstN )
	,	.ClkI1_RstN( u_RstN )
	,	.ClkI1_Tm( u_Tm )
	,	.ClkO( RegimeClocks_interconnect_synch_regime )
	,	.ClkO_ClkS( RegimeClocks_interconnect_synch_regime_ClkS )
	,	.ClkO_En( RegimeClocks_interconnect_synch_regime_En )
	,	.ClkO_EnS( RegimeClocks_interconnect_synch_regime_EnS )
	,	.ClkO_RetRstN( RegimeClocks_interconnect_synch_regime_RetRstN )
	,	.ClkO_RstN( RegimeClocks_interconnect_synch_regime_RstN )
	,	.ClkO_Tm( RegimeClocks_interconnect_synch_regime_Tm )
	,	.Sel( Sel_interconnect_synch_regime )
	);
	assign u_114 = RegimeClocks_interconnect_synch_regime;
	assign DomainClocks_interconnect_synch_regime_Cm133_root_RstN = rst_133_n;
	assign u_114_RstN = DomainClocks_interconnect_synch_regime_Cm133_root_RstN;
	assign u_122 = u_123 == 3'b0;
	assign u_214c = u_122 | ~ DomainClocks_interconnect_synch_regime_Cm133_root_RstN;
	assign DomainClocks_interconnect_synch_regime_Cm133_root = InternalClocks_interconnect_synch_regime_Cm133_root_Clk;
	always @( posedge u_114 or negedge u_114_RstN )
		if ( ! u_114_RstN )
			u_123 <= #1.0 ( 3'b011 );
		else if ( ( u_114 !== 1'b1 ) ) begin
			if ( ( u_123 !== ( ( u_122 ? 3'b100 : u_123 ) - 3'b001 ) ) ) u_123 <= #1.0 ( 3'bx );
		end
		else	u_123 <= #1.0 ( ( u_122 ? 3'b100 : u_123 ) - 3'b001 );
	anvu_uvmTestEnv_Top_z_T_C_S_C_L_S_Ce_R uce(
		.En( RegimeClocks_interconnect_synch_regime_En & u_214c | RegimeClocks_interconnect_synch_regime_Tm | ~ RegimeClocks_interconnect_synch_regime_RstN )
	,	.I( RegimeClocks_interconnect_synch_regime )
	,	.O( InternalClocks_interconnect_synch_regime_Cm133_root_Clk )
	);
	assign InternalClocks_interconnect_synch_regime_Cm133_root_ClkS = InternalClocks_interconnect_synch_regime_Cm133_root_Clk;
	assign DomainClocks_interconnect_synch_regime_Cm133_root_ClkS = InternalClocks_interconnect_synch_regime_Cm133_root_ClkS;
	assign InternalClocks_interconnect_synch_regime_Cm133_root_En = RegimeClocks_interconnect_synch_regime_En & u_214c;
	assign DomainClocks_interconnect_synch_regime_Cm133_root_En = InternalClocks_interconnect_synch_regime_Cm133_root_En;
	assign InternalClocks_interconnect_synch_regime_Cm133_root_EnS = InternalClocks_interconnect_synch_regime_Cm133_root_En;
	assign DomainClocks_interconnect_synch_regime_Cm133_root_EnS = InternalClocks_interconnect_synch_regime_Cm133_root_EnS;
	assign DomainClocks_interconnect_synch_regime_Cm133_root_RetRstN = rst_133_n;
	assign DomainClocks_interconnect_synch_regime_Cm133_root_Tm = tm;
	assign u_156 = RegimeClocks_interconnect_synch_regime;
	assign DomainClocks_interconnect_synch_regime_Cm266_root_RstN = rst_266_n;
	assign u_156_RstN = DomainClocks_interconnect_synch_regime_Cm266_root_RstN;
	assign u_164 = u_165 == 2'b0;
	assign u_1e1f = u_164 | ~ DomainClocks_interconnect_synch_regime_Cm266_root_RstN;
	assign DomainClocks_interconnect_synch_regime_Cm266_root = InternalClocks_interconnect_synch_regime_Cm266_root_Clk;
	always @( posedge u_156 or negedge u_156_RstN )
		if ( ! u_156_RstN )
			u_165 <= #1.0 ( 2'b01 );
		else if ( ( u_156 !== 1'b1 ) ) begin
			if ( ( u_165 !== ( ( u_164 ? 2'b10 : u_165 ) - 2'b01 ) ) ) u_165 <= #1.0 ( 2'bx );
		end
		else	u_165 <= #1.0 ( ( u_164 ? 2'b10 : u_165 ) - 2'b01 );
	anvu_uvmTestEnv_Top_z_T_C_S_C_L_S_Ce_R uce180(
		.En( RegimeClocks_interconnect_synch_regime_En & u_1e1f | RegimeClocks_interconnect_synch_regime_Tm | ~ RegimeClocks_interconnect_synch_regime_RstN )
	,	.I( RegimeClocks_interconnect_synch_regime )
	,	.O( InternalClocks_interconnect_synch_regime_Cm266_root_Clk )
	);
	assign InternalClocks_interconnect_synch_regime_Cm266_root_ClkS = InternalClocks_interconnect_synch_regime_Cm266_root_Clk;
	assign DomainClocks_interconnect_synch_regime_Cm266_root_ClkS = InternalClocks_interconnect_synch_regime_Cm266_root_ClkS;
	assign InternalClocks_interconnect_synch_regime_Cm266_root_En = RegimeClocks_interconnect_synch_regime_En & u_1e1f;
	assign DomainClocks_interconnect_synch_regime_Cm266_root_En = InternalClocks_interconnect_synch_regime_Cm266_root_En;
	assign InternalClocks_interconnect_synch_regime_Cm266_root_EnS = InternalClocks_interconnect_synch_regime_Cm266_root_En;
	assign DomainClocks_interconnect_synch_regime_Cm266_root_EnS = InternalClocks_interconnect_synch_regime_Cm266_root_EnS;
	assign DomainClocks_interconnect_synch_regime_Cm266_root_RetRstN = rst_266_n;
	assign DomainClocks_interconnect_synch_regime_Cm266_root_Tm = tm;
	assign InternalClocks_interconnect_synch_regime_Cm533_root_Clk = RegimeClocks_interconnect_synch_regime;
	assign DomainClocks_interconnect_synch_regime_Cm533_root = InternalClocks_interconnect_synch_regime_Cm533_root_Clk;
	assign InternalClocks_interconnect_synch_regime_Cm533_root_ClkS = RegimeClocks_interconnect_synch_regime_ClkS;
	assign DomainClocks_interconnect_synch_regime_Cm533_root_ClkS = InternalClocks_interconnect_synch_regime_Cm533_root_ClkS;
	assign InternalClocks_interconnect_synch_regime_Cm533_root_En = RegimeClocks_interconnect_synch_regime_En;
	assign DomainClocks_interconnect_synch_regime_Cm533_root_En = InternalClocks_interconnect_synch_regime_Cm533_root_En;
	assign InternalClocks_interconnect_synch_regime_Cm533_root_EnS = RegimeClocks_interconnect_synch_regime_EnS;
	assign DomainClocks_interconnect_synch_regime_Cm533_root_EnS = InternalClocks_interconnect_synch_regime_Cm533_root_EnS;
	assign DomainClocks_interconnect_synch_regime_Cm533_root_RetRstN = rst_533_n;
	assign DomainClocks_interconnect_synch_regime_Cm533_root_RstN = rst_533_n;
	assign DomainClocks_interconnect_synch_regime_Cm533_root_Tm = tm;
	assign FastRstN = RegimeClocksOsc_interconnect_synch_regime_RstN;
	anvu_uvmTestEnv_Top_z_T_C_S_C_L_S_O_f04ed OAsyncRegimeClk(
		.Clk( RegimeClocks_Async )
	,	.Clk_ClkS( RegimeClocks_Async_ClkS )
	,	.Clk_En( RegimeClocks_Async_En )
	,	.Clk_EnS( RegimeClocks_Async_EnS )
	,	.Clk_RetRstN( RegimeClocks_Async_RetRstN )
	,	.Clk_RstN( RegimeClocks_Async_RstN )
	,	.Clk_Tm( RegimeClocks_Async_Tm )
	);
	assign clk_133 = DomainClocks_interconnect_synch_regime_Cm133_root_ClkS;
	assign clk_266 = DomainClocks_interconnect_synch_regime_Cm266_root_ClkS;
	assign clk_533 = RegimeClocks_interconnect_synch_regime_ClkS;
	assign fpga_clk_m0 = RegimeClocks_fpga_regime_m0_ClkS;
	assign fpga_clk_m1 = RegimeClocks_fpga_regime_m1_ClkS;
	assign fpga_clk_s0 = RegimeClocks_fpga_regime_s0_ClkS;
endmodule

`timescale 1ps/1ps
module sw_ns_engines_flexVerifier_uvm_crdl_testBench_SnpsAhbTargAdapt_z_2d758126 (
	Mst_haddr
,	Mst_hburst
,	Mst_hmastlock
,	Mst_hprot
,	Mst_hrdata
,	Mst_hready
,	Mst_hresp
,	Mst_hsel
,	Mst_hsize
,	Mst_htrans
,	Mst_hwbe
,	Mst_hwdata
,	Mst_hwrite
,	Slv_haddr
,	Slv_hburst
,	Slv_hmastlock
,	Slv_hprot
,	Slv_hrdata
,	Slv_hready
,	Slv_hresp
,	Slv_hsel
,	Slv_hsize
,	Slv_htrans
,	Slv_hwbe
,	Slv_hwdata
,	Slv_hwrite
);
	output [31:0] Mst_haddr     ;
	output [2:0]  Mst_hburst    ;
	output        Mst_hmastlock ;
	output [3:0]  Mst_hprot     ;
	input  [31:0] Mst_hrdata    ;
	input         Mst_hready    ;
	input         Mst_hresp     ;
	output        Mst_hsel      ;
	output [2:0]  Mst_hsize     ;
	output [1:0]  Mst_htrans    ;
	output [3:0]  Mst_hwbe      ;
	output [31:0] Mst_hwdata    ;
	output        Mst_hwrite    ;
	input  [31:0] Slv_haddr     ;
	input  [2:0]  Slv_hburst    ;
	input         Slv_hmastlock ;
	input  [3:0]  Slv_hprot     ;
	output [31:0] Slv_hrdata    ;
	output        Slv_hready    ;
	output        Slv_hresp     ;
	input         Slv_hsel      ;
	input  [2:0]  Slv_hsize     ;
	input  [1:0]  Slv_htrans    ;
	input  [3:0]  Slv_hwbe      ;
	input  [31:0] Slv_hwdata    ;
	input         Slv_hwrite    ;
	assign Mst_haddr = Slv_haddr;
	assign Mst_hburst = { 3 { ( ~ Slv_hwrite ) }  } & Slv_hburst;
	assign Mst_hmastlock = Slv_hmastlock;
	assign Mst_hprot = Slv_hprot;
	assign Mst_hsel = Slv_hsel;
	assign Mst_hsize = Slv_hsize;
	assign Mst_htrans = Slv_htrans & { 1'b1 , ~ Slv_hwrite };
	assign Mst_hwbe = Slv_hwbe;
	assign Mst_hwdata = Slv_hwdata;
	assign Mst_hwrite = Slv_hwrite;
	assign Slv_hrdata = Mst_hrdata;
	assign Slv_hready = Mst_hready;
	assign Slv_hresp = Mst_hresp;
endmodule

`timescale 1ps/1ps
module anvu_uvmTestEnv_Top_z_S_R_U_Cm_U_24b4c5ea (
	In_Clk
,	In_RstN
,	In_Tm
,	root_Clk
,	root_Clk_ClkS
,	root_Clk_En
,	root_Clk_EnS
,	root_Clk_RetRstN
,	root_Clk_RstN
,	root_Clk_Tm
,	root_Pwr_Idle
,	root_Pwr_WakeUp
);
	input   In_Clk           ;
	input   In_RstN          ;
	input   In_Tm            ;
	output  root_Clk         ;
	output  root_Clk_ClkS    ;
	output  root_Clk_En      ;
	output  root_Clk_EnS     ;
	output  root_Clk_RetRstN ;
	output  root_Clk_RstN    ;
	output  root_Clk_Tm      ;
	input   root_Pwr_Idle    ;
	input   root_Pwr_WakeUp  ;
	ClockManager_fpga_regime_s0_Cm IClockManager_fpga_regime_s0_Cm(
		.In_Clk( In_Clk )
	,	.In_RstN( In_RstN )
	,	.In_Tm( In_Tm )
	,	.root_Clk( root_Clk )
	,	.root_En( root_Clk_En )
	,	.root_RstN( root_Clk_RstN )
	,	.root_Tm( root_Clk_Tm )
	);
	assign root_Clk_ClkS = root_Clk;
	assign root_Clk_EnS = root_Clk_En;
	assign root_Clk_RetRstN = root_Clk_RstN;
endmodule

`timescale 1ps/1ps
module anvu_uvmTestEnv_Top_z_S_R_U_Cm_U_38b89c9c (
	In_Clk
,	In_RstN
,	In_Tm
,	root_Clk
,	root_Clk_ClkS
,	root_Clk_En
,	root_Clk_EnS
,	root_Clk_RetRstN
,	root_Clk_RstN
,	root_Clk_Tm
,	root_Pwr_Idle
,	root_Pwr_WakeUp
);
	input   In_Clk           ;
	input   In_RstN          ;
	input   In_Tm            ;
	output  root_Clk         ;
	output  root_Clk_ClkS    ;
	output  root_Clk_En      ;
	output  root_Clk_EnS     ;
	output  root_Clk_RetRstN ;
	output  root_Clk_RstN    ;
	output  root_Clk_Tm      ;
	input   root_Pwr_Idle    ;
	input   root_Pwr_WakeUp  ;
	ClockManager_fpga_regime_m0_Cm IClockManager_fpga_regime_m0_Cm(
		.In_Clk( In_Clk )
	,	.In_RstN( In_RstN )
	,	.In_Tm( In_Tm )
	,	.root_Clk( root_Clk )
	,	.root_En( root_Clk_En )
	,	.root_RstN( root_Clk_RstN )
	,	.root_Tm( root_Clk_Tm )
	);
	assign root_Clk_ClkS = root_Clk;
	assign root_Clk_EnS = root_Clk_En;
	assign root_Clk_RetRstN = root_Clk_RstN;
endmodule

`timescale 1ps/1ps
module anvu_uvmTestEnv_Top_z_S_R_U_Cm_U_398317f8 (
	In_Clk
,	In_RstN
,	In_Tm
,	root_Clk
,	root_Clk_ClkS
,	root_Clk_En
,	root_Clk_EnS
,	root_Clk_RetRstN
,	root_Clk_RstN
,	root_Clk_Tm
,	root_Pwr_Idle
,	root_Pwr_WakeUp
);
	input   In_Clk           ;
	input   In_RstN          ;
	input   In_Tm            ;
	output  root_Clk         ;
	output  root_Clk_ClkS    ;
	output  root_Clk_En      ;
	output  root_Clk_EnS     ;
	output  root_Clk_RetRstN ;
	output  root_Clk_RstN    ;
	output  root_Clk_Tm      ;
	input   root_Pwr_Idle    ;
	input   root_Pwr_WakeUp  ;
	ClockManager_interconnect_synch_regime_Cm533 IClockManager_interconnect_synch_regime_Cm533(
		.In_Clk( In_Clk )
	,	.In_RstN( In_RstN )
	,	.In_Tm( In_Tm )
	,	.root_Clk( root_Clk )
	,	.root_En( root_Clk_En )
	,	.root_RstN( root_Clk_RstN )
	,	.root_Tm( root_Clk_Tm )
	);
	assign root_Clk_ClkS = root_Clk;
	assign root_Clk_EnS = root_Clk_En;
	assign root_Clk_RetRstN = root_Clk_RstN;
endmodule

`timescale 1ps/1ps
module anvu_uvmTestEnv_Top_z_S_R_U_Cm_U_6511d323 (
	In_Clk
,	In_RstN
,	In_Tm
,	root_Clk
,	root_Clk_ClkS
,	root_Clk_En
,	root_Clk_EnS
,	root_Clk_RetRstN
,	root_Clk_RstN
,	root_Clk_Tm
,	root_Pwr_Idle
,	root_Pwr_WakeUp
);
	input   In_Clk           ;
	input   In_RstN          ;
	input   In_Tm            ;
	output  root_Clk         ;
	output  root_Clk_ClkS    ;
	output  root_Clk_En      ;
	output  root_Clk_EnS     ;
	output  root_Clk_RetRstN ;
	output  root_Clk_RstN    ;
	output  root_Clk_Tm      ;
	input   root_Pwr_Idle    ;
	input   root_Pwr_WakeUp  ;
	ClockManager_fpga_regime_m1_Cm IClockManager_fpga_regime_m1_Cm(
		.In_Clk( In_Clk )
	,	.In_RstN( In_RstN )
	,	.In_Tm( In_Tm )
	,	.root_Clk( root_Clk )
	,	.root_En( root_Clk_En )
	,	.root_RstN( root_Clk_RstN )
	,	.root_Tm( root_Clk_Tm )
	);
	assign root_Clk_ClkS = root_Clk;
	assign root_Clk_EnS = root_Clk_En;
	assign root_Clk_RetRstN = root_Clk_RstN;
endmodule

`timescale 1ps/1ps
module anvu_uvmTestEnv_Top_z_S_R_U_Cm_U_83ff00b5 (
	In_Clk
,	In_RstN
,	In_Tm
,	In_root_Clk
,	root_Clk
,	root_Clk_ClkS
,	root_Clk_En
,	root_Clk_EnS
,	root_Clk_RetRstN
,	root_Clk_RstN
,	root_Clk_Tm
,	root_Pwr_Idle
,	root_Pwr_WakeUp
);
	input   In_Clk           ;
	input   In_RstN          ;
	input   In_Tm            ;
	input   In_root_Clk      ;
	output  root_Clk         ;
	output  root_Clk_ClkS    ;
	output  root_Clk_En      ;
	output  root_Clk_EnS     ;
	output  root_Clk_RetRstN ;
	output  root_Clk_RstN    ;
	output  root_Clk_Tm      ;
	input   root_Pwr_Idle    ;
	input   root_Pwr_WakeUp  ;
	ClockManager_interconnect_synch_regime_Cm266 IClockManager_interconnect_synch_regime_Cm266(
		.In_Clk( In_Clk )
	,	.In_RstN( In_RstN )
	,	.In_Tm( In_Tm )
	,	.In_root_Clk( In_root_Clk )
	,	.root_Clk( root_Clk )
	,	.root_En( root_Clk_En )
	,	.root_RstN( root_Clk_RstN )
	,	.root_Tm( root_Clk_Tm )
	);
	assign root_Clk_ClkS = root_Clk;
	assign root_Clk_EnS = root_Clk_En;
	assign root_Clk_RetRstN = root_Clk_RstN;
endmodule

`timescale 1ps/1ps
module anvu_uvmTestEnv_Top_z_S_R_U_Cm_U_e3d1b193 (
	In_Clk
,	In_RstN
,	In_Tm
,	In_root_Clk
,	root_Clk
,	root_Clk_ClkS
,	root_Clk_En
,	root_Clk_EnS
,	root_Clk_RetRstN
,	root_Clk_RstN
,	root_Clk_Tm
,	root_Pwr_Idle
,	root_Pwr_WakeUp
);
	input   In_Clk           ;
	input   In_RstN          ;
	input   In_Tm            ;
	input   In_root_Clk      ;
	output  root_Clk         ;
	output  root_Clk_ClkS    ;
	output  root_Clk_En      ;
	output  root_Clk_EnS     ;
	output  root_Clk_RetRstN ;
	output  root_Clk_RstN    ;
	output  root_Clk_Tm      ;
	input   root_Pwr_Idle    ;
	input   root_Pwr_WakeUp  ;
	ClockManager_interconnect_synch_regime_Cm133 IClockManager_interconnect_synch_regime_Cm133(
		.In_Clk( In_Clk )
	,	.In_RstN( In_RstN )
	,	.In_Tm( In_Tm )
	,	.In_root_Clk( In_root_Clk )
	,	.root_Clk( root_Clk )
	,	.root_En( root_Clk_En )
	,	.root_RstN( root_Clk_RstN )
	,	.root_Tm( root_Clk_Tm )
	);
	assign root_Clk_ClkS = root_Clk;
	assign root_Clk_EnS = root_Clk_En;
	assign root_Clk_RetRstN = root_Clk_RstN;
endmodule

`timescale 1ps/1ps
module sw_ns_engines_flexVerifier_uvm_crdl_instrumentedNoc_Top_z_e79c3c56 (
	ACPU_WDT_PAddr
,	ACPU_WDT_PEnable
,	ACPU_WDT_PRData
,	ACPU_WDT_PReady
,	ACPU_WDT_PSel
,	ACPU_WDT_PSlvErr
,	ACPU_WDT_PWBe
,	ACPU_WDT_PWData
,	ACPU_WDT_PWrite
,	BCPU_WDT_PAddr
,	BCPU_WDT_PEnable
,	BCPU_WDT_PRData
,	BCPU_WDT_PReady
,	BCPU_WDT_PSel
,	BCPU_WDT_PSlvErr
,	BCPU_WDT_PWBe
,	BCPU_WDT_PWData
,	BCPU_WDT_PWrite
,	DMA_apb_s0_paddr
,	DMA_apb_s0_penable
,	DMA_apb_s0_prdata
,	DMA_apb_s0_pready
,	DMA_apb_s0_psel
,	DMA_apb_s0_pslverr
,	DMA_apb_s0_pwbe
,	DMA_apb_s0_pwdata
,	DMA_apb_s0_pwrite
,	FCB_apb_s0_paddr
,	FCB_apb_s0_penable
,	FCB_apb_s0_prdata
,	FCB_apb_s0_pready
,	FCB_apb_s0_psel
,	FCB_apb_s0_pslverr
,	FCB_apb_s0_pwbe
,	FCB_apb_s0_pwdata
,	FCB_apb_s0_pwrite
,	GPIO_apb_s0_paddr
,	GPIO_apb_s0_penable
,	GPIO_apb_s0_prdata
,	GPIO_apb_s0_pready
,	GPIO_apb_s0_psel
,	GPIO_apb_s0_pslverr
,	GPIO_apb_s0_pwbe
,	GPIO_apb_s0_pwdata
,	GPIO_apb_s0_pwrite
,	GPT_apb_s0_paddr
,	GPT_apb_s0_penable
,	GPT_apb_s0_prdata
,	GPT_apb_s0_pready
,	GPT_apb_s0_psel
,	GPT_apb_s0_pslverr
,	GPT_apb_s0_pwbe
,	GPT_apb_s0_pwdata
,	GPT_apb_s0_pwrite
,	I2C_apb_s0_paddr
,	I2C_apb_s0_penable
,	I2C_apb_s0_prdata
,	I2C_apb_s0_pready
,	I2C_apb_s0_psel
,	I2C_apb_s0_pslverr
,	I2C_apb_s0_pwbe
,	I2C_apb_s0_pwdata
,	I2C_apb_s0_pwrite
,	MBOX_apb_s0_paddr
,	MBOX_apb_s0_penable
,	MBOX_apb_s0_prdata
,	MBOX_apb_s0_pready
,	MBOX_apb_s0_psel
,	MBOX_apb_s0_pslverr
,	MBOX_apb_s0_pwbe
,	MBOX_apb_s0_pwdata
,	MBOX_apb_s0_pwrite
,	PUFCC_apb_s0_PAddr
,	PUFCC_apb_s0_PEnable
,	PUFCC_apb_s0_PProt
,	PUFCC_apb_s0_PRData
,	PUFCC_apb_s0_PReady
,	PUFCC_apb_s0_PSel
,	PUFCC_apb_s0_PSlvErr
,	PUFCC_apb_s0_PStrb
,	PUFCC_apb_s0_PWData
,	PUFCC_apb_s0_PWrite
,	SCU_PAddr
,	SCU_PEnable
,	SCU_PRData
,	SCU_PReady
,	SCU_PSel
,	SCU_PSlvErr
,	SCU_PWBe
,	SCU_PWData
,	SCU_PWrite
,	SPI_ahb_s0_haddr
,	SPI_ahb_s0_hburst
,	SPI_ahb_s0_hmastlock
,	SPI_ahb_s0_hprot
,	SPI_ahb_s0_hrdata
,	SPI_ahb_s0_hready
,	SPI_ahb_s0_hresp
,	SPI_ahb_s0_hsel
,	SPI_ahb_s0_hsize
,	SPI_ahb_s0_htrans
,	SPI_ahb_s0_hwbe
,	SPI_ahb_s0_hwdata
,	SPI_ahb_s0_hwrite
,	SPI_mem_ahb_haddr
,	SPI_mem_ahb_hburst
,	SPI_mem_ahb_hmastlock
,	SPI_mem_ahb_hprot
,	SPI_mem_ahb_hrdata
,	SPI_mem_ahb_hready
,	SPI_mem_ahb_hresp
,	SPI_mem_ahb_hsel
,	SPI_mem_ahb_hsize
,	SPI_mem_ahb_htrans
,	SPI_mem_ahb_hwbe
,	SPI_mem_ahb_hwdata
,	SPI_mem_ahb_hwrite
,	UART_apb_s0_paddr
,	UART_apb_s0_penable
,	UART_apb_s0_prdata
,	UART_apb_s0_pready
,	UART_apb_s0_psel
,	UART_apb_s0_pslverr
,	UART_apb_s0_pwbe
,	UART_apb_s0_pwdata
,	UART_apb_s0_pwrite
,	UART_apb_s1_paddr
,	UART_apb_s1_penable
,	UART_apb_s1_prdata
,	UART_apb_s1_pready
,	UART_apb_s1_psel
,	UART_apb_s1_pslverr
,	UART_apb_s1_pwbe
,	UART_apb_s1_pwdata
,	UART_apb_s1_pwrite
,	USB_axi_s0_ar_addr
,	USB_axi_s0_ar_prot
,	USB_axi_s0_ar_ready
,	USB_axi_s0_ar_valid
,	USB_axi_s0_aw_addr
,	USB_axi_s0_aw_prot
,	USB_axi_s0_aw_ready
,	USB_axi_s0_aw_valid
,	USB_axi_s0_b_ready
,	USB_axi_s0_b_resp
,	USB_axi_s0_b_valid
,	USB_axi_s0_r_data
,	USB_axi_s0_r_ready
,	USB_axi_s0_r_resp
,	USB_axi_s0_r_valid
,	USB_axi_s0_w_data
,	USB_axi_s0_w_ready
,	USB_axi_s0_w_strb
,	USB_axi_s0_w_valid
,	acpu_axi_m0_ar_addr
,	acpu_axi_m0_ar_burst
,	acpu_axi_m0_ar_cache
,	acpu_axi_m0_ar_id
,	acpu_axi_m0_ar_len
,	acpu_axi_m0_ar_lock
,	acpu_axi_m0_ar_prot
,	acpu_axi_m0_ar_ready
,	acpu_axi_m0_ar_size
,	acpu_axi_m0_ar_valid
,	acpu_axi_m0_aw_addr
,	acpu_axi_m0_aw_burst
,	acpu_axi_m0_aw_cache
,	acpu_axi_m0_aw_id
,	acpu_axi_m0_aw_len
,	acpu_axi_m0_aw_lock
,	acpu_axi_m0_aw_prot
,	acpu_axi_m0_aw_ready
,	acpu_axi_m0_aw_size
,	acpu_axi_m0_aw_valid
,	acpu_axi_m0_b_id
,	acpu_axi_m0_b_ready
,	acpu_axi_m0_b_resp
,	acpu_axi_m0_b_valid
,	acpu_axi_m0_r_data
,	acpu_axi_m0_r_id
,	acpu_axi_m0_r_last
,	acpu_axi_m0_r_ready
,	acpu_axi_m0_r_resp
,	acpu_axi_m0_r_valid
,	acpu_axi_m0_w_data
,	acpu_axi_m0_w_last
,	acpu_axi_m0_w_ready
,	acpu_axi_m0_w_strb
,	acpu_axi_m0_w_valid
,	arm_axi_m0_ar_addr
,	arm_axi_m0_ar_burst
,	arm_axi_m0_ar_cache
,	arm_axi_m0_ar_id
,	arm_axi_m0_ar_len
,	arm_axi_m0_ar_lock
,	arm_axi_m0_ar_prot
,	arm_axi_m0_ar_ready
,	arm_axi_m0_ar_size
,	arm_axi_m0_ar_valid
,	arm_axi_m0_aw_addr
,	arm_axi_m0_aw_burst
,	arm_axi_m0_aw_cache
,	arm_axi_m0_aw_id
,	arm_axi_m0_aw_len
,	arm_axi_m0_aw_lock
,	arm_axi_m0_aw_prot
,	arm_axi_m0_aw_ready
,	arm_axi_m0_aw_size
,	arm_axi_m0_aw_valid
,	arm_axi_m0_b_id
,	arm_axi_m0_b_ready
,	arm_axi_m0_b_resp
,	arm_axi_m0_b_valid
,	arm_axi_m0_r_data
,	arm_axi_m0_r_id
,	arm_axi_m0_r_last
,	arm_axi_m0_r_ready
,	arm_axi_m0_r_resp
,	arm_axi_m0_r_valid
,	arm_axi_m0_w_data
,	arm_axi_m0_w_last
,	arm_axi_m0_w_ready
,	arm_axi_m0_w_strb
,	arm_axi_m0_w_valid
,	bcpu_ahb_m0_haddr
,	bcpu_ahb_m0_hburst
,	bcpu_ahb_m0_hmastlock
,	bcpu_ahb_m0_hprot
,	bcpu_ahb_m0_hrdata
,	bcpu_ahb_m0_hready
,	bcpu_ahb_m0_hresp
,	bcpu_ahb_m0_hsel
,	bcpu_ahb_m0_hsize
,	bcpu_ahb_m0_htrans
,	bcpu_ahb_m0_hwbe
,	bcpu_ahb_m0_hwdata
,	bcpu_ahb_m0_hwrite
,	clk_133
,	clk_266
,	clk_533
,	cpu_observer_AFReady
,	cpu_observer_AFValid
,	cpu_observer_ATBytes
,	cpu_observer_ATData
,	cpu_observer_ATId
,	cpu_observer_ATReady
,	cpu_observer_ATValid
,	ddr_axi_s0_ar_addr
,	ddr_axi_s0_ar_burst
,	ddr_axi_s0_ar_cache
,	ddr_axi_s0_ar_id
,	ddr_axi_s0_ar_len
,	ddr_axi_s0_ar_lock
,	ddr_axi_s0_ar_prot
,	ddr_axi_s0_ar_ready
,	ddr_axi_s0_ar_size
,	ddr_axi_s0_ar_valid
,	ddr_axi_s0_aw_addr
,	ddr_axi_s0_aw_burst
,	ddr_axi_s0_aw_cache
,	ddr_axi_s0_aw_id
,	ddr_axi_s0_aw_len
,	ddr_axi_s0_aw_lock
,	ddr_axi_s0_aw_prot
,	ddr_axi_s0_aw_ready
,	ddr_axi_s0_aw_size
,	ddr_axi_s0_aw_valid
,	ddr_axi_s0_b_id
,	ddr_axi_s0_b_ready
,	ddr_axi_s0_b_resp
,	ddr_axi_s0_b_valid
,	ddr_axi_s0_r_data
,	ddr_axi_s0_r_id
,	ddr_axi_s0_r_last
,	ddr_axi_s0_r_ready
,	ddr_axi_s0_r_resp
,	ddr_axi_s0_r_valid
,	ddr_axi_s0_w_data
,	ddr_axi_s0_w_last
,	ddr_axi_s0_w_ready
,	ddr_axi_s0_w_strb
,	ddr_axi_s0_w_valid
,	ddr_axi_s1_ar_addr
,	ddr_axi_s1_ar_burst
,	ddr_axi_s1_ar_cache
,	ddr_axi_s1_ar_id
,	ddr_axi_s1_ar_len
,	ddr_axi_s1_ar_lock
,	ddr_axi_s1_ar_prot
,	ddr_axi_s1_ar_ready
,	ddr_axi_s1_ar_size
,	ddr_axi_s1_ar_valid
,	ddr_axi_s1_aw_addr
,	ddr_axi_s1_aw_burst
,	ddr_axi_s1_aw_cache
,	ddr_axi_s1_aw_id
,	ddr_axi_s1_aw_len
,	ddr_axi_s1_aw_lock
,	ddr_axi_s1_aw_prot
,	ddr_axi_s1_aw_ready
,	ddr_axi_s1_aw_size
,	ddr_axi_s1_aw_valid
,	ddr_axi_s1_b_id
,	ddr_axi_s1_b_ready
,	ddr_axi_s1_b_resp
,	ddr_axi_s1_b_valid
,	ddr_axi_s1_r_data
,	ddr_axi_s1_r_id
,	ddr_axi_s1_r_last
,	ddr_axi_s1_r_ready
,	ddr_axi_s1_r_resp
,	ddr_axi_s1_r_valid
,	ddr_axi_s1_w_data
,	ddr_axi_s1_w_last
,	ddr_axi_s1_w_ready
,	ddr_axi_s1_w_strb
,	ddr_axi_s1_w_valid
,	ddr_axi_s2_ar_addr
,	ddr_axi_s2_ar_burst
,	ddr_axi_s2_ar_cache
,	ddr_axi_s2_ar_id
,	ddr_axi_s2_ar_len
,	ddr_axi_s2_ar_lock
,	ddr_axi_s2_ar_prot
,	ddr_axi_s2_ar_ready
,	ddr_axi_s2_ar_size
,	ddr_axi_s2_ar_valid
,	ddr_axi_s2_aw_addr
,	ddr_axi_s2_aw_burst
,	ddr_axi_s2_aw_cache
,	ddr_axi_s2_aw_id
,	ddr_axi_s2_aw_len
,	ddr_axi_s2_aw_lock
,	ddr_axi_s2_aw_prot
,	ddr_axi_s2_aw_ready
,	ddr_axi_s2_aw_size
,	ddr_axi_s2_aw_valid
,	ddr_axi_s2_b_id
,	ddr_axi_s2_b_ready
,	ddr_axi_s2_b_resp
,	ddr_axi_s2_b_valid
,	ddr_axi_s2_r_data
,	ddr_axi_s2_r_id
,	ddr_axi_s2_r_last
,	ddr_axi_s2_r_ready
,	ddr_axi_s2_r_resp
,	ddr_axi_s2_r_valid
,	ddr_axi_s2_w_data
,	ddr_axi_s2_w_last
,	ddr_axi_s2_w_ready
,	ddr_axi_s2_w_strb
,	ddr_axi_s2_w_valid
,	ddr_axi_s3_ar_addr
,	ddr_axi_s3_ar_burst
,	ddr_axi_s3_ar_cache
,	ddr_axi_s3_ar_id
,	ddr_axi_s3_ar_len
,	ddr_axi_s3_ar_lock
,	ddr_axi_s3_ar_prot
,	ddr_axi_s3_ar_ready
,	ddr_axi_s3_ar_size
,	ddr_axi_s3_ar_valid
,	ddr_axi_s3_aw_addr
,	ddr_axi_s3_aw_burst
,	ddr_axi_s3_aw_cache
,	ddr_axi_s3_aw_id
,	ddr_axi_s3_aw_len
,	ddr_axi_s3_aw_lock
,	ddr_axi_s3_aw_prot
,	ddr_axi_s3_aw_ready
,	ddr_axi_s3_aw_size
,	ddr_axi_s3_aw_valid
,	ddr_axi_s3_b_id
,	ddr_axi_s3_b_ready
,	ddr_axi_s3_b_resp
,	ddr_axi_s3_b_valid
,	ddr_axi_s3_r_data
,	ddr_axi_s3_r_id
,	ddr_axi_s3_r_last
,	ddr_axi_s3_r_ready
,	ddr_axi_s3_r_resp
,	ddr_axi_s3_r_valid
,	ddr_axi_s3_w_data
,	ddr_axi_s3_w_last
,	ddr_axi_s3_w_ready
,	ddr_axi_s3_w_strb
,	ddr_axi_s3_w_valid
,	ddr_axil_s0_ar_addr
,	ddr_axil_s0_ar_prot
,	ddr_axil_s0_ar_ready
,	ddr_axil_s0_ar_valid
,	ddr_axil_s0_aw_addr
,	ddr_axil_s0_aw_prot
,	ddr_axil_s0_aw_ready
,	ddr_axil_s0_aw_valid
,	ddr_axil_s0_b_ready
,	ddr_axil_s0_b_resp
,	ddr_axil_s0_b_valid
,	ddr_axil_s0_r_data
,	ddr_axil_s0_r_ready
,	ddr_axil_s0_r_resp
,	ddr_axil_s0_r_valid
,	ddr_axil_s0_w_data
,	ddr_axil_s0_w_ready
,	ddr_axil_s0_w_strb
,	ddr_axil_s0_w_valid
,	dma_axi_m0_ar_addr
,	dma_axi_m0_ar_burst
,	dma_axi_m0_ar_cache
,	dma_axi_m0_ar_id
,	dma_axi_m0_ar_len
,	dma_axi_m0_ar_lock
,	dma_axi_m0_ar_prot
,	dma_axi_m0_ar_ready
,	dma_axi_m0_ar_size
,	dma_axi_m0_ar_valid
,	dma_axi_m0_aw_addr
,	dma_axi_m0_aw_burst
,	dma_axi_m0_aw_cache
,	dma_axi_m0_aw_id
,	dma_axi_m0_aw_len
,	dma_axi_m0_aw_lock
,	dma_axi_m0_aw_prot
,	dma_axi_m0_aw_ready
,	dma_axi_m0_aw_size
,	dma_axi_m0_aw_valid
,	dma_axi_m0_b_id
,	dma_axi_m0_b_ready
,	dma_axi_m0_b_resp
,	dma_axi_m0_b_valid
,	dma_axi_m0_r_data
,	dma_axi_m0_r_id
,	dma_axi_m0_r_last
,	dma_axi_m0_r_ready
,	dma_axi_m0_r_resp
,	dma_axi_m0_r_valid
,	dma_axi_m0_w_data
,	dma_axi_m0_w_last
,	dma_axi_m0_w_ready
,	dma_axi_m0_w_strb
,	dma_axi_m0_w_valid
,	dma_axi_m1_ar_addr
,	dma_axi_m1_ar_burst
,	dma_axi_m1_ar_cache
,	dma_axi_m1_ar_id
,	dma_axi_m1_ar_len
,	dma_axi_m1_ar_lock
,	dma_axi_m1_ar_prot
,	dma_axi_m1_ar_ready
,	dma_axi_m1_ar_size
,	dma_axi_m1_ar_valid
,	dma_axi_m1_aw_addr
,	dma_axi_m1_aw_burst
,	dma_axi_m1_aw_cache
,	dma_axi_m1_aw_id
,	dma_axi_m1_aw_len
,	dma_axi_m1_aw_lock
,	dma_axi_m1_aw_prot
,	dma_axi_m1_aw_ready
,	dma_axi_m1_aw_size
,	dma_axi_m1_aw_valid
,	dma_axi_m1_b_id
,	dma_axi_m1_b_ready
,	dma_axi_m1_b_resp
,	dma_axi_m1_b_valid
,	dma_axi_m1_r_data
,	dma_axi_m1_r_id
,	dma_axi_m1_r_last
,	dma_axi_m1_r_ready
,	dma_axi_m1_r_resp
,	dma_axi_m1_r_valid
,	dma_axi_m1_w_data
,	dma_axi_m1_w_last
,	dma_axi_m1_w_ready
,	dma_axi_m1_w_strb
,	dma_axi_m1_w_valid
,	fpga_ahb_s0_haddr
,	fpga_ahb_s0_hburst
,	fpga_ahb_s0_hmastlock
,	fpga_ahb_s0_hprot
,	fpga_ahb_s0_hrdata
,	fpga_ahb_s0_hready
,	fpga_ahb_s0_hresp
,	fpga_ahb_s0_hsel
,	fpga_ahb_s0_hsize
,	fpga_ahb_s0_htrans
,	fpga_ahb_s0_hwbe
,	fpga_ahb_s0_hwdata
,	fpga_ahb_s0_hwrite
,	fpga_axi_m0_ar_addr
,	fpga_axi_m0_ar_burst
,	fpga_axi_m0_ar_cache
,	fpga_axi_m0_ar_id
,	fpga_axi_m0_ar_len
,	fpga_axi_m0_ar_lock
,	fpga_axi_m0_ar_prot
,	fpga_axi_m0_ar_ready
,	fpga_axi_m0_ar_size
,	fpga_axi_m0_ar_valid
,	fpga_axi_m0_aw_addr
,	fpga_axi_m0_aw_burst
,	fpga_axi_m0_aw_cache
,	fpga_axi_m0_aw_id
,	fpga_axi_m0_aw_len
,	fpga_axi_m0_aw_lock
,	fpga_axi_m0_aw_prot
,	fpga_axi_m0_aw_ready
,	fpga_axi_m0_aw_size
,	fpga_axi_m0_aw_valid
,	fpga_axi_m0_b_id
,	fpga_axi_m0_b_ready
,	fpga_axi_m0_b_resp
,	fpga_axi_m0_b_valid
,	fpga_axi_m0_r_data
,	fpga_axi_m0_r_id
,	fpga_axi_m0_r_last
,	fpga_axi_m0_r_ready
,	fpga_axi_m0_r_resp
,	fpga_axi_m0_r_valid
,	fpga_axi_m0_w_data
,	fpga_axi_m0_w_last
,	fpga_axi_m0_w_ready
,	fpga_axi_m0_w_strb
,	fpga_axi_m0_w_valid
,	fpga_axi_m1_ar_addr
,	fpga_axi_m1_ar_burst
,	fpga_axi_m1_ar_cache
,	fpga_axi_m1_ar_id
,	fpga_axi_m1_ar_len
,	fpga_axi_m1_ar_lock
,	fpga_axi_m1_ar_prot
,	fpga_axi_m1_ar_ready
,	fpga_axi_m1_ar_size
,	fpga_axi_m1_ar_valid
,	fpga_axi_m1_aw_addr
,	fpga_axi_m1_aw_burst
,	fpga_axi_m1_aw_cache
,	fpga_axi_m1_aw_id
,	fpga_axi_m1_aw_len
,	fpga_axi_m1_aw_lock
,	fpga_axi_m1_aw_prot
,	fpga_axi_m1_aw_ready
,	fpga_axi_m1_aw_size
,	fpga_axi_m1_aw_valid
,	fpga_axi_m1_b_id
,	fpga_axi_m1_b_ready
,	fpga_axi_m1_b_resp
,	fpga_axi_m1_b_valid
,	fpga_axi_m1_r_data
,	fpga_axi_m1_r_id
,	fpga_axi_m1_r_last
,	fpga_axi_m1_r_ready
,	fpga_axi_m1_r_resp
,	fpga_axi_m1_r_valid
,	fpga_axi_m1_w_data
,	fpga_axi_m1_w_last
,	fpga_axi_m1_w_ready
,	fpga_axi_m1_w_strb
,	fpga_axi_m1_w_valid
,	fpga_clk_m0
,	fpga_clk_m1
,	fpga_clk_s0
,	fpga_rstm0_n
,	fpga_rstm1_n
,	fpga_rsts0_n
,	gbe_apb_s0_paddr
,	gbe_apb_s0_penable
,	gbe_apb_s0_prdata
,	gbe_apb_s0_pready
,	gbe_apb_s0_psel
,	gbe_apb_s0_pslverr
,	gbe_apb_s0_pwbe
,	gbe_apb_s0_pwdata
,	gbe_apb_s0_pwrite
,	gbe_axi_m0_ar_addr
,	gbe_axi_m0_ar_burst
,	gbe_axi_m0_ar_cache
,	gbe_axi_m0_ar_id
,	gbe_axi_m0_ar_len
,	gbe_axi_m0_ar_lock
,	gbe_axi_m0_ar_prot
,	gbe_axi_m0_ar_ready
,	gbe_axi_m0_ar_size
,	gbe_axi_m0_ar_valid
,	gbe_axi_m0_aw_addr
,	gbe_axi_m0_aw_burst
,	gbe_axi_m0_aw_cache
,	gbe_axi_m0_aw_id
,	gbe_axi_m0_aw_len
,	gbe_axi_m0_aw_lock
,	gbe_axi_m0_aw_prot
,	gbe_axi_m0_aw_ready
,	gbe_axi_m0_aw_size
,	gbe_axi_m0_aw_valid
,	gbe_axi_m0_b_id
,	gbe_axi_m0_b_ready
,	gbe_axi_m0_b_resp
,	gbe_axi_m0_b_valid
,	gbe_axi_m0_r_data
,	gbe_axi_m0_r_id
,	gbe_axi_m0_r_last
,	gbe_axi_m0_r_ready
,	gbe_axi_m0_r_resp
,	gbe_axi_m0_r_valid
,	gbe_axi_m0_w_data
,	gbe_axi_m0_w_last
,	gbe_axi_m0_w_ready
,	gbe_axi_m0_w_strb
,	gbe_axi_m0_w_valid
,	pufcc_axi_m0_ar_addr
,	pufcc_axi_m0_ar_burst
,	pufcc_axi_m0_ar_cache
,	pufcc_axi_m0_ar_id
,	pufcc_axi_m0_ar_len
,	pufcc_axi_m0_ar_lock
,	pufcc_axi_m0_ar_prot
,	pufcc_axi_m0_ar_ready
,	pufcc_axi_m0_ar_size
,	pufcc_axi_m0_ar_valid
,	pufcc_axi_m0_aw_addr
,	pufcc_axi_m0_aw_burst
,	pufcc_axi_m0_aw_cache
,	pufcc_axi_m0_aw_id
,	pufcc_axi_m0_aw_len
,	pufcc_axi_m0_aw_lock
,	pufcc_axi_m0_aw_prot
,	pufcc_axi_m0_aw_ready
,	pufcc_axi_m0_aw_size
,	pufcc_axi_m0_aw_valid
,	pufcc_axi_m0_b_id
,	pufcc_axi_m0_b_ready
,	pufcc_axi_m0_b_resp
,	pufcc_axi_m0_b_valid
,	pufcc_axi_m0_r_data
,	pufcc_axi_m0_r_id
,	pufcc_axi_m0_r_last
,	pufcc_axi_m0_r_ready
,	pufcc_axi_m0_r_resp
,	pufcc_axi_m0_r_valid
,	pufcc_axi_m0_w_data
,	pufcc_axi_m0_w_last
,	pufcc_axi_m0_w_ready
,	pufcc_axi_m0_w_strb
,	pufcc_axi_m0_w_valid
,	rst_133_n
,	rst_266_n
,	rst_533_n
,	sram_axi_s0_ar_addr
,	sram_axi_s0_ar_burst
,	sram_axi_s0_ar_cache
,	sram_axi_s0_ar_id
,	sram_axi_s0_ar_len
,	sram_axi_s0_ar_lock
,	sram_axi_s0_ar_prot
,	sram_axi_s0_ar_ready
,	sram_axi_s0_ar_size
,	sram_axi_s0_ar_valid
,	sram_axi_s0_aw_addr
,	sram_axi_s0_aw_burst
,	sram_axi_s0_aw_cache
,	sram_axi_s0_aw_id
,	sram_axi_s0_aw_len
,	sram_axi_s0_aw_lock
,	sram_axi_s0_aw_prot
,	sram_axi_s0_aw_ready
,	sram_axi_s0_aw_size
,	sram_axi_s0_aw_valid
,	sram_axi_s0_b_id
,	sram_axi_s0_b_ready
,	sram_axi_s0_b_resp
,	sram_axi_s0_b_valid
,	sram_axi_s0_r_data
,	sram_axi_s0_r_id
,	sram_axi_s0_r_last
,	sram_axi_s0_r_ready
,	sram_axi_s0_r_resp
,	sram_axi_s0_r_valid
,	sram_axi_s0_w_data
,	sram_axi_s0_w_last
,	sram_axi_s0_w_ready
,	sram_axi_s0_w_strb
,	sram_axi_s0_w_valid
,	sram_axi_s1_ar_addr
,	sram_axi_s1_ar_burst
,	sram_axi_s1_ar_cache
,	sram_axi_s1_ar_id
,	sram_axi_s1_ar_len
,	sram_axi_s1_ar_lock
,	sram_axi_s1_ar_prot
,	sram_axi_s1_ar_ready
,	sram_axi_s1_ar_size
,	sram_axi_s1_ar_valid
,	sram_axi_s1_aw_addr
,	sram_axi_s1_aw_burst
,	sram_axi_s1_aw_cache
,	sram_axi_s1_aw_id
,	sram_axi_s1_aw_len
,	sram_axi_s1_aw_lock
,	sram_axi_s1_aw_prot
,	sram_axi_s1_aw_ready
,	sram_axi_s1_aw_size
,	sram_axi_s1_aw_valid
,	sram_axi_s1_b_id
,	sram_axi_s1_b_ready
,	sram_axi_s1_b_resp
,	sram_axi_s1_b_valid
,	sram_axi_s1_r_data
,	sram_axi_s1_r_id
,	sram_axi_s1_r_last
,	sram_axi_s1_r_ready
,	sram_axi_s1_r_resp
,	sram_axi_s1_r_valid
,	sram_axi_s1_w_data
,	sram_axi_s1_w_last
,	sram_axi_s1_w_ready
,	sram_axi_s1_w_strb
,	sram_axi_s1_w_valid
,	sram_axi_s2_ar_addr
,	sram_axi_s2_ar_burst
,	sram_axi_s2_ar_cache
,	sram_axi_s2_ar_id
,	sram_axi_s2_ar_len
,	sram_axi_s2_ar_lock
,	sram_axi_s2_ar_prot
,	sram_axi_s2_ar_ready
,	sram_axi_s2_ar_size
,	sram_axi_s2_ar_valid
,	sram_axi_s2_aw_addr
,	sram_axi_s2_aw_burst
,	sram_axi_s2_aw_cache
,	sram_axi_s2_aw_id
,	sram_axi_s2_aw_len
,	sram_axi_s2_aw_lock
,	sram_axi_s2_aw_prot
,	sram_axi_s2_aw_ready
,	sram_axi_s2_aw_size
,	sram_axi_s2_aw_valid
,	sram_axi_s2_b_id
,	sram_axi_s2_b_ready
,	sram_axi_s2_b_resp
,	sram_axi_s2_b_valid
,	sram_axi_s2_r_data
,	sram_axi_s2_r_id
,	sram_axi_s2_r_last
,	sram_axi_s2_r_ready
,	sram_axi_s2_r_resp
,	sram_axi_s2_r_valid
,	sram_axi_s2_w_data
,	sram_axi_s2_w_last
,	sram_axi_s2_w_ready
,	sram_axi_s2_w_strb
,	sram_axi_s2_w_valid
,	sram_axi_s3_ar_addr
,	sram_axi_s3_ar_burst
,	sram_axi_s3_ar_cache
,	sram_axi_s3_ar_id
,	sram_axi_s3_ar_len
,	sram_axi_s3_ar_lock
,	sram_axi_s3_ar_prot
,	sram_axi_s3_ar_ready
,	sram_axi_s3_ar_size
,	sram_axi_s3_ar_valid
,	sram_axi_s3_aw_addr
,	sram_axi_s3_aw_burst
,	sram_axi_s3_aw_cache
,	sram_axi_s3_aw_id
,	sram_axi_s3_aw_len
,	sram_axi_s3_aw_lock
,	sram_axi_s3_aw_prot
,	sram_axi_s3_aw_ready
,	sram_axi_s3_aw_size
,	sram_axi_s3_aw_valid
,	sram_axi_s3_b_id
,	sram_axi_s3_b_ready
,	sram_axi_s3_b_resp
,	sram_axi_s3_b_valid
,	sram_axi_s3_r_data
,	sram_axi_s3_r_id
,	sram_axi_s3_r_last
,	sram_axi_s3_r_ready
,	sram_axi_s3_r_resp
,	sram_axi_s3_r_valid
,	sram_axi_s3_w_data
,	sram_axi_s3_w_last
,	sram_axi_s3_w_ready
,	sram_axi_s3_w_strb
,	sram_axi_s3_w_valid
,	tm
,	usb_axi_m0_ar_addr
,	usb_axi_m0_ar_burst
,	usb_axi_m0_ar_cache
,	usb_axi_m0_ar_id
,	usb_axi_m0_ar_len
,	usb_axi_m0_ar_lock
,	usb_axi_m0_ar_prot
,	usb_axi_m0_ar_ready
,	usb_axi_m0_ar_size
,	usb_axi_m0_ar_valid
,	usb_axi_m0_aw_addr
,	usb_axi_m0_aw_burst
,	usb_axi_m0_aw_cache
,	usb_axi_m0_aw_id
,	usb_axi_m0_aw_len
,	usb_axi_m0_aw_lock
,	usb_axi_m0_aw_prot
,	usb_axi_m0_aw_ready
,	usb_axi_m0_aw_size
,	usb_axi_m0_aw_valid
,	usb_axi_m0_b_id
,	usb_axi_m0_b_ready
,	usb_axi_m0_b_resp
,	usb_axi_m0_b_valid
,	usb_axi_m0_r_data
,	usb_axi_m0_r_id
,	usb_axi_m0_r_last
,	usb_axi_m0_r_ready
,	usb_axi_m0_r_resp
,	usb_axi_m0_r_valid
,	usb_axi_m0_w_data
,	usb_axi_m0_w_last
,	usb_axi_m0_w_ready
,	usb_axi_m0_w_strb
,	usb_axi_m0_w_valid
);
	output [31:0]  ACPU_WDT_PAddr        ;
	output         ACPU_WDT_PEnable      ;
	input  [31:0]  ACPU_WDT_PRData       ;
	input          ACPU_WDT_PReady       ;
	output         ACPU_WDT_PSel         ;
	input          ACPU_WDT_PSlvErr      ;
	output [3:0]   ACPU_WDT_PWBe         ;
	output [31:0]  ACPU_WDT_PWData       ;
	output         ACPU_WDT_PWrite       ;
	output [31:0]  BCPU_WDT_PAddr        ;
	output         BCPU_WDT_PEnable      ;
	input  [31:0]  BCPU_WDT_PRData       ;
	input          BCPU_WDT_PReady       ;
	output         BCPU_WDT_PSel         ;
	input          BCPU_WDT_PSlvErr      ;
	output [3:0]   BCPU_WDT_PWBe         ;
	output [31:0]  BCPU_WDT_PWData       ;
	output         BCPU_WDT_PWrite       ;
	output [31:0]  DMA_apb_s0_paddr      ;
	output         DMA_apb_s0_penable    ;
	input  [31:0]  DMA_apb_s0_prdata     ;
	input          DMA_apb_s0_pready     ;
	output         DMA_apb_s0_psel       ;
	input          DMA_apb_s0_pslverr    ;
	output [3:0]   DMA_apb_s0_pwbe       ;
	output [31:0]  DMA_apb_s0_pwdata     ;
	output         DMA_apb_s0_pwrite     ;
	output [31:0]  FCB_apb_s0_paddr      ;
	output         FCB_apb_s0_penable    ;
	input  [31:0]  FCB_apb_s0_prdata     ;
	input          FCB_apb_s0_pready     ;
	output         FCB_apb_s0_psel       ;
	input          FCB_apb_s0_pslverr    ;
	output [3:0]   FCB_apb_s0_pwbe       ;
	output [31:0]  FCB_apb_s0_pwdata     ;
	output         FCB_apb_s0_pwrite     ;
	output [31:0]  GPIO_apb_s0_paddr     ;
	output         GPIO_apb_s0_penable   ;
	input  [31:0]  GPIO_apb_s0_prdata    ;
	input          GPIO_apb_s0_pready    ;
	output         GPIO_apb_s0_psel      ;
	input          GPIO_apb_s0_pslverr   ;
	output [3:0]   GPIO_apb_s0_pwbe      ;
	output [31:0]  GPIO_apb_s0_pwdata    ;
	output         GPIO_apb_s0_pwrite    ;
	output [31:0]  GPT_apb_s0_paddr      ;
	output         GPT_apb_s0_penable    ;
	input  [31:0]  GPT_apb_s0_prdata     ;
	input          GPT_apb_s0_pready     ;
	output         GPT_apb_s0_psel       ;
	input          GPT_apb_s0_pslverr    ;
	output [3:0]   GPT_apb_s0_pwbe       ;
	output [31:0]  GPT_apb_s0_pwdata     ;
	output         GPT_apb_s0_pwrite     ;
	output [31:0]  I2C_apb_s0_paddr      ;
	output         I2C_apb_s0_penable    ;
	input  [31:0]  I2C_apb_s0_prdata     ;
	input          I2C_apb_s0_pready     ;
	output         I2C_apb_s0_psel       ;
	input          I2C_apb_s0_pslverr    ;
	output [3:0]   I2C_apb_s0_pwbe       ;
	output [31:0]  I2C_apb_s0_pwdata     ;
	output         I2C_apb_s0_pwrite     ;
	output [31:0]  MBOX_apb_s0_paddr     ;
	output         MBOX_apb_s0_penable   ;
	input  [31:0]  MBOX_apb_s0_prdata    ;
	input          MBOX_apb_s0_pready    ;
	output         MBOX_apb_s0_psel      ;
	input          MBOX_apb_s0_pslverr   ;
	output [3:0]   MBOX_apb_s0_pwbe      ;
	output [31:0]  MBOX_apb_s0_pwdata    ;
	output         MBOX_apb_s0_pwrite    ;
	output [31:0]  PUFCC_apb_s0_PAddr    ;
	output         PUFCC_apb_s0_PEnable  ;
	output [2:0]   PUFCC_apb_s0_PProt    ;
	input  [31:0]  PUFCC_apb_s0_PRData   ;
	input          PUFCC_apb_s0_PReady   ;
	output         PUFCC_apb_s0_PSel     ;
	input          PUFCC_apb_s0_PSlvErr  ;
	output [3:0]   PUFCC_apb_s0_PStrb    ;
	output [31:0]  PUFCC_apb_s0_PWData   ;
	output         PUFCC_apb_s0_PWrite   ;
	output [31:0]  SCU_PAddr             ;
	output         SCU_PEnable           ;
	input  [31:0]  SCU_PRData            ;
	input          SCU_PReady            ;
	output         SCU_PSel              ;
	input          SCU_PSlvErr           ;
	output [3:0]   SCU_PWBe              ;
	output [31:0]  SCU_PWData            ;
	output         SCU_PWrite            ;
	output [31:0]  SPI_ahb_s0_haddr      ;
	output [2:0]   SPI_ahb_s0_hburst     ;
	output         SPI_ahb_s0_hmastlock  ;
	output [3:0]   SPI_ahb_s0_hprot      ;
	input  [31:0]  SPI_ahb_s0_hrdata     ;
	input          SPI_ahb_s0_hready     ;
	input          SPI_ahb_s0_hresp      ;
	output         SPI_ahb_s0_hsel       ;
	output [2:0]   SPI_ahb_s0_hsize      ;
	output [1:0]   SPI_ahb_s0_htrans     ;
	output [3:0]   SPI_ahb_s0_hwbe       ;
	output [31:0]  SPI_ahb_s0_hwdata     ;
	output         SPI_ahb_s0_hwrite     ;
	output [31:0]  SPI_mem_ahb_haddr     ;
	output [2:0]   SPI_mem_ahb_hburst    ;
	output         SPI_mem_ahb_hmastlock ;
	output [3:0]   SPI_mem_ahb_hprot     ;
	input  [31:0]  SPI_mem_ahb_hrdata    ;
	input          SPI_mem_ahb_hready    ;
	input          SPI_mem_ahb_hresp     ;
	output         SPI_mem_ahb_hsel      ;
	output [2:0]   SPI_mem_ahb_hsize     ;
	output [1:0]   SPI_mem_ahb_htrans    ;
	output [3:0]   SPI_mem_ahb_hwbe      ;
	output [31:0]  SPI_mem_ahb_hwdata    ;
	output         SPI_mem_ahb_hwrite    ;
	output [31:0]  UART_apb_s0_paddr     ;
	output         UART_apb_s0_penable   ;
	input  [31:0]  UART_apb_s0_prdata    ;
	input          UART_apb_s0_pready    ;
	output         UART_apb_s0_psel      ;
	input          UART_apb_s0_pslverr   ;
	output [3:0]   UART_apb_s0_pwbe      ;
	output [31:0]  UART_apb_s0_pwdata    ;
	output         UART_apb_s0_pwrite    ;
	output [31:0]  UART_apb_s1_paddr     ;
	output         UART_apb_s1_penable   ;
	input  [31:0]  UART_apb_s1_prdata    ;
	input          UART_apb_s1_pready    ;
	output         UART_apb_s1_psel      ;
	input          UART_apb_s1_pslverr   ;
	output [3:0]   UART_apb_s1_pwbe      ;
	output [31:0]  UART_apb_s1_pwdata    ;
	output         UART_apb_s1_pwrite    ;
	output [31:0]  USB_axi_s0_ar_addr    ;
	output [2:0]   USB_axi_s0_ar_prot    ;
	input          USB_axi_s0_ar_ready   ;
	output         USB_axi_s0_ar_valid   ;
	output [31:0]  USB_axi_s0_aw_addr    ;
	output [2:0]   USB_axi_s0_aw_prot    ;
	input          USB_axi_s0_aw_ready   ;
	output         USB_axi_s0_aw_valid   ;
	output         USB_axi_s0_b_ready    ;
	input  [1:0]   USB_axi_s0_b_resp     ;
	input          USB_axi_s0_b_valid    ;
	input  [31:0]  USB_axi_s0_r_data     ;
	output         USB_axi_s0_r_ready    ;
	input  [1:0]   USB_axi_s0_r_resp     ;
	input          USB_axi_s0_r_valid    ;
	output [31:0]  USB_axi_s0_w_data     ;
	input          USB_axi_s0_w_ready    ;
	output [3:0]   USB_axi_s0_w_strb     ;
	output         USB_axi_s0_w_valid    ;
	input  [31:0]  acpu_axi_m0_ar_addr   ;
	input  [1:0]   acpu_axi_m0_ar_burst  ;
	input  [3:0]   acpu_axi_m0_ar_cache  ;
	input  [3:0]   acpu_axi_m0_ar_id     ;
	input  [2:0]   acpu_axi_m0_ar_len    ;
	input          acpu_axi_m0_ar_lock   ;
	input  [2:0]   acpu_axi_m0_ar_prot   ;
	output         acpu_axi_m0_ar_ready  ;
	input  [2:0]   acpu_axi_m0_ar_size   ;
	input          acpu_axi_m0_ar_valid  ;
	input  [31:0]  acpu_axi_m0_aw_addr   ;
	input  [1:0]   acpu_axi_m0_aw_burst  ;
	input  [3:0]   acpu_axi_m0_aw_cache  ;
	input  [3:0]   acpu_axi_m0_aw_id     ;
	input  [2:0]   acpu_axi_m0_aw_len    ;
	input          acpu_axi_m0_aw_lock   ;
	input  [2:0]   acpu_axi_m0_aw_prot   ;
	output         acpu_axi_m0_aw_ready  ;
	input  [2:0]   acpu_axi_m0_aw_size   ;
	input          acpu_axi_m0_aw_valid  ;
	output [3:0]   acpu_axi_m0_b_id      ;
	input          acpu_axi_m0_b_ready   ;
	output [1:0]   acpu_axi_m0_b_resp    ;
	output         acpu_axi_m0_b_valid   ;
	output [63:0]  acpu_axi_m0_r_data    ;
	output [3:0]   acpu_axi_m0_r_id      ;
	output         acpu_axi_m0_r_last    ;
	input          acpu_axi_m0_r_ready   ;
	output [1:0]   acpu_axi_m0_r_resp    ;
	output         acpu_axi_m0_r_valid   ;
	input  [63:0]  acpu_axi_m0_w_data    ;
	input          acpu_axi_m0_w_last    ;
	output         acpu_axi_m0_w_ready   ;
	input  [7:0]   acpu_axi_m0_w_strb    ;
	input          acpu_axi_m0_w_valid   ;
	input  [31:0]  arm_axi_m0_ar_addr    ;
	input  [1:0]   arm_axi_m0_ar_burst   ;
	input  [3:0]   arm_axi_m0_ar_cache   ;
	input  [3:0]   arm_axi_m0_ar_id      ;
	input  [2:0]   arm_axi_m0_ar_len     ;
	input          arm_axi_m0_ar_lock    ;
	input  [2:0]   arm_axi_m0_ar_prot    ;
	output         arm_axi_m0_ar_ready   ;
	input  [2:0]   arm_axi_m0_ar_size    ;
	input          arm_axi_m0_ar_valid   ;
	input  [31:0]  arm_axi_m0_aw_addr    ;
	input  [1:0]   arm_axi_m0_aw_burst   ;
	input  [3:0]   arm_axi_m0_aw_cache   ;
	input  [3:0]   arm_axi_m0_aw_id      ;
	input  [2:0]   arm_axi_m0_aw_len     ;
	input          arm_axi_m0_aw_lock    ;
	input  [2:0]   arm_axi_m0_aw_prot    ;
	output         arm_axi_m0_aw_ready   ;
	input  [2:0]   arm_axi_m0_aw_size    ;
	input          arm_axi_m0_aw_valid   ;
	output [3:0]   arm_axi_m0_b_id       ;
	input          arm_axi_m0_b_ready    ;
	output [1:0]   arm_axi_m0_b_resp     ;
	output         arm_axi_m0_b_valid    ;
	output [63:0]  arm_axi_m0_r_data     ;
	output [3:0]   arm_axi_m0_r_id       ;
	output         arm_axi_m0_r_last     ;
	input          arm_axi_m0_r_ready    ;
	output [1:0]   arm_axi_m0_r_resp     ;
	output         arm_axi_m0_r_valid    ;
	input  [63:0]  arm_axi_m0_w_data     ;
	input          arm_axi_m0_w_last     ;
	output         arm_axi_m0_w_ready    ;
	input  [7:0]   arm_axi_m0_w_strb     ;
	input          arm_axi_m0_w_valid    ;
	input  [31:0]  bcpu_ahb_m0_haddr     ;
	input  [2:0]   bcpu_ahb_m0_hburst    ;
	input          bcpu_ahb_m0_hmastlock ;
	input  [3:0]   bcpu_ahb_m0_hprot     ;
	output [31:0]  bcpu_ahb_m0_hrdata    ;
	output         bcpu_ahb_m0_hready    ;
	output         bcpu_ahb_m0_hresp     ;
	input          bcpu_ahb_m0_hsel      ;
	input  [2:0]   bcpu_ahb_m0_hsize     ;
	input  [1:0]   bcpu_ahb_m0_htrans    ;
	input  [3:0]   bcpu_ahb_m0_hwbe      ;
	input  [31:0]  bcpu_ahb_m0_hwdata    ;
	input          bcpu_ahb_m0_hwrite    ;
	input          clk_133               ;
	input          clk_266               ;
	input          clk_533               ;
	output         cpu_observer_AFReady  ;
	input          cpu_observer_AFValid  ;
	output         cpu_observer_ATBytes  ;
	output [15:0]  cpu_observer_ATData   ;
	output [6:0]   cpu_observer_ATId     ;
	input          cpu_observer_ATReady  ;
	output         cpu_observer_ATValid  ;
	output [31:0]  ddr_axi_s0_ar_addr    ;
	output [1:0]   ddr_axi_s0_ar_burst   ;
	output [3:0]   ddr_axi_s0_ar_cache   ;
	output [3:0]   ddr_axi_s0_ar_id      ;
	output [2:0]   ddr_axi_s0_ar_len     ;
	output         ddr_axi_s0_ar_lock    ;
	output [2:0]   ddr_axi_s0_ar_prot    ;
	input          ddr_axi_s0_ar_ready   ;
	output [2:0]   ddr_axi_s0_ar_size    ;
	output         ddr_axi_s0_ar_valid   ;
	output [31:0]  ddr_axi_s0_aw_addr    ;
	output [1:0]   ddr_axi_s0_aw_burst   ;
	output [3:0]   ddr_axi_s0_aw_cache   ;
	output [3:0]   ddr_axi_s0_aw_id      ;
	output [2:0]   ddr_axi_s0_aw_len     ;
	output         ddr_axi_s0_aw_lock    ;
	output [2:0]   ddr_axi_s0_aw_prot    ;
	input          ddr_axi_s0_aw_ready   ;
	output [2:0]   ddr_axi_s0_aw_size    ;
	output         ddr_axi_s0_aw_valid   ;
	input  [3:0]   ddr_axi_s0_b_id       ;
	output         ddr_axi_s0_b_ready    ;
	input  [1:0]   ddr_axi_s0_b_resp     ;
	input          ddr_axi_s0_b_valid    ;
	input  [127:0] ddr_axi_s0_r_data     ;
	input  [3:0]   ddr_axi_s0_r_id       ;
	input          ddr_axi_s0_r_last     ;
	output         ddr_axi_s0_r_ready    ;
	input  [1:0]   ddr_axi_s0_r_resp     ;
	input          ddr_axi_s0_r_valid    ;
	output [127:0] ddr_axi_s0_w_data     ;
	output         ddr_axi_s0_w_last     ;
	input          ddr_axi_s0_w_ready    ;
	output [15:0]  ddr_axi_s0_w_strb     ;
	output         ddr_axi_s0_w_valid    ;
	output [31:0]  ddr_axi_s1_ar_addr    ;
	output [1:0]   ddr_axi_s1_ar_burst   ;
	output [3:0]   ddr_axi_s1_ar_cache   ;
	output [3:0]   ddr_axi_s1_ar_id      ;
	output [2:0]   ddr_axi_s1_ar_len     ;
	output         ddr_axi_s1_ar_lock    ;
	output [2:0]   ddr_axi_s1_ar_prot    ;
	input          ddr_axi_s1_ar_ready   ;
	output [2:0]   ddr_axi_s1_ar_size    ;
	output         ddr_axi_s1_ar_valid   ;
	output [31:0]  ddr_axi_s1_aw_addr    ;
	output [1:0]   ddr_axi_s1_aw_burst   ;
	output [3:0]   ddr_axi_s1_aw_cache   ;
	output [3:0]   ddr_axi_s1_aw_id      ;
	output [2:0]   ddr_axi_s1_aw_len     ;
	output         ddr_axi_s1_aw_lock    ;
	output [2:0]   ddr_axi_s1_aw_prot    ;
	input          ddr_axi_s1_aw_ready   ;
	output [2:0]   ddr_axi_s1_aw_size    ;
	output         ddr_axi_s1_aw_valid   ;
	input  [3:0]   ddr_axi_s1_b_id       ;
	output         ddr_axi_s1_b_ready    ;
	input  [1:0]   ddr_axi_s1_b_resp     ;
	input          ddr_axi_s1_b_valid    ;
	input  [127:0] ddr_axi_s1_r_data     ;
	input  [3:0]   ddr_axi_s1_r_id       ;
	input          ddr_axi_s1_r_last     ;
	output         ddr_axi_s1_r_ready    ;
	input  [1:0]   ddr_axi_s1_r_resp     ;
	input          ddr_axi_s1_r_valid    ;
	output [127:0] ddr_axi_s1_w_data     ;
	output         ddr_axi_s1_w_last     ;
	input          ddr_axi_s1_w_ready    ;
	output [15:0]  ddr_axi_s1_w_strb     ;
	output         ddr_axi_s1_w_valid    ;
	output [31:0]  ddr_axi_s2_ar_addr    ;
	output [1:0]   ddr_axi_s2_ar_burst   ;
	output [3:0]   ddr_axi_s2_ar_cache   ;
	output [3:0]   ddr_axi_s2_ar_id      ;
	output [2:0]   ddr_axi_s2_ar_len     ;
	output         ddr_axi_s2_ar_lock    ;
	output [2:0]   ddr_axi_s2_ar_prot    ;
	input          ddr_axi_s2_ar_ready   ;
	output [2:0]   ddr_axi_s2_ar_size    ;
	output         ddr_axi_s2_ar_valid   ;
	output [31:0]  ddr_axi_s2_aw_addr    ;
	output [1:0]   ddr_axi_s2_aw_burst   ;
	output [3:0]   ddr_axi_s2_aw_cache   ;
	output [3:0]   ddr_axi_s2_aw_id      ;
	output [2:0]   ddr_axi_s2_aw_len     ;
	output         ddr_axi_s2_aw_lock    ;
	output [2:0]   ddr_axi_s2_aw_prot    ;
	input          ddr_axi_s2_aw_ready   ;
	output [2:0]   ddr_axi_s2_aw_size    ;
	output         ddr_axi_s2_aw_valid   ;
	input  [3:0]   ddr_axi_s2_b_id       ;
	output         ddr_axi_s2_b_ready    ;
	input  [1:0]   ddr_axi_s2_b_resp     ;
	input          ddr_axi_s2_b_valid    ;
	input  [127:0] ddr_axi_s2_r_data     ;
	input  [3:0]   ddr_axi_s2_r_id       ;
	input          ddr_axi_s2_r_last     ;
	output         ddr_axi_s2_r_ready    ;
	input  [1:0]   ddr_axi_s2_r_resp     ;
	input          ddr_axi_s2_r_valid    ;
	output [127:0] ddr_axi_s2_w_data     ;
	output         ddr_axi_s2_w_last     ;
	input          ddr_axi_s2_w_ready    ;
	output [15:0]  ddr_axi_s2_w_strb     ;
	output         ddr_axi_s2_w_valid    ;
	output [31:0]  ddr_axi_s3_ar_addr    ;
	output [1:0]   ddr_axi_s3_ar_burst   ;
	output [3:0]   ddr_axi_s3_ar_cache   ;
	output [3:0]   ddr_axi_s3_ar_id      ;
	output [2:0]   ddr_axi_s3_ar_len     ;
	output         ddr_axi_s3_ar_lock    ;
	output [2:0]   ddr_axi_s3_ar_prot    ;
	input          ddr_axi_s3_ar_ready   ;
	output [2:0]   ddr_axi_s3_ar_size    ;
	output         ddr_axi_s3_ar_valid   ;
	output [31:0]  ddr_axi_s3_aw_addr    ;
	output [1:0]   ddr_axi_s3_aw_burst   ;
	output [3:0]   ddr_axi_s3_aw_cache   ;
	output [3:0]   ddr_axi_s3_aw_id      ;
	output [2:0]   ddr_axi_s3_aw_len     ;
	output         ddr_axi_s3_aw_lock    ;
	output [2:0]   ddr_axi_s3_aw_prot    ;
	input          ddr_axi_s3_aw_ready   ;
	output [2:0]   ddr_axi_s3_aw_size    ;
	output         ddr_axi_s3_aw_valid   ;
	input  [3:0]   ddr_axi_s3_b_id       ;
	output         ddr_axi_s3_b_ready    ;
	input  [1:0]   ddr_axi_s3_b_resp     ;
	input          ddr_axi_s3_b_valid    ;
	input  [127:0] ddr_axi_s3_r_data     ;
	input  [3:0]   ddr_axi_s3_r_id       ;
	input          ddr_axi_s3_r_last     ;
	output         ddr_axi_s3_r_ready    ;
	input  [1:0]   ddr_axi_s3_r_resp     ;
	input          ddr_axi_s3_r_valid    ;
	output [127:0] ddr_axi_s3_w_data     ;
	output         ddr_axi_s3_w_last     ;
	input          ddr_axi_s3_w_ready    ;
	output [15:0]  ddr_axi_s3_w_strb     ;
	output         ddr_axi_s3_w_valid    ;
	output [31:0]  ddr_axil_s0_ar_addr   ;
	output [2:0]   ddr_axil_s0_ar_prot   ;
	input          ddr_axil_s0_ar_ready  ;
	output         ddr_axil_s0_ar_valid  ;
	output [31:0]  ddr_axil_s0_aw_addr   ;
	output [2:0]   ddr_axil_s0_aw_prot   ;
	input          ddr_axil_s0_aw_ready  ;
	output         ddr_axil_s0_aw_valid  ;
	output         ddr_axil_s0_b_ready   ;
	input  [1:0]   ddr_axil_s0_b_resp    ;
	input          ddr_axil_s0_b_valid   ;
	input  [31:0]  ddr_axil_s0_r_data    ;
	output         ddr_axil_s0_r_ready   ;
	input  [1:0]   ddr_axil_s0_r_resp    ;
	input          ddr_axil_s0_r_valid   ;
	output [31:0]  ddr_axil_s0_w_data    ;
	input          ddr_axil_s0_w_ready   ;
	output [3:0]   ddr_axil_s0_w_strb    ;
	output         ddr_axil_s0_w_valid   ;
	input  [31:0]  dma_axi_m0_ar_addr    ;
	input  [1:0]   dma_axi_m0_ar_burst   ;
	input  [3:0]   dma_axi_m0_ar_cache   ;
	input  [3:0]   dma_axi_m0_ar_id      ;
	input  [3:0]   dma_axi_m0_ar_len     ;
	input          dma_axi_m0_ar_lock    ;
	input  [2:0]   dma_axi_m0_ar_prot    ;
	output         dma_axi_m0_ar_ready   ;
	input  [2:0]   dma_axi_m0_ar_size    ;
	input          dma_axi_m0_ar_valid   ;
	input  [31:0]  dma_axi_m0_aw_addr    ;
	input  [1:0]   dma_axi_m0_aw_burst   ;
	input  [3:0]   dma_axi_m0_aw_cache   ;
	input  [3:0]   dma_axi_m0_aw_id      ;
	input  [3:0]   dma_axi_m0_aw_len     ;
	input          dma_axi_m0_aw_lock    ;
	input  [2:0]   dma_axi_m0_aw_prot    ;
	output         dma_axi_m0_aw_ready   ;
	input  [2:0]   dma_axi_m0_aw_size    ;
	input          dma_axi_m0_aw_valid   ;
	output [3:0]   dma_axi_m0_b_id       ;
	input          dma_axi_m0_b_ready    ;
	output [1:0]   dma_axi_m0_b_resp     ;
	output         dma_axi_m0_b_valid    ;
	output [31:0]  dma_axi_m0_r_data     ;
	output [3:0]   dma_axi_m0_r_id       ;
	output         dma_axi_m0_r_last     ;
	input          dma_axi_m0_r_ready    ;
	output [1:0]   dma_axi_m0_r_resp     ;
	output         dma_axi_m0_r_valid    ;
	input  [31:0]  dma_axi_m0_w_data     ;
	input          dma_axi_m0_w_last     ;
	output         dma_axi_m0_w_ready    ;
	input  [3:0]   dma_axi_m0_w_strb     ;
	input          dma_axi_m0_w_valid    ;
	input  [31:0]  dma_axi_m1_ar_addr    ;
	input  [1:0]   dma_axi_m1_ar_burst   ;
	input  [3:0]   dma_axi_m1_ar_cache   ;
	input  [3:0]   dma_axi_m1_ar_id      ;
	input  [3:0]   dma_axi_m1_ar_len     ;
	input          dma_axi_m1_ar_lock    ;
	input  [2:0]   dma_axi_m1_ar_prot    ;
	output         dma_axi_m1_ar_ready   ;
	input  [2:0]   dma_axi_m1_ar_size    ;
	input          dma_axi_m1_ar_valid   ;
	input  [31:0]  dma_axi_m1_aw_addr    ;
	input  [1:0]   dma_axi_m1_aw_burst   ;
	input  [3:0]   dma_axi_m1_aw_cache   ;
	input  [3:0]   dma_axi_m1_aw_id      ;
	input  [3:0]   dma_axi_m1_aw_len     ;
	input          dma_axi_m1_aw_lock    ;
	input  [2:0]   dma_axi_m1_aw_prot    ;
	output         dma_axi_m1_aw_ready   ;
	input  [2:0]   dma_axi_m1_aw_size    ;
	input          dma_axi_m1_aw_valid   ;
	output [3:0]   dma_axi_m1_b_id       ;
	input          dma_axi_m1_b_ready    ;
	output [1:0]   dma_axi_m1_b_resp     ;
	output         dma_axi_m1_b_valid    ;
	output [31:0]  dma_axi_m1_r_data     ;
	output [3:0]   dma_axi_m1_r_id       ;
	output         dma_axi_m1_r_last     ;
	input          dma_axi_m1_r_ready    ;
	output [1:0]   dma_axi_m1_r_resp     ;
	output         dma_axi_m1_r_valid    ;
	input  [31:0]  dma_axi_m1_w_data     ;
	input          dma_axi_m1_w_last     ;
	output         dma_axi_m1_w_ready    ;
	input  [3:0]   dma_axi_m1_w_strb     ;
	input          dma_axi_m1_w_valid    ;
	output [31:0]  fpga_ahb_s0_haddr     ;
	output [2:0]   fpga_ahb_s0_hburst    ;
	output         fpga_ahb_s0_hmastlock ;
	output [3:0]   fpga_ahb_s0_hprot     ;
	input  [31:0]  fpga_ahb_s0_hrdata    ;
	input          fpga_ahb_s0_hready    ;
	input          fpga_ahb_s0_hresp     ;
	output         fpga_ahb_s0_hsel      ;
	output [2:0]   fpga_ahb_s0_hsize     ;
	output [1:0]   fpga_ahb_s0_htrans    ;
	output [3:0]   fpga_ahb_s0_hwbe      ;
	output [31:0]  fpga_ahb_s0_hwdata    ;
	output         fpga_ahb_s0_hwrite    ;
	input  [31:0]  fpga_axi_m0_ar_addr   ;
	input  [1:0]   fpga_axi_m0_ar_burst  ;
	input  [3:0]   fpga_axi_m0_ar_cache  ;
	input  [3:0]   fpga_axi_m0_ar_id     ;
	input  [2:0]   fpga_axi_m0_ar_len    ;
	input          fpga_axi_m0_ar_lock   ;
	input  [2:0]   fpga_axi_m0_ar_prot   ;
	output         fpga_axi_m0_ar_ready  ;
	input  [2:0]   fpga_axi_m0_ar_size   ;
	input          fpga_axi_m0_ar_valid  ;
	input  [31:0]  fpga_axi_m0_aw_addr   ;
	input  [1:0]   fpga_axi_m0_aw_burst  ;
	input  [3:0]   fpga_axi_m0_aw_cache  ;
	input  [3:0]   fpga_axi_m0_aw_id     ;
	input  [2:0]   fpga_axi_m0_aw_len    ;
	input          fpga_axi_m0_aw_lock   ;
	input  [2:0]   fpga_axi_m0_aw_prot   ;
	output         fpga_axi_m0_aw_ready  ;
	input  [2:0]   fpga_axi_m0_aw_size   ;
	input          fpga_axi_m0_aw_valid  ;
	output [3:0]   fpga_axi_m0_b_id      ;
	input          fpga_axi_m0_b_ready   ;
	output [1:0]   fpga_axi_m0_b_resp    ;
	output         fpga_axi_m0_b_valid   ;
	output [63:0]  fpga_axi_m0_r_data    ;
	output [3:0]   fpga_axi_m0_r_id      ;
	output         fpga_axi_m0_r_last    ;
	input          fpga_axi_m0_r_ready   ;
	output [1:0]   fpga_axi_m0_r_resp    ;
	output         fpga_axi_m0_r_valid   ;
	input  [63:0]  fpga_axi_m0_w_data    ;
	input          fpga_axi_m0_w_last    ;
	output         fpga_axi_m0_w_ready   ;
	input  [7:0]   fpga_axi_m0_w_strb    ;
	input          fpga_axi_m0_w_valid   ;
	input  [31:0]  fpga_axi_m1_ar_addr   ;
	input  [1:0]   fpga_axi_m1_ar_burst  ;
	input  [3:0]   fpga_axi_m1_ar_cache  ;
	input  [3:0]   fpga_axi_m1_ar_id     ;
	input  [3:0]   fpga_axi_m1_ar_len    ;
	input          fpga_axi_m1_ar_lock   ;
	input  [2:0]   fpga_axi_m1_ar_prot   ;
	output         fpga_axi_m1_ar_ready  ;
	input  [2:0]   fpga_axi_m1_ar_size   ;
	input          fpga_axi_m1_ar_valid  ;
	input  [31:0]  fpga_axi_m1_aw_addr   ;
	input  [1:0]   fpga_axi_m1_aw_burst  ;
	input  [3:0]   fpga_axi_m1_aw_cache  ;
	input  [3:0]   fpga_axi_m1_aw_id     ;
	input  [3:0]   fpga_axi_m1_aw_len    ;
	input          fpga_axi_m1_aw_lock   ;
	input  [2:0]   fpga_axi_m1_aw_prot   ;
	output         fpga_axi_m1_aw_ready  ;
	input  [2:0]   fpga_axi_m1_aw_size   ;
	input          fpga_axi_m1_aw_valid  ;
	output [3:0]   fpga_axi_m1_b_id      ;
	input          fpga_axi_m1_b_ready   ;
	output [1:0]   fpga_axi_m1_b_resp    ;
	output         fpga_axi_m1_b_valid   ;
	output [31:0]  fpga_axi_m1_r_data    ;
	output [3:0]   fpga_axi_m1_r_id      ;
	output         fpga_axi_m1_r_last    ;
	input          fpga_axi_m1_r_ready   ;
	output [1:0]   fpga_axi_m1_r_resp    ;
	output         fpga_axi_m1_r_valid   ;
	input  [31:0]  fpga_axi_m1_w_data    ;
	input          fpga_axi_m1_w_last    ;
	output         fpga_axi_m1_w_ready   ;
	input  [3:0]   fpga_axi_m1_w_strb    ;
	input          fpga_axi_m1_w_valid   ;
	input          fpga_clk_m0           ;
	input          fpga_clk_m1           ;
	input          fpga_clk_s0           ;
	input          fpga_rstm0_n          ;
	input          fpga_rstm1_n          ;
	input          fpga_rsts0_n          ;
	output [31:0]  gbe_apb_s0_paddr      ;
	output         gbe_apb_s0_penable    ;
	input  [31:0]  gbe_apb_s0_prdata     ;
	input          gbe_apb_s0_pready     ;
	output         gbe_apb_s0_psel       ;
	input          gbe_apb_s0_pslverr    ;
	output [3:0]   gbe_apb_s0_pwbe       ;
	output [31:0]  gbe_apb_s0_pwdata     ;
	output         gbe_apb_s0_pwrite     ;
	input  [31:0]  gbe_axi_m0_ar_addr    ;
	input  [1:0]   gbe_axi_m0_ar_burst   ;
	input  [3:0]   gbe_axi_m0_ar_cache   ;
	input  [3:0]   gbe_axi_m0_ar_id      ;
	input  [3:0]   gbe_axi_m0_ar_len     ;
	input          gbe_axi_m0_ar_lock    ;
	input  [2:0]   gbe_axi_m0_ar_prot    ;
	output         gbe_axi_m0_ar_ready   ;
	input  [2:0]   gbe_axi_m0_ar_size    ;
	input          gbe_axi_m0_ar_valid   ;
	input  [31:0]  gbe_axi_m0_aw_addr    ;
	input  [1:0]   gbe_axi_m0_aw_burst   ;
	input  [3:0]   gbe_axi_m0_aw_cache   ;
	input  [3:0]   gbe_axi_m0_aw_id      ;
	input  [3:0]   gbe_axi_m0_aw_len     ;
	input          gbe_axi_m0_aw_lock    ;
	input  [2:0]   gbe_axi_m0_aw_prot    ;
	output         gbe_axi_m0_aw_ready   ;
	input  [2:0]   gbe_axi_m0_aw_size    ;
	input          gbe_axi_m0_aw_valid   ;
	output [3:0]   gbe_axi_m0_b_id       ;
	input          gbe_axi_m0_b_ready    ;
	output [1:0]   gbe_axi_m0_b_resp     ;
	output         gbe_axi_m0_b_valid    ;
	output [31:0]  gbe_axi_m0_r_data     ;
	output [3:0]   gbe_axi_m0_r_id       ;
	output         gbe_axi_m0_r_last     ;
	input          gbe_axi_m0_r_ready    ;
	output [1:0]   gbe_axi_m0_r_resp     ;
	output         gbe_axi_m0_r_valid    ;
	input  [31:0]  gbe_axi_m0_w_data     ;
	input          gbe_axi_m0_w_last     ;
	output         gbe_axi_m0_w_ready    ;
	input  [3:0]   gbe_axi_m0_w_strb     ;
	input          gbe_axi_m0_w_valid    ;
	input  [31:0]  pufcc_axi_m0_ar_addr  ;
	input  [1:0]   pufcc_axi_m0_ar_burst ;
	input  [3:0]   pufcc_axi_m0_ar_cache ;
	input  [3:0]   pufcc_axi_m0_ar_id    ;
	input  [3:0]   pufcc_axi_m0_ar_len   ;
	input          pufcc_axi_m0_ar_lock  ;
	input  [2:0]   pufcc_axi_m0_ar_prot  ;
	output         pufcc_axi_m0_ar_ready ;
	input  [2:0]   pufcc_axi_m0_ar_size  ;
	input          pufcc_axi_m0_ar_valid ;
	input  [31:0]  pufcc_axi_m0_aw_addr  ;
	input  [1:0]   pufcc_axi_m0_aw_burst ;
	input  [3:0]   pufcc_axi_m0_aw_cache ;
	input  [3:0]   pufcc_axi_m0_aw_id    ;
	input  [3:0]   pufcc_axi_m0_aw_len   ;
	input          pufcc_axi_m0_aw_lock  ;
	input  [2:0]   pufcc_axi_m0_aw_prot  ;
	output         pufcc_axi_m0_aw_ready ;
	input  [2:0]   pufcc_axi_m0_aw_size  ;
	input          pufcc_axi_m0_aw_valid ;
	output [3:0]   pufcc_axi_m0_b_id     ;
	input          pufcc_axi_m0_b_ready  ;
	output [1:0]   pufcc_axi_m0_b_resp   ;
	output         pufcc_axi_m0_b_valid  ;
	output [31:0]  pufcc_axi_m0_r_data   ;
	output [3:0]   pufcc_axi_m0_r_id     ;
	output         pufcc_axi_m0_r_last   ;
	input          pufcc_axi_m0_r_ready  ;
	output [1:0]   pufcc_axi_m0_r_resp   ;
	output         pufcc_axi_m0_r_valid  ;
	input  [31:0]  pufcc_axi_m0_w_data   ;
	input          pufcc_axi_m0_w_last   ;
	output         pufcc_axi_m0_w_ready  ;
	input  [3:0]   pufcc_axi_m0_w_strb   ;
	input          pufcc_axi_m0_w_valid  ;
	input          rst_133_n             ;
	input          rst_266_n             ;
	input          rst_533_n             ;
	output [31:0]  sram_axi_s0_ar_addr   ;
	output [1:0]   sram_axi_s0_ar_burst  ;
	output [3:0]   sram_axi_s0_ar_cache  ;
	output [3:0]   sram_axi_s0_ar_id     ;
	output [3:0]   sram_axi_s0_ar_len    ;
	output         sram_axi_s0_ar_lock   ;
	output [2:0]   sram_axi_s0_ar_prot   ;
	input          sram_axi_s0_ar_ready  ;
	output [2:0]   sram_axi_s0_ar_size   ;
	output         sram_axi_s0_ar_valid  ;
	output [31:0]  sram_axi_s0_aw_addr   ;
	output [1:0]   sram_axi_s0_aw_burst  ;
	output [3:0]   sram_axi_s0_aw_cache  ;
	output [3:0]   sram_axi_s0_aw_id     ;
	output [3:0]   sram_axi_s0_aw_len    ;
	output         sram_axi_s0_aw_lock   ;
	output [2:0]   sram_axi_s0_aw_prot   ;
	input          sram_axi_s0_aw_ready  ;
	output [2:0]   sram_axi_s0_aw_size   ;
	output         sram_axi_s0_aw_valid  ;
	input  [3:0]   sram_axi_s0_b_id      ;
	output         sram_axi_s0_b_ready   ;
	input  [1:0]   sram_axi_s0_b_resp    ;
	input          sram_axi_s0_b_valid   ;
	input  [31:0]  sram_axi_s0_r_data    ;
	input  [3:0]   sram_axi_s0_r_id      ;
	input          sram_axi_s0_r_last    ;
	output         sram_axi_s0_r_ready   ;
	input  [1:0]   sram_axi_s0_r_resp    ;
	input          sram_axi_s0_r_valid   ;
	output [31:0]  sram_axi_s0_w_data    ;
	output         sram_axi_s0_w_last    ;
	input          sram_axi_s0_w_ready   ;
	output [3:0]   sram_axi_s0_w_strb    ;
	output         sram_axi_s0_w_valid   ;
	output [31:0]  sram_axi_s1_ar_addr   ;
	output [1:0]   sram_axi_s1_ar_burst  ;
	output [3:0]   sram_axi_s1_ar_cache  ;
	output [3:0]   sram_axi_s1_ar_id     ;
	output [3:0]   sram_axi_s1_ar_len    ;
	output         sram_axi_s1_ar_lock   ;
	output [2:0]   sram_axi_s1_ar_prot   ;
	input          sram_axi_s1_ar_ready  ;
	output [2:0]   sram_axi_s1_ar_size   ;
	output         sram_axi_s1_ar_valid  ;
	output [31:0]  sram_axi_s1_aw_addr   ;
	output [1:0]   sram_axi_s1_aw_burst  ;
	output [3:0]   sram_axi_s1_aw_cache  ;
	output [3:0]   sram_axi_s1_aw_id     ;
	output [3:0]   sram_axi_s1_aw_len    ;
	output         sram_axi_s1_aw_lock   ;
	output [2:0]   sram_axi_s1_aw_prot   ;
	input          sram_axi_s1_aw_ready  ;
	output [2:0]   sram_axi_s1_aw_size   ;
	output         sram_axi_s1_aw_valid  ;
	input  [3:0]   sram_axi_s1_b_id      ;
	output         sram_axi_s1_b_ready   ;
	input  [1:0]   sram_axi_s1_b_resp    ;
	input          sram_axi_s1_b_valid   ;
	input  [31:0]  sram_axi_s1_r_data    ;
	input  [3:0]   sram_axi_s1_r_id      ;
	input          sram_axi_s1_r_last    ;
	output         sram_axi_s1_r_ready   ;
	input  [1:0]   sram_axi_s1_r_resp    ;
	input          sram_axi_s1_r_valid   ;
	output [31:0]  sram_axi_s1_w_data    ;
	output         sram_axi_s1_w_last    ;
	input          sram_axi_s1_w_ready   ;
	output [3:0]   sram_axi_s1_w_strb    ;
	output         sram_axi_s1_w_valid   ;
	output [31:0]  sram_axi_s2_ar_addr   ;
	output [1:0]   sram_axi_s2_ar_burst  ;
	output [3:0]   sram_axi_s2_ar_cache  ;
	output [3:0]   sram_axi_s2_ar_id     ;
	output [3:0]   sram_axi_s2_ar_len    ;
	output         sram_axi_s2_ar_lock   ;
	output [2:0]   sram_axi_s2_ar_prot   ;
	input          sram_axi_s2_ar_ready  ;
	output [2:0]   sram_axi_s2_ar_size   ;
	output         sram_axi_s2_ar_valid  ;
	output [31:0]  sram_axi_s2_aw_addr   ;
	output [1:0]   sram_axi_s2_aw_burst  ;
	output [3:0]   sram_axi_s2_aw_cache  ;
	output [3:0]   sram_axi_s2_aw_id     ;
	output [3:0]   sram_axi_s2_aw_len    ;
	output         sram_axi_s2_aw_lock   ;
	output [2:0]   sram_axi_s2_aw_prot   ;
	input          sram_axi_s2_aw_ready  ;
	output [2:0]   sram_axi_s2_aw_size   ;
	output         sram_axi_s2_aw_valid  ;
	input  [3:0]   sram_axi_s2_b_id      ;
	output         sram_axi_s2_b_ready   ;
	input  [1:0]   sram_axi_s2_b_resp    ;
	input          sram_axi_s2_b_valid   ;
	input  [31:0]  sram_axi_s2_r_data    ;
	input  [3:0]   sram_axi_s2_r_id      ;
	input          sram_axi_s2_r_last    ;
	output         sram_axi_s2_r_ready   ;
	input  [1:0]   sram_axi_s2_r_resp    ;
	input          sram_axi_s2_r_valid   ;
	output [31:0]  sram_axi_s2_w_data    ;
	output         sram_axi_s2_w_last    ;
	input          sram_axi_s2_w_ready   ;
	output [3:0]   sram_axi_s2_w_strb    ;
	output         sram_axi_s2_w_valid   ;
	output [31:0]  sram_axi_s3_ar_addr   ;
	output [1:0]   sram_axi_s3_ar_burst  ;
	output [3:0]   sram_axi_s3_ar_cache  ;
	output [3:0]   sram_axi_s3_ar_id     ;
	output [3:0]   sram_axi_s3_ar_len    ;
	output         sram_axi_s3_ar_lock   ;
	output [2:0]   sram_axi_s3_ar_prot   ;
	input          sram_axi_s3_ar_ready  ;
	output [2:0]   sram_axi_s3_ar_size   ;
	output         sram_axi_s3_ar_valid  ;
	output [31:0]  sram_axi_s3_aw_addr   ;
	output [1:0]   sram_axi_s3_aw_burst  ;
	output [3:0]   sram_axi_s3_aw_cache  ;
	output [3:0]   sram_axi_s3_aw_id     ;
	output [3:0]   sram_axi_s3_aw_len    ;
	output         sram_axi_s3_aw_lock   ;
	output [2:0]   sram_axi_s3_aw_prot   ;
	input          sram_axi_s3_aw_ready  ;
	output [2:0]   sram_axi_s3_aw_size   ;
	output         sram_axi_s3_aw_valid  ;
	input  [3:0]   sram_axi_s3_b_id      ;
	output         sram_axi_s3_b_ready   ;
	input  [1:0]   sram_axi_s3_b_resp    ;
	input          sram_axi_s3_b_valid   ;
	input  [31:0]  sram_axi_s3_r_data    ;
	input  [3:0]   sram_axi_s3_r_id      ;
	input          sram_axi_s3_r_last    ;
	output         sram_axi_s3_r_ready   ;
	input  [1:0]   sram_axi_s3_r_resp    ;
	input          sram_axi_s3_r_valid   ;
	output [31:0]  sram_axi_s3_w_data    ;
	output         sram_axi_s3_w_last    ;
	input          sram_axi_s3_w_ready   ;
	output [3:0]   sram_axi_s3_w_strb    ;
	output         sram_axi_s3_w_valid   ;
	input          tm                    ;
	input  [31:0]  usb_axi_m0_ar_addr    ;
	input  [1:0]   usb_axi_m0_ar_burst   ;
	input  [3:0]   usb_axi_m0_ar_cache   ;
	input  [3:0]   usb_axi_m0_ar_id      ;
	input  [3:0]   usb_axi_m0_ar_len     ;
	input          usb_axi_m0_ar_lock    ;
	input  [2:0]   usb_axi_m0_ar_prot    ;
	output         usb_axi_m0_ar_ready   ;
	input  [2:0]   usb_axi_m0_ar_size    ;
	input          usb_axi_m0_ar_valid   ;
	input  [31:0]  usb_axi_m0_aw_addr    ;
	input  [1:0]   usb_axi_m0_aw_burst   ;
	input  [3:0]   usb_axi_m0_aw_cache   ;
	input  [3:0]   usb_axi_m0_aw_id      ;
	input  [3:0]   usb_axi_m0_aw_len     ;
	input          usb_axi_m0_aw_lock    ;
	input  [2:0]   usb_axi_m0_aw_prot    ;
	output         usb_axi_m0_aw_ready   ;
	input  [2:0]   usb_axi_m0_aw_size    ;
	input          usb_axi_m0_aw_valid   ;
	output [3:0]   usb_axi_m0_b_id       ;
	input          usb_axi_m0_b_ready    ;
	output [1:0]   usb_axi_m0_b_resp     ;
	output         usb_axi_m0_b_valid    ;
	output [31:0]  usb_axi_m0_r_data     ;
	output [3:0]   usb_axi_m0_r_id       ;
	output         usb_axi_m0_r_last     ;
	input          usb_axi_m0_r_ready    ;
	output [1:0]   usb_axi_m0_r_resp     ;
	output         usb_axi_m0_r_valid    ;
	input  [31:0]  usb_axi_m0_w_data     ;
	input          usb_axi_m0_w_last     ;
	output         usb_axi_m0_w_ready    ;
	input  [3:0]   usb_axi_m0_w_strb     ;
	input          usb_axi_m0_w_valid    ;
	wire         u_990_Clk          ;
	wire         u_990_Clk_ClkS     ;
	wire         u_990_Clk_En       ;
	wire         u_990_Clk_EnS      ;
	wire         u_990_Clk_RetRstN  ;
	wire         u_990_Clk_RstN     ;
	wire         u_990_Clk_Tm       ;
	wire         u_991a_Clk         ;
	wire         u_991a_Clk_ClkS    ;
	wire         u_991a_Clk_En      ;
	wire         u_991a_Clk_EnS     ;
	wire         u_991a_Clk_RetRstN ;
	wire         u_991a_Clk_RstN    ;
	wire         u_991a_Clk_Tm      ;
	wire         u_b0c_Clk          ;
	wire         u_b0c_Clk_ClkS     ;
	wire         u_b0c_Clk_En       ;
	wire         u_b0c_Clk_EnS      ;
	wire         u_b0c_Clk_RetRstN  ;
	wire         u_b0c_Clk_RstN     ;
	wire         u_b0c_Clk_Tm       ;
	wire         u_d9df_Clk         ;
	wire         u_d9df_Clk_ClkS    ;
	wire         u_d9df_Clk_En      ;
	wire         u_d9df_Clk_EnS     ;
	wire         u_d9df_Clk_RetRstN ;
	wire         u_d9df_Clk_RstN    ;
	wire         u_d9df_Clk_Tm      ;
	wire         u_e593_Clk         ;
	wire         u_e593_Clk_ClkS    ;
	wire         u_e593_Clk_En      ;
	wire         u_e593_Clk_EnS     ;
	wire         u_e593_Clk_RetRstN ;
	wire         u_e593_Clk_RstN    ;
	wire         u_e593_Clk_Tm      ;
	wire         u_e741_Clk         ;
	wire         u_e741_Clk_ClkS    ;
	wire         u_e741_Clk_En      ;
	wire         u_e741_Clk_EnS     ;
	wire         u_e741_Clk_RetRstN ;
	wire         u_e741_Clk_RstN    ;
	wire         u_e741_Clk_Tm      ;
	anvu_apb_if  Int_ACPU_WDT()     ;
	anvu_apb_if  Int_BCPU_WDT()     ;
	anvu_apb_if  Int_DMA_apb_s0()   ;
	anvu_apb_if  Int_FCB_apb_s0()   ;
	anvu_apb_if  Int_GPIO_apb_s0()  ;
	anvu_apb_if  Int_GPT_apb_s0()   ;
	anvu_apb_if  Int_I2C_apb_s0()   ;
	anvu_apb_if  Int_MBOX_apb_s0()  ;
	anvu_apb_if  Int_PUFCC_apb_s0() ;
	anvu_apb_if  Int_SCU()          ;
	anvu_ahb_if  Int_SPI_ahb_s0()   ;
	anvu_ahb_if  Int_SPI_mem_ahb()  ;
	anvu_apb_if  Int_UART_apb_s0()  ;
	anvu_apb_if  Int_UART_apb_s1()  ;
	anvu_axi_if  Int_USB_axi_s0()   ;
	anvu_axi_if  Int_acpu_axi_m0()  ;
	anvu_axi_if  Int_arm_axi_m0()   ;
	anvu_ahb_if  Int_bcpu_ahb_m0()  ;
	anvu_axi_if  Int_ddr_axi_s0()   ;
	anvu_axi_if  Int_ddr_axi_s1()   ;
	anvu_axi_if  Int_ddr_axi_s2()   ;
	anvu_axi_if  Int_ddr_axi_s3()   ;
	anvu_axi_if  Int_ddr_axil_s0()  ;
	anvu_axi_if  Int_dma_axi_m0()   ;
	anvu_axi_if  Int_dma_axi_m1()   ;
	anvu_ahb_if  Int_fpga_ahb_s0()  ;
	anvu_axi_if  Int_fpga_axi_m0()  ;
	anvu_axi_if  Int_fpga_axi_m1()  ;
	anvu_apb_if  Int_gbe_apb_s0()   ;
	anvu_axi_if  Int_gbe_axi_m0()   ;
	anvu_axi_if  Int_pufcc_axi_m0() ;
	anvu_axi_if  Int_sram_axi_s0()  ;
	anvu_axi_if  Int_sram_axi_s1()  ;
	anvu_axi_if  Int_sram_axi_s2()  ;
	anvu_axi_if  Int_sram_axi_s3()  ;
	anvu_axi_if  Int_usb_axi_m0()   ;
	rsnoc xUser_Tested_NoCx(
		.ACPU_WDT_PAddr( ACPU_WDT_PAddr )
	,	.ACPU_WDT_PEnable( ACPU_WDT_PEnable )
	,	.ACPU_WDT_PRData( ACPU_WDT_PRData )
	,	.ACPU_WDT_PReady( ACPU_WDT_PReady )
	,	.ACPU_WDT_PSel( ACPU_WDT_PSel )
	,	.ACPU_WDT_PSlvErr( ACPU_WDT_PSlvErr )
	,	.ACPU_WDT_PWBe( ACPU_WDT_PWBe )
	,	.ACPU_WDT_PWData( ACPU_WDT_PWData )
	,	.ACPU_WDT_PWrite( ACPU_WDT_PWrite )
	,	.BCPU_WDT_PAddr( BCPU_WDT_PAddr )
	,	.BCPU_WDT_PEnable( BCPU_WDT_PEnable )
	,	.BCPU_WDT_PRData( BCPU_WDT_PRData )
	,	.BCPU_WDT_PReady( BCPU_WDT_PReady )
	,	.BCPU_WDT_PSel( BCPU_WDT_PSel )
	,	.BCPU_WDT_PSlvErr( BCPU_WDT_PSlvErr )
	,	.BCPU_WDT_PWBe( BCPU_WDT_PWBe )
	,	.BCPU_WDT_PWData( BCPU_WDT_PWData )
	,	.BCPU_WDT_PWrite( BCPU_WDT_PWrite )
	,	.DMA_apb_s0_paddr( DMA_apb_s0_paddr )
	,	.DMA_apb_s0_penable( DMA_apb_s0_penable )
	,	.DMA_apb_s0_prdata( DMA_apb_s0_prdata )
	,	.DMA_apb_s0_pready( DMA_apb_s0_pready )
	,	.DMA_apb_s0_psel( DMA_apb_s0_psel )
	,	.DMA_apb_s0_pslverr( DMA_apb_s0_pslverr )
	,	.DMA_apb_s0_pwbe( DMA_apb_s0_pwbe )
	,	.DMA_apb_s0_pwdata( DMA_apb_s0_pwdata )
	,	.DMA_apb_s0_pwrite( DMA_apb_s0_pwrite )
	,	.FCB_apb_s0_paddr( FCB_apb_s0_paddr )
	,	.FCB_apb_s0_penable( FCB_apb_s0_penable )
	,	.FCB_apb_s0_prdata( FCB_apb_s0_prdata )
	,	.FCB_apb_s0_pready( FCB_apb_s0_pready )
	,	.FCB_apb_s0_psel( FCB_apb_s0_psel )
	,	.FCB_apb_s0_pslverr( FCB_apb_s0_pslverr )
	,	.FCB_apb_s0_pwbe( FCB_apb_s0_pwbe )
	,	.FCB_apb_s0_pwdata( FCB_apb_s0_pwdata )
	,	.FCB_apb_s0_pwrite( FCB_apb_s0_pwrite )
	,	.GPIO_apb_s0_paddr( GPIO_apb_s0_paddr )
	,	.GPIO_apb_s0_penable( GPIO_apb_s0_penable )
	,	.GPIO_apb_s0_prdata( GPIO_apb_s0_prdata )
	,	.GPIO_apb_s0_pready( GPIO_apb_s0_pready )
	,	.GPIO_apb_s0_psel( GPIO_apb_s0_psel )
	,	.GPIO_apb_s0_pslverr( GPIO_apb_s0_pslverr )
	,	.GPIO_apb_s0_pwbe( GPIO_apb_s0_pwbe )
	,	.GPIO_apb_s0_pwdata( GPIO_apb_s0_pwdata )
	,	.GPIO_apb_s0_pwrite( GPIO_apb_s0_pwrite )
	,	.GPT_apb_s0_paddr( GPT_apb_s0_paddr )
	,	.GPT_apb_s0_penable( GPT_apb_s0_penable )
	,	.GPT_apb_s0_prdata( GPT_apb_s0_prdata )
	,	.GPT_apb_s0_pready( GPT_apb_s0_pready )
	,	.GPT_apb_s0_psel( GPT_apb_s0_psel )
	,	.GPT_apb_s0_pslverr( GPT_apb_s0_pslverr )
	,	.GPT_apb_s0_pwbe( GPT_apb_s0_pwbe )
	,	.GPT_apb_s0_pwdata( GPT_apb_s0_pwdata )
	,	.GPT_apb_s0_pwrite( GPT_apb_s0_pwrite )
	,	.I2C_apb_s0_paddr( I2C_apb_s0_paddr )
	,	.I2C_apb_s0_penable( I2C_apb_s0_penable )
	,	.I2C_apb_s0_prdata( I2C_apb_s0_prdata )
	,	.I2C_apb_s0_pready( I2C_apb_s0_pready )
	,	.I2C_apb_s0_psel( I2C_apb_s0_psel )
	,	.I2C_apb_s0_pslverr( I2C_apb_s0_pslverr )
	,	.I2C_apb_s0_pwbe( I2C_apb_s0_pwbe )
	,	.I2C_apb_s0_pwdata( I2C_apb_s0_pwdata )
	,	.I2C_apb_s0_pwrite( I2C_apb_s0_pwrite )
	,	.MBOX_apb_s0_paddr( MBOX_apb_s0_paddr )
	,	.MBOX_apb_s0_penable( MBOX_apb_s0_penable )
	,	.MBOX_apb_s0_prdata( MBOX_apb_s0_prdata )
	,	.MBOX_apb_s0_pready( MBOX_apb_s0_pready )
	,	.MBOX_apb_s0_psel( MBOX_apb_s0_psel )
	,	.MBOX_apb_s0_pslverr( MBOX_apb_s0_pslverr )
	,	.MBOX_apb_s0_pwbe( MBOX_apb_s0_pwbe )
	,	.MBOX_apb_s0_pwdata( MBOX_apb_s0_pwdata )
	,	.MBOX_apb_s0_pwrite( MBOX_apb_s0_pwrite )
	,	.PUFCC_apb_s0_PAddr( PUFCC_apb_s0_PAddr )
	,	.PUFCC_apb_s0_PEnable( PUFCC_apb_s0_PEnable )
	,	.PUFCC_apb_s0_PProt( PUFCC_apb_s0_PProt )
	,	.PUFCC_apb_s0_PRData( PUFCC_apb_s0_PRData )
	,	.PUFCC_apb_s0_PReady( PUFCC_apb_s0_PReady )
	,	.PUFCC_apb_s0_PSel( PUFCC_apb_s0_PSel )
	,	.PUFCC_apb_s0_PSlvErr( PUFCC_apb_s0_PSlvErr )
	,	.PUFCC_apb_s0_PStrb( PUFCC_apb_s0_PStrb )
	,	.PUFCC_apb_s0_PWData( PUFCC_apb_s0_PWData )
	,	.PUFCC_apb_s0_PWrite( PUFCC_apb_s0_PWrite )
	,	.SCU_PAddr( SCU_PAddr )
	,	.SCU_PEnable( SCU_PEnable )
	,	.SCU_PRData( SCU_PRData )
	,	.SCU_PReady( SCU_PReady )
	,	.SCU_PSel( SCU_PSel )
	,	.SCU_PSlvErr( SCU_PSlvErr )
	,	.SCU_PWBe( SCU_PWBe )
	,	.SCU_PWData( SCU_PWData )
	,	.SCU_PWrite( SCU_PWrite )
	,	.SPI_ahb_s0_haddr( SPI_ahb_s0_haddr )
	,	.SPI_ahb_s0_hburst( SPI_ahb_s0_hburst )
	,	.SPI_ahb_s0_hmastlock( SPI_ahb_s0_hmastlock )
	,	.SPI_ahb_s0_hprot( SPI_ahb_s0_hprot )
	,	.SPI_ahb_s0_hrdata( SPI_ahb_s0_hrdata )
	,	.SPI_ahb_s0_hready( SPI_ahb_s0_hready )
	,	.SPI_ahb_s0_hresp( SPI_ahb_s0_hresp )
	,	.SPI_ahb_s0_hsel( SPI_ahb_s0_hsel )
	,	.SPI_ahb_s0_hsize( SPI_ahb_s0_hsize )
	,	.SPI_ahb_s0_htrans( SPI_ahb_s0_htrans )
	,	.SPI_ahb_s0_hwbe( SPI_ahb_s0_hwbe )
	,	.SPI_ahb_s0_hwdata( SPI_ahb_s0_hwdata )
	,	.SPI_ahb_s0_hwrite( SPI_ahb_s0_hwrite )
	,	.SPI_mem_ahb_haddr( SPI_mem_ahb_haddr )
	,	.SPI_mem_ahb_hburst( SPI_mem_ahb_hburst )
	,	.SPI_mem_ahb_hmastlock( SPI_mem_ahb_hmastlock )
	,	.SPI_mem_ahb_hprot( SPI_mem_ahb_hprot )
	,	.SPI_mem_ahb_hrdata( SPI_mem_ahb_hrdata )
	,	.SPI_mem_ahb_hready( SPI_mem_ahb_hready )
	,	.SPI_mem_ahb_hresp( SPI_mem_ahb_hresp )
	,	.SPI_mem_ahb_hsel( SPI_mem_ahb_hsel )
	,	.SPI_mem_ahb_hsize( SPI_mem_ahb_hsize )
	,	.SPI_mem_ahb_htrans( SPI_mem_ahb_htrans )
	,	.SPI_mem_ahb_hwbe( SPI_mem_ahb_hwbe )
	,	.SPI_mem_ahb_hwdata( SPI_mem_ahb_hwdata )
	,	.SPI_mem_ahb_hwrite( SPI_mem_ahb_hwrite )
	,	.UART_apb_s0_paddr( UART_apb_s0_paddr )
	,	.UART_apb_s0_penable( UART_apb_s0_penable )
	,	.UART_apb_s0_prdata( UART_apb_s0_prdata )
	,	.UART_apb_s0_pready( UART_apb_s0_pready )
	,	.UART_apb_s0_psel( UART_apb_s0_psel )
	,	.UART_apb_s0_pslverr( UART_apb_s0_pslverr )
	,	.UART_apb_s0_pwbe( UART_apb_s0_pwbe )
	,	.UART_apb_s0_pwdata( UART_apb_s0_pwdata )
	,	.UART_apb_s0_pwrite( UART_apb_s0_pwrite )
	,	.UART_apb_s1_paddr( UART_apb_s1_paddr )
	,	.UART_apb_s1_penable( UART_apb_s1_penable )
	,	.UART_apb_s1_prdata( UART_apb_s1_prdata )
	,	.UART_apb_s1_pready( UART_apb_s1_pready )
	,	.UART_apb_s1_psel( UART_apb_s1_psel )
	,	.UART_apb_s1_pslverr( UART_apb_s1_pslverr )
	,	.UART_apb_s1_pwbe( UART_apb_s1_pwbe )
	,	.UART_apb_s1_pwdata( UART_apb_s1_pwdata )
	,	.UART_apb_s1_pwrite( UART_apb_s1_pwrite )
	,	.USB_axi_s0_ar_addr( USB_axi_s0_ar_addr )
	,	.USB_axi_s0_ar_prot( USB_axi_s0_ar_prot )
	,	.USB_axi_s0_ar_ready( USB_axi_s0_ar_ready )
	,	.USB_axi_s0_ar_valid( USB_axi_s0_ar_valid )
	,	.USB_axi_s0_aw_addr( USB_axi_s0_aw_addr )
	,	.USB_axi_s0_aw_prot( USB_axi_s0_aw_prot )
	,	.USB_axi_s0_aw_ready( USB_axi_s0_aw_ready )
	,	.USB_axi_s0_aw_valid( USB_axi_s0_aw_valid )
	,	.USB_axi_s0_b_ready( USB_axi_s0_b_ready )
	,	.USB_axi_s0_b_resp( USB_axi_s0_b_resp )
	,	.USB_axi_s0_b_valid( USB_axi_s0_b_valid )
	,	.USB_axi_s0_r_data( USB_axi_s0_r_data )
	,	.USB_axi_s0_r_ready( USB_axi_s0_r_ready )
	,	.USB_axi_s0_r_resp( USB_axi_s0_r_resp )
	,	.USB_axi_s0_r_valid( USB_axi_s0_r_valid )
	,	.USB_axi_s0_w_data( USB_axi_s0_w_data )
	,	.USB_axi_s0_w_ready( USB_axi_s0_w_ready )
	,	.USB_axi_s0_w_strb( USB_axi_s0_w_strb )
	,	.USB_axi_s0_w_valid( USB_axi_s0_w_valid )
	,	.acpu_axi_m0_ar_addr( acpu_axi_m0_ar_addr )
	,	.acpu_axi_m0_ar_burst( acpu_axi_m0_ar_burst )
	,	.acpu_axi_m0_ar_cache( acpu_axi_m0_ar_cache )
	,	.acpu_axi_m0_ar_id( acpu_axi_m0_ar_id )
	,	.acpu_axi_m0_ar_len( acpu_axi_m0_ar_len )
	,	.acpu_axi_m0_ar_lock( acpu_axi_m0_ar_lock )
	,	.acpu_axi_m0_ar_prot( acpu_axi_m0_ar_prot )
	,	.acpu_axi_m0_ar_ready( acpu_axi_m0_ar_ready )
	,	.acpu_axi_m0_ar_size( acpu_axi_m0_ar_size )
	,	.acpu_axi_m0_ar_valid( acpu_axi_m0_ar_valid )
	,	.acpu_axi_m0_aw_addr( acpu_axi_m0_aw_addr )
	,	.acpu_axi_m0_aw_burst( acpu_axi_m0_aw_burst )
	,	.acpu_axi_m0_aw_cache( acpu_axi_m0_aw_cache )
	,	.acpu_axi_m0_aw_id( acpu_axi_m0_aw_id )
	,	.acpu_axi_m0_aw_len( acpu_axi_m0_aw_len )
	,	.acpu_axi_m0_aw_lock( acpu_axi_m0_aw_lock )
	,	.acpu_axi_m0_aw_prot( acpu_axi_m0_aw_prot )
	,	.acpu_axi_m0_aw_ready( acpu_axi_m0_aw_ready )
	,	.acpu_axi_m0_aw_size( acpu_axi_m0_aw_size )
	,	.acpu_axi_m0_aw_valid( acpu_axi_m0_aw_valid )
	,	.acpu_axi_m0_b_id( acpu_axi_m0_b_id )
	,	.acpu_axi_m0_b_ready( acpu_axi_m0_b_ready )
	,	.acpu_axi_m0_b_resp( acpu_axi_m0_b_resp )
	,	.acpu_axi_m0_b_valid( acpu_axi_m0_b_valid )
	,	.acpu_axi_m0_r_data( acpu_axi_m0_r_data )
	,	.acpu_axi_m0_r_id( acpu_axi_m0_r_id )
	,	.acpu_axi_m0_r_last( acpu_axi_m0_r_last )
	,	.acpu_axi_m0_r_ready( acpu_axi_m0_r_ready )
	,	.acpu_axi_m0_r_resp( acpu_axi_m0_r_resp )
	,	.acpu_axi_m0_r_valid( acpu_axi_m0_r_valid )
	,	.acpu_axi_m0_w_data( acpu_axi_m0_w_data )
	,	.acpu_axi_m0_w_last( acpu_axi_m0_w_last )
	,	.acpu_axi_m0_w_ready( acpu_axi_m0_w_ready )
	,	.acpu_axi_m0_w_strb( acpu_axi_m0_w_strb )
	,	.acpu_axi_m0_w_valid( acpu_axi_m0_w_valid )
	,	.arm_axi_m0_ar_addr( arm_axi_m0_ar_addr )
	,	.arm_axi_m0_ar_burst( arm_axi_m0_ar_burst )
	,	.arm_axi_m0_ar_cache( arm_axi_m0_ar_cache )
	,	.arm_axi_m0_ar_id( arm_axi_m0_ar_id )
	,	.arm_axi_m0_ar_len( arm_axi_m0_ar_len )
	,	.arm_axi_m0_ar_lock( arm_axi_m0_ar_lock )
	,	.arm_axi_m0_ar_prot( arm_axi_m0_ar_prot )
	,	.arm_axi_m0_ar_ready( arm_axi_m0_ar_ready )
	,	.arm_axi_m0_ar_size( arm_axi_m0_ar_size )
	,	.arm_axi_m0_ar_valid( arm_axi_m0_ar_valid )
	,	.arm_axi_m0_aw_addr( arm_axi_m0_aw_addr )
	,	.arm_axi_m0_aw_burst( arm_axi_m0_aw_burst )
	,	.arm_axi_m0_aw_cache( arm_axi_m0_aw_cache )
	,	.arm_axi_m0_aw_id( arm_axi_m0_aw_id )
	,	.arm_axi_m0_aw_len( arm_axi_m0_aw_len )
	,	.arm_axi_m0_aw_lock( arm_axi_m0_aw_lock )
	,	.arm_axi_m0_aw_prot( arm_axi_m0_aw_prot )
	,	.arm_axi_m0_aw_ready( arm_axi_m0_aw_ready )
	,	.arm_axi_m0_aw_size( arm_axi_m0_aw_size )
	,	.arm_axi_m0_aw_valid( arm_axi_m0_aw_valid )
	,	.arm_axi_m0_b_id( arm_axi_m0_b_id )
	,	.arm_axi_m0_b_ready( arm_axi_m0_b_ready )
	,	.arm_axi_m0_b_resp( arm_axi_m0_b_resp )
	,	.arm_axi_m0_b_valid( arm_axi_m0_b_valid )
	,	.arm_axi_m0_r_data( arm_axi_m0_r_data )
	,	.arm_axi_m0_r_id( arm_axi_m0_r_id )
	,	.arm_axi_m0_r_last( arm_axi_m0_r_last )
	,	.arm_axi_m0_r_ready( arm_axi_m0_r_ready )
	,	.arm_axi_m0_r_resp( arm_axi_m0_r_resp )
	,	.arm_axi_m0_r_valid( arm_axi_m0_r_valid )
	,	.arm_axi_m0_w_data( arm_axi_m0_w_data )
	,	.arm_axi_m0_w_last( arm_axi_m0_w_last )
	,	.arm_axi_m0_w_ready( arm_axi_m0_w_ready )
	,	.arm_axi_m0_w_strb( arm_axi_m0_w_strb )
	,	.arm_axi_m0_w_valid( arm_axi_m0_w_valid )
	,	.bcpu_ahb_m0_haddr( bcpu_ahb_m0_haddr )
	,	.bcpu_ahb_m0_hburst( bcpu_ahb_m0_hburst )
	,	.bcpu_ahb_m0_hmastlock( bcpu_ahb_m0_hmastlock )
	,	.bcpu_ahb_m0_hprot( bcpu_ahb_m0_hprot )
	,	.bcpu_ahb_m0_hrdata( bcpu_ahb_m0_hrdata )
	,	.bcpu_ahb_m0_hready( bcpu_ahb_m0_hready )
	,	.bcpu_ahb_m0_hresp( bcpu_ahb_m0_hresp )
	,	.bcpu_ahb_m0_hsel( bcpu_ahb_m0_hsel )
	,	.bcpu_ahb_m0_hsize( bcpu_ahb_m0_hsize )
	,	.bcpu_ahb_m0_htrans( bcpu_ahb_m0_htrans )
	,	.bcpu_ahb_m0_hwbe( bcpu_ahb_m0_hwbe )
	,	.bcpu_ahb_m0_hwdata( bcpu_ahb_m0_hwdata )
	,	.bcpu_ahb_m0_hwrite( bcpu_ahb_m0_hwrite )
	,	.clk_133( clk_133 )
	,	.clk_266( clk_266 )
	,	.clk_533( clk_533 )
	,	.cpu_observer_AFReady( cpu_observer_AFReady )
	,	.cpu_observer_AFValid( cpu_observer_AFValid )
	,	.cpu_observer_ATBytes( cpu_observer_ATBytes )
	,	.cpu_observer_ATData( cpu_observer_ATData )
	,	.cpu_observer_ATId( cpu_observer_ATId )
	,	.cpu_observer_ATReady( cpu_observer_ATReady )
	,	.cpu_observer_ATValid( cpu_observer_ATValid )
	,	.ddr_axi_s0_ar_addr( ddr_axi_s0_ar_addr )
	,	.ddr_axi_s0_ar_burst( ddr_axi_s0_ar_burst )
	,	.ddr_axi_s0_ar_cache( ddr_axi_s0_ar_cache )
	,	.ddr_axi_s0_ar_id( ddr_axi_s0_ar_id )
	,	.ddr_axi_s0_ar_len( ddr_axi_s0_ar_len )
	,	.ddr_axi_s0_ar_lock( ddr_axi_s0_ar_lock )
	,	.ddr_axi_s0_ar_prot( ddr_axi_s0_ar_prot )
	,	.ddr_axi_s0_ar_ready( ddr_axi_s0_ar_ready )
	,	.ddr_axi_s0_ar_size( ddr_axi_s0_ar_size )
	,	.ddr_axi_s0_ar_valid( ddr_axi_s0_ar_valid )
	,	.ddr_axi_s0_aw_addr( ddr_axi_s0_aw_addr )
	,	.ddr_axi_s0_aw_burst( ddr_axi_s0_aw_burst )
	,	.ddr_axi_s0_aw_cache( ddr_axi_s0_aw_cache )
	,	.ddr_axi_s0_aw_id( ddr_axi_s0_aw_id )
	,	.ddr_axi_s0_aw_len( ddr_axi_s0_aw_len )
	,	.ddr_axi_s0_aw_lock( ddr_axi_s0_aw_lock )
	,	.ddr_axi_s0_aw_prot( ddr_axi_s0_aw_prot )
	,	.ddr_axi_s0_aw_ready( ddr_axi_s0_aw_ready )
	,	.ddr_axi_s0_aw_size( ddr_axi_s0_aw_size )
	,	.ddr_axi_s0_aw_valid( ddr_axi_s0_aw_valid )
	,	.ddr_axi_s0_b_id( ddr_axi_s0_b_id )
	,	.ddr_axi_s0_b_ready( ddr_axi_s0_b_ready )
	,	.ddr_axi_s0_b_resp( ddr_axi_s0_b_resp )
	,	.ddr_axi_s0_b_valid( ddr_axi_s0_b_valid )
	,	.ddr_axi_s0_r_data( ddr_axi_s0_r_data )
	,	.ddr_axi_s0_r_id( ddr_axi_s0_r_id )
	,	.ddr_axi_s0_r_last( ddr_axi_s0_r_last )
	,	.ddr_axi_s0_r_ready( ddr_axi_s0_r_ready )
	,	.ddr_axi_s0_r_resp( ddr_axi_s0_r_resp )
	,	.ddr_axi_s0_r_valid( ddr_axi_s0_r_valid )
	,	.ddr_axi_s0_w_data( ddr_axi_s0_w_data )
	,	.ddr_axi_s0_w_last( ddr_axi_s0_w_last )
	,	.ddr_axi_s0_w_ready( ddr_axi_s0_w_ready )
	,	.ddr_axi_s0_w_strb( ddr_axi_s0_w_strb )
	,	.ddr_axi_s0_w_valid( ddr_axi_s0_w_valid )
	,	.ddr_axi_s1_ar_addr( ddr_axi_s1_ar_addr )
	,	.ddr_axi_s1_ar_burst( ddr_axi_s1_ar_burst )
	,	.ddr_axi_s1_ar_cache( ddr_axi_s1_ar_cache )
	,	.ddr_axi_s1_ar_id( ddr_axi_s1_ar_id )
	,	.ddr_axi_s1_ar_len( ddr_axi_s1_ar_len )
	,	.ddr_axi_s1_ar_lock( ddr_axi_s1_ar_lock )
	,	.ddr_axi_s1_ar_prot( ddr_axi_s1_ar_prot )
	,	.ddr_axi_s1_ar_ready( ddr_axi_s1_ar_ready )
	,	.ddr_axi_s1_ar_size( ddr_axi_s1_ar_size )
	,	.ddr_axi_s1_ar_valid( ddr_axi_s1_ar_valid )
	,	.ddr_axi_s1_aw_addr( ddr_axi_s1_aw_addr )
	,	.ddr_axi_s1_aw_burst( ddr_axi_s1_aw_burst )
	,	.ddr_axi_s1_aw_cache( ddr_axi_s1_aw_cache )
	,	.ddr_axi_s1_aw_id( ddr_axi_s1_aw_id )
	,	.ddr_axi_s1_aw_len( ddr_axi_s1_aw_len )
	,	.ddr_axi_s1_aw_lock( ddr_axi_s1_aw_lock )
	,	.ddr_axi_s1_aw_prot( ddr_axi_s1_aw_prot )
	,	.ddr_axi_s1_aw_ready( ddr_axi_s1_aw_ready )
	,	.ddr_axi_s1_aw_size( ddr_axi_s1_aw_size )
	,	.ddr_axi_s1_aw_valid( ddr_axi_s1_aw_valid )
	,	.ddr_axi_s1_b_id( ddr_axi_s1_b_id )
	,	.ddr_axi_s1_b_ready( ddr_axi_s1_b_ready )
	,	.ddr_axi_s1_b_resp( ddr_axi_s1_b_resp )
	,	.ddr_axi_s1_b_valid( ddr_axi_s1_b_valid )
	,	.ddr_axi_s1_r_data( ddr_axi_s1_r_data )
	,	.ddr_axi_s1_r_id( ddr_axi_s1_r_id )
	,	.ddr_axi_s1_r_last( ddr_axi_s1_r_last )
	,	.ddr_axi_s1_r_ready( ddr_axi_s1_r_ready )
	,	.ddr_axi_s1_r_resp( ddr_axi_s1_r_resp )
	,	.ddr_axi_s1_r_valid( ddr_axi_s1_r_valid )
	,	.ddr_axi_s1_w_data( ddr_axi_s1_w_data )
	,	.ddr_axi_s1_w_last( ddr_axi_s1_w_last )
	,	.ddr_axi_s1_w_ready( ddr_axi_s1_w_ready )
	,	.ddr_axi_s1_w_strb( ddr_axi_s1_w_strb )
	,	.ddr_axi_s1_w_valid( ddr_axi_s1_w_valid )
	,	.ddr_axi_s2_ar_addr( ddr_axi_s2_ar_addr )
	,	.ddr_axi_s2_ar_burst( ddr_axi_s2_ar_burst )
	,	.ddr_axi_s2_ar_cache( ddr_axi_s2_ar_cache )
	,	.ddr_axi_s2_ar_id( ddr_axi_s2_ar_id )
	,	.ddr_axi_s2_ar_len( ddr_axi_s2_ar_len )
	,	.ddr_axi_s2_ar_lock( ddr_axi_s2_ar_lock )
	,	.ddr_axi_s2_ar_prot( ddr_axi_s2_ar_prot )
	,	.ddr_axi_s2_ar_ready( ddr_axi_s2_ar_ready )
	,	.ddr_axi_s2_ar_size( ddr_axi_s2_ar_size )
	,	.ddr_axi_s2_ar_valid( ddr_axi_s2_ar_valid )
	,	.ddr_axi_s2_aw_addr( ddr_axi_s2_aw_addr )
	,	.ddr_axi_s2_aw_burst( ddr_axi_s2_aw_burst )
	,	.ddr_axi_s2_aw_cache( ddr_axi_s2_aw_cache )
	,	.ddr_axi_s2_aw_id( ddr_axi_s2_aw_id )
	,	.ddr_axi_s2_aw_len( ddr_axi_s2_aw_len )
	,	.ddr_axi_s2_aw_lock( ddr_axi_s2_aw_lock )
	,	.ddr_axi_s2_aw_prot( ddr_axi_s2_aw_prot )
	,	.ddr_axi_s2_aw_ready( ddr_axi_s2_aw_ready )
	,	.ddr_axi_s2_aw_size( ddr_axi_s2_aw_size )
	,	.ddr_axi_s2_aw_valid( ddr_axi_s2_aw_valid )
	,	.ddr_axi_s2_b_id( ddr_axi_s2_b_id )
	,	.ddr_axi_s2_b_ready( ddr_axi_s2_b_ready )
	,	.ddr_axi_s2_b_resp( ddr_axi_s2_b_resp )
	,	.ddr_axi_s2_b_valid( ddr_axi_s2_b_valid )
	,	.ddr_axi_s2_r_data( ddr_axi_s2_r_data )
	,	.ddr_axi_s2_r_id( ddr_axi_s2_r_id )
	,	.ddr_axi_s2_r_last( ddr_axi_s2_r_last )
	,	.ddr_axi_s2_r_ready( ddr_axi_s2_r_ready )
	,	.ddr_axi_s2_r_resp( ddr_axi_s2_r_resp )
	,	.ddr_axi_s2_r_valid( ddr_axi_s2_r_valid )
	,	.ddr_axi_s2_w_data( ddr_axi_s2_w_data )
	,	.ddr_axi_s2_w_last( ddr_axi_s2_w_last )
	,	.ddr_axi_s2_w_ready( ddr_axi_s2_w_ready )
	,	.ddr_axi_s2_w_strb( ddr_axi_s2_w_strb )
	,	.ddr_axi_s2_w_valid( ddr_axi_s2_w_valid )
	,	.ddr_axi_s3_ar_addr( ddr_axi_s3_ar_addr )
	,	.ddr_axi_s3_ar_burst( ddr_axi_s3_ar_burst )
	,	.ddr_axi_s3_ar_cache( ddr_axi_s3_ar_cache )
	,	.ddr_axi_s3_ar_id( ddr_axi_s3_ar_id )
	,	.ddr_axi_s3_ar_len( ddr_axi_s3_ar_len )
	,	.ddr_axi_s3_ar_lock( ddr_axi_s3_ar_lock )
	,	.ddr_axi_s3_ar_prot( ddr_axi_s3_ar_prot )
	,	.ddr_axi_s3_ar_ready( ddr_axi_s3_ar_ready )
	,	.ddr_axi_s3_ar_size( ddr_axi_s3_ar_size )
	,	.ddr_axi_s3_ar_valid( ddr_axi_s3_ar_valid )
	,	.ddr_axi_s3_aw_addr( ddr_axi_s3_aw_addr )
	,	.ddr_axi_s3_aw_burst( ddr_axi_s3_aw_burst )
	,	.ddr_axi_s3_aw_cache( ddr_axi_s3_aw_cache )
	,	.ddr_axi_s3_aw_id( ddr_axi_s3_aw_id )
	,	.ddr_axi_s3_aw_len( ddr_axi_s3_aw_len )
	,	.ddr_axi_s3_aw_lock( ddr_axi_s3_aw_lock )
	,	.ddr_axi_s3_aw_prot( ddr_axi_s3_aw_prot )
	,	.ddr_axi_s3_aw_ready( ddr_axi_s3_aw_ready )
	,	.ddr_axi_s3_aw_size( ddr_axi_s3_aw_size )
	,	.ddr_axi_s3_aw_valid( ddr_axi_s3_aw_valid )
	,	.ddr_axi_s3_b_id( ddr_axi_s3_b_id )
	,	.ddr_axi_s3_b_ready( ddr_axi_s3_b_ready )
	,	.ddr_axi_s3_b_resp( ddr_axi_s3_b_resp )
	,	.ddr_axi_s3_b_valid( ddr_axi_s3_b_valid )
	,	.ddr_axi_s3_r_data( ddr_axi_s3_r_data )
	,	.ddr_axi_s3_r_id( ddr_axi_s3_r_id )
	,	.ddr_axi_s3_r_last( ddr_axi_s3_r_last )
	,	.ddr_axi_s3_r_ready( ddr_axi_s3_r_ready )
	,	.ddr_axi_s3_r_resp( ddr_axi_s3_r_resp )
	,	.ddr_axi_s3_r_valid( ddr_axi_s3_r_valid )
	,	.ddr_axi_s3_w_data( ddr_axi_s3_w_data )
	,	.ddr_axi_s3_w_last( ddr_axi_s3_w_last )
	,	.ddr_axi_s3_w_ready( ddr_axi_s3_w_ready )
	,	.ddr_axi_s3_w_strb( ddr_axi_s3_w_strb )
	,	.ddr_axi_s3_w_valid( ddr_axi_s3_w_valid )
	,	.ddr_axil_s0_ar_addr( ddr_axil_s0_ar_addr )
	,	.ddr_axil_s0_ar_prot( ddr_axil_s0_ar_prot )
	,	.ddr_axil_s0_ar_ready( ddr_axil_s0_ar_ready )
	,	.ddr_axil_s0_ar_valid( ddr_axil_s0_ar_valid )
	,	.ddr_axil_s0_aw_addr( ddr_axil_s0_aw_addr )
	,	.ddr_axil_s0_aw_prot( ddr_axil_s0_aw_prot )
	,	.ddr_axil_s0_aw_ready( ddr_axil_s0_aw_ready )
	,	.ddr_axil_s0_aw_valid( ddr_axil_s0_aw_valid )
	,	.ddr_axil_s0_b_ready( ddr_axil_s0_b_ready )
	,	.ddr_axil_s0_b_resp( ddr_axil_s0_b_resp )
	,	.ddr_axil_s0_b_valid( ddr_axil_s0_b_valid )
	,	.ddr_axil_s0_r_data( ddr_axil_s0_r_data )
	,	.ddr_axil_s0_r_ready( ddr_axil_s0_r_ready )
	,	.ddr_axil_s0_r_resp( ddr_axil_s0_r_resp )
	,	.ddr_axil_s0_r_valid( ddr_axil_s0_r_valid )
	,	.ddr_axil_s0_w_data( ddr_axil_s0_w_data )
	,	.ddr_axil_s0_w_ready( ddr_axil_s0_w_ready )
	,	.ddr_axil_s0_w_strb( ddr_axil_s0_w_strb )
	,	.ddr_axil_s0_w_valid( ddr_axil_s0_w_valid )
	,	.dma_axi_m0_ar_addr( dma_axi_m0_ar_addr )
	,	.dma_axi_m0_ar_burst( dma_axi_m0_ar_burst )
	,	.dma_axi_m0_ar_cache( dma_axi_m0_ar_cache )
	,	.dma_axi_m0_ar_id( dma_axi_m0_ar_id )
	,	.dma_axi_m0_ar_len( dma_axi_m0_ar_len )
	,	.dma_axi_m0_ar_lock( dma_axi_m0_ar_lock )
	,	.dma_axi_m0_ar_prot( dma_axi_m0_ar_prot )
	,	.dma_axi_m0_ar_ready( dma_axi_m0_ar_ready )
	,	.dma_axi_m0_ar_size( dma_axi_m0_ar_size )
	,	.dma_axi_m0_ar_valid( dma_axi_m0_ar_valid )
	,	.dma_axi_m0_aw_addr( dma_axi_m0_aw_addr )
	,	.dma_axi_m0_aw_burst( dma_axi_m0_aw_burst )
	,	.dma_axi_m0_aw_cache( dma_axi_m0_aw_cache )
	,	.dma_axi_m0_aw_id( dma_axi_m0_aw_id )
	,	.dma_axi_m0_aw_len( dma_axi_m0_aw_len )
	,	.dma_axi_m0_aw_lock( dma_axi_m0_aw_lock )
	,	.dma_axi_m0_aw_prot( dma_axi_m0_aw_prot )
	,	.dma_axi_m0_aw_ready( dma_axi_m0_aw_ready )
	,	.dma_axi_m0_aw_size( dma_axi_m0_aw_size )
	,	.dma_axi_m0_aw_valid( dma_axi_m0_aw_valid )
	,	.dma_axi_m0_b_id( dma_axi_m0_b_id )
	,	.dma_axi_m0_b_ready( dma_axi_m0_b_ready )
	,	.dma_axi_m0_b_resp( dma_axi_m0_b_resp )
	,	.dma_axi_m0_b_valid( dma_axi_m0_b_valid )
	,	.dma_axi_m0_r_data( dma_axi_m0_r_data )
	,	.dma_axi_m0_r_id( dma_axi_m0_r_id )
	,	.dma_axi_m0_r_last( dma_axi_m0_r_last )
	,	.dma_axi_m0_r_ready( dma_axi_m0_r_ready )
	,	.dma_axi_m0_r_resp( dma_axi_m0_r_resp )
	,	.dma_axi_m0_r_valid( dma_axi_m0_r_valid )
	,	.dma_axi_m0_w_data( dma_axi_m0_w_data )
	,	.dma_axi_m0_w_last( dma_axi_m0_w_last )
	,	.dma_axi_m0_w_ready( dma_axi_m0_w_ready )
	,	.dma_axi_m0_w_strb( dma_axi_m0_w_strb )
	,	.dma_axi_m0_w_valid( dma_axi_m0_w_valid )
	,	.dma_axi_m1_ar_addr( dma_axi_m1_ar_addr )
	,	.dma_axi_m1_ar_burst( dma_axi_m1_ar_burst )
	,	.dma_axi_m1_ar_cache( dma_axi_m1_ar_cache )
	,	.dma_axi_m1_ar_id( dma_axi_m1_ar_id )
	,	.dma_axi_m1_ar_len( dma_axi_m1_ar_len )
	,	.dma_axi_m1_ar_lock( dma_axi_m1_ar_lock )
	,	.dma_axi_m1_ar_prot( dma_axi_m1_ar_prot )
	,	.dma_axi_m1_ar_ready( dma_axi_m1_ar_ready )
	,	.dma_axi_m1_ar_size( dma_axi_m1_ar_size )
	,	.dma_axi_m1_ar_valid( dma_axi_m1_ar_valid )
	,	.dma_axi_m1_aw_addr( dma_axi_m1_aw_addr )
	,	.dma_axi_m1_aw_burst( dma_axi_m1_aw_burst )
	,	.dma_axi_m1_aw_cache( dma_axi_m1_aw_cache )
	,	.dma_axi_m1_aw_id( dma_axi_m1_aw_id )
	,	.dma_axi_m1_aw_len( dma_axi_m1_aw_len )
	,	.dma_axi_m1_aw_lock( dma_axi_m1_aw_lock )
	,	.dma_axi_m1_aw_prot( dma_axi_m1_aw_prot )
	,	.dma_axi_m1_aw_ready( dma_axi_m1_aw_ready )
	,	.dma_axi_m1_aw_size( dma_axi_m1_aw_size )
	,	.dma_axi_m1_aw_valid( dma_axi_m1_aw_valid )
	,	.dma_axi_m1_b_id( dma_axi_m1_b_id )
	,	.dma_axi_m1_b_ready( dma_axi_m1_b_ready )
	,	.dma_axi_m1_b_resp( dma_axi_m1_b_resp )
	,	.dma_axi_m1_b_valid( dma_axi_m1_b_valid )
	,	.dma_axi_m1_r_data( dma_axi_m1_r_data )
	,	.dma_axi_m1_r_id( dma_axi_m1_r_id )
	,	.dma_axi_m1_r_last( dma_axi_m1_r_last )
	,	.dma_axi_m1_r_ready( dma_axi_m1_r_ready )
	,	.dma_axi_m1_r_resp( dma_axi_m1_r_resp )
	,	.dma_axi_m1_r_valid( dma_axi_m1_r_valid )
	,	.dma_axi_m1_w_data( dma_axi_m1_w_data )
	,	.dma_axi_m1_w_last( dma_axi_m1_w_last )
	,	.dma_axi_m1_w_ready( dma_axi_m1_w_ready )
	,	.dma_axi_m1_w_strb( dma_axi_m1_w_strb )
	,	.dma_axi_m1_w_valid( dma_axi_m1_w_valid )
	,	.fpga_ahb_s0_haddr( fpga_ahb_s0_haddr )
	,	.fpga_ahb_s0_hburst( fpga_ahb_s0_hburst )
	,	.fpga_ahb_s0_hmastlock( fpga_ahb_s0_hmastlock )
	,	.fpga_ahb_s0_hprot( fpga_ahb_s0_hprot )
	,	.fpga_ahb_s0_hrdata( fpga_ahb_s0_hrdata )
	,	.fpga_ahb_s0_hready( fpga_ahb_s0_hready )
	,	.fpga_ahb_s0_hresp( fpga_ahb_s0_hresp )
	,	.fpga_ahb_s0_hsel( fpga_ahb_s0_hsel )
	,	.fpga_ahb_s0_hsize( fpga_ahb_s0_hsize )
	,	.fpga_ahb_s0_htrans( fpga_ahb_s0_htrans )
	,	.fpga_ahb_s0_hwbe( fpga_ahb_s0_hwbe )
	,	.fpga_ahb_s0_hwdata( fpga_ahb_s0_hwdata )
	,	.fpga_ahb_s0_hwrite( fpga_ahb_s0_hwrite )
	,	.fpga_axi_m0_ar_addr( fpga_axi_m0_ar_addr )
	,	.fpga_axi_m0_ar_burst( fpga_axi_m0_ar_burst )
	,	.fpga_axi_m0_ar_cache( fpga_axi_m0_ar_cache )
	,	.fpga_axi_m0_ar_id( fpga_axi_m0_ar_id )
	,	.fpga_axi_m0_ar_len( fpga_axi_m0_ar_len )
	,	.fpga_axi_m0_ar_lock( fpga_axi_m0_ar_lock )
	,	.fpga_axi_m0_ar_prot( fpga_axi_m0_ar_prot )
	,	.fpga_axi_m0_ar_ready( fpga_axi_m0_ar_ready )
	,	.fpga_axi_m0_ar_size( fpga_axi_m0_ar_size )
	,	.fpga_axi_m0_ar_valid( fpga_axi_m0_ar_valid )
	,	.fpga_axi_m0_aw_addr( fpga_axi_m0_aw_addr )
	,	.fpga_axi_m0_aw_burst( fpga_axi_m0_aw_burst )
	,	.fpga_axi_m0_aw_cache( fpga_axi_m0_aw_cache )
	,	.fpga_axi_m0_aw_id( fpga_axi_m0_aw_id )
	,	.fpga_axi_m0_aw_len( fpga_axi_m0_aw_len )
	,	.fpga_axi_m0_aw_lock( fpga_axi_m0_aw_lock )
	,	.fpga_axi_m0_aw_prot( fpga_axi_m0_aw_prot )
	,	.fpga_axi_m0_aw_ready( fpga_axi_m0_aw_ready )
	,	.fpga_axi_m0_aw_size( fpga_axi_m0_aw_size )
	,	.fpga_axi_m0_aw_valid( fpga_axi_m0_aw_valid )
	,	.fpga_axi_m0_b_id( fpga_axi_m0_b_id )
	,	.fpga_axi_m0_b_ready( fpga_axi_m0_b_ready )
	,	.fpga_axi_m0_b_resp( fpga_axi_m0_b_resp )
	,	.fpga_axi_m0_b_valid( fpga_axi_m0_b_valid )
	,	.fpga_axi_m0_r_data( fpga_axi_m0_r_data )
	,	.fpga_axi_m0_r_id( fpga_axi_m0_r_id )
	,	.fpga_axi_m0_r_last( fpga_axi_m0_r_last )
	,	.fpga_axi_m0_r_ready( fpga_axi_m0_r_ready )
	,	.fpga_axi_m0_r_resp( fpga_axi_m0_r_resp )
	,	.fpga_axi_m0_r_valid( fpga_axi_m0_r_valid )
	,	.fpga_axi_m0_w_data( fpga_axi_m0_w_data )
	,	.fpga_axi_m0_w_last( fpga_axi_m0_w_last )
	,	.fpga_axi_m0_w_ready( fpga_axi_m0_w_ready )
	,	.fpga_axi_m0_w_strb( fpga_axi_m0_w_strb )
	,	.fpga_axi_m0_w_valid( fpga_axi_m0_w_valid )
	,	.fpga_axi_m1_ar_addr( fpga_axi_m1_ar_addr )
	,	.fpga_axi_m1_ar_burst( fpga_axi_m1_ar_burst )
	,	.fpga_axi_m1_ar_cache( fpga_axi_m1_ar_cache )
	,	.fpga_axi_m1_ar_id( fpga_axi_m1_ar_id )
	,	.fpga_axi_m1_ar_len( fpga_axi_m1_ar_len )
	,	.fpga_axi_m1_ar_lock( fpga_axi_m1_ar_lock )
	,	.fpga_axi_m1_ar_prot( fpga_axi_m1_ar_prot )
	,	.fpga_axi_m1_ar_ready( fpga_axi_m1_ar_ready )
	,	.fpga_axi_m1_ar_size( fpga_axi_m1_ar_size )
	,	.fpga_axi_m1_ar_valid( fpga_axi_m1_ar_valid )
	,	.fpga_axi_m1_aw_addr( fpga_axi_m1_aw_addr )
	,	.fpga_axi_m1_aw_burst( fpga_axi_m1_aw_burst )
	,	.fpga_axi_m1_aw_cache( fpga_axi_m1_aw_cache )
	,	.fpga_axi_m1_aw_id( fpga_axi_m1_aw_id )
	,	.fpga_axi_m1_aw_len( fpga_axi_m1_aw_len )
	,	.fpga_axi_m1_aw_lock( fpga_axi_m1_aw_lock )
	,	.fpga_axi_m1_aw_prot( fpga_axi_m1_aw_prot )
	,	.fpga_axi_m1_aw_ready( fpga_axi_m1_aw_ready )
	,	.fpga_axi_m1_aw_size( fpga_axi_m1_aw_size )
	,	.fpga_axi_m1_aw_valid( fpga_axi_m1_aw_valid )
	,	.fpga_axi_m1_b_id( fpga_axi_m1_b_id )
	,	.fpga_axi_m1_b_ready( fpga_axi_m1_b_ready )
	,	.fpga_axi_m1_b_resp( fpga_axi_m1_b_resp )
	,	.fpga_axi_m1_b_valid( fpga_axi_m1_b_valid )
	,	.fpga_axi_m1_r_data( fpga_axi_m1_r_data )
	,	.fpga_axi_m1_r_id( fpga_axi_m1_r_id )
	,	.fpga_axi_m1_r_last( fpga_axi_m1_r_last )
	,	.fpga_axi_m1_r_ready( fpga_axi_m1_r_ready )
	,	.fpga_axi_m1_r_resp( fpga_axi_m1_r_resp )
	,	.fpga_axi_m1_r_valid( fpga_axi_m1_r_valid )
	,	.fpga_axi_m1_w_data( fpga_axi_m1_w_data )
	,	.fpga_axi_m1_w_last( fpga_axi_m1_w_last )
	,	.fpga_axi_m1_w_ready( fpga_axi_m1_w_ready )
	,	.fpga_axi_m1_w_strb( fpga_axi_m1_w_strb )
	,	.fpga_axi_m1_w_valid( fpga_axi_m1_w_valid )
	,	.fpga_clk_m0( fpga_clk_m0 )
	,	.fpga_clk_m1( fpga_clk_m1 )
	,	.fpga_clk_s0( fpga_clk_s0 )
	,	.fpga_rstm0_n( fpga_rstm0_n )
	,	.fpga_rstm1_n( fpga_rstm1_n )
	,	.fpga_rsts0_n( fpga_rsts0_n )
	,	.gbe_apb_s0_paddr( gbe_apb_s0_paddr )
	,	.gbe_apb_s0_penable( gbe_apb_s0_penable )
	,	.gbe_apb_s0_prdata( gbe_apb_s0_prdata )
	,	.gbe_apb_s0_pready( gbe_apb_s0_pready )
	,	.gbe_apb_s0_psel( gbe_apb_s0_psel )
	,	.gbe_apb_s0_pslverr( gbe_apb_s0_pslverr )
	,	.gbe_apb_s0_pwbe( gbe_apb_s0_pwbe )
	,	.gbe_apb_s0_pwdata( gbe_apb_s0_pwdata )
	,	.gbe_apb_s0_pwrite( gbe_apb_s0_pwrite )
	,	.gbe_axi_m0_ar_addr( gbe_axi_m0_ar_addr )
	,	.gbe_axi_m0_ar_burst( gbe_axi_m0_ar_burst )
	,	.gbe_axi_m0_ar_cache( gbe_axi_m0_ar_cache )
	,	.gbe_axi_m0_ar_id( gbe_axi_m0_ar_id )
	,	.gbe_axi_m0_ar_len( gbe_axi_m0_ar_len )
	,	.gbe_axi_m0_ar_lock( gbe_axi_m0_ar_lock )
	,	.gbe_axi_m0_ar_prot( gbe_axi_m0_ar_prot )
	,	.gbe_axi_m0_ar_ready( gbe_axi_m0_ar_ready )
	,	.gbe_axi_m0_ar_size( gbe_axi_m0_ar_size )
	,	.gbe_axi_m0_ar_valid( gbe_axi_m0_ar_valid )
	,	.gbe_axi_m0_aw_addr( gbe_axi_m0_aw_addr )
	,	.gbe_axi_m0_aw_burst( gbe_axi_m0_aw_burst )
	,	.gbe_axi_m0_aw_cache( gbe_axi_m0_aw_cache )
	,	.gbe_axi_m0_aw_id( gbe_axi_m0_aw_id )
	,	.gbe_axi_m0_aw_len( gbe_axi_m0_aw_len )
	,	.gbe_axi_m0_aw_lock( gbe_axi_m0_aw_lock )
	,	.gbe_axi_m0_aw_prot( gbe_axi_m0_aw_prot )
	,	.gbe_axi_m0_aw_ready( gbe_axi_m0_aw_ready )
	,	.gbe_axi_m0_aw_size( gbe_axi_m0_aw_size )
	,	.gbe_axi_m0_aw_valid( gbe_axi_m0_aw_valid )
	,	.gbe_axi_m0_b_id( gbe_axi_m0_b_id )
	,	.gbe_axi_m0_b_ready( gbe_axi_m0_b_ready )
	,	.gbe_axi_m0_b_resp( gbe_axi_m0_b_resp )
	,	.gbe_axi_m0_b_valid( gbe_axi_m0_b_valid )
	,	.gbe_axi_m0_r_data( gbe_axi_m0_r_data )
	,	.gbe_axi_m0_r_id( gbe_axi_m0_r_id )
	,	.gbe_axi_m0_r_last( gbe_axi_m0_r_last )
	,	.gbe_axi_m0_r_ready( gbe_axi_m0_r_ready )
	,	.gbe_axi_m0_r_resp( gbe_axi_m0_r_resp )
	,	.gbe_axi_m0_r_valid( gbe_axi_m0_r_valid )
	,	.gbe_axi_m0_w_data( gbe_axi_m0_w_data )
	,	.gbe_axi_m0_w_last( gbe_axi_m0_w_last )
	,	.gbe_axi_m0_w_ready( gbe_axi_m0_w_ready )
	,	.gbe_axi_m0_w_strb( gbe_axi_m0_w_strb )
	,	.gbe_axi_m0_w_valid( gbe_axi_m0_w_valid )
	,	.pufcc_axi_m0_ar_addr( pufcc_axi_m0_ar_addr )
	,	.pufcc_axi_m0_ar_burst( pufcc_axi_m0_ar_burst )
	,	.pufcc_axi_m0_ar_cache( pufcc_axi_m0_ar_cache )
	,	.pufcc_axi_m0_ar_id( pufcc_axi_m0_ar_id )
	,	.pufcc_axi_m0_ar_len( pufcc_axi_m0_ar_len )
	,	.pufcc_axi_m0_ar_lock( pufcc_axi_m0_ar_lock )
	,	.pufcc_axi_m0_ar_prot( pufcc_axi_m0_ar_prot )
	,	.pufcc_axi_m0_ar_ready( pufcc_axi_m0_ar_ready )
	,	.pufcc_axi_m0_ar_size( pufcc_axi_m0_ar_size )
	,	.pufcc_axi_m0_ar_valid( pufcc_axi_m0_ar_valid )
	,	.pufcc_axi_m0_aw_addr( pufcc_axi_m0_aw_addr )
	,	.pufcc_axi_m0_aw_burst( pufcc_axi_m0_aw_burst )
	,	.pufcc_axi_m0_aw_cache( pufcc_axi_m0_aw_cache )
	,	.pufcc_axi_m0_aw_id( pufcc_axi_m0_aw_id )
	,	.pufcc_axi_m0_aw_len( pufcc_axi_m0_aw_len )
	,	.pufcc_axi_m0_aw_lock( pufcc_axi_m0_aw_lock )
	,	.pufcc_axi_m0_aw_prot( pufcc_axi_m0_aw_prot )
	,	.pufcc_axi_m0_aw_ready( pufcc_axi_m0_aw_ready )
	,	.pufcc_axi_m0_aw_size( pufcc_axi_m0_aw_size )
	,	.pufcc_axi_m0_aw_valid( pufcc_axi_m0_aw_valid )
	,	.pufcc_axi_m0_b_id( pufcc_axi_m0_b_id )
	,	.pufcc_axi_m0_b_ready( pufcc_axi_m0_b_ready )
	,	.pufcc_axi_m0_b_resp( pufcc_axi_m0_b_resp )
	,	.pufcc_axi_m0_b_valid( pufcc_axi_m0_b_valid )
	,	.pufcc_axi_m0_r_data( pufcc_axi_m0_r_data )
	,	.pufcc_axi_m0_r_id( pufcc_axi_m0_r_id )
	,	.pufcc_axi_m0_r_last( pufcc_axi_m0_r_last )
	,	.pufcc_axi_m0_r_ready( pufcc_axi_m0_r_ready )
	,	.pufcc_axi_m0_r_resp( pufcc_axi_m0_r_resp )
	,	.pufcc_axi_m0_r_valid( pufcc_axi_m0_r_valid )
	,	.pufcc_axi_m0_w_data( pufcc_axi_m0_w_data )
	,	.pufcc_axi_m0_w_last( pufcc_axi_m0_w_last )
	,	.pufcc_axi_m0_w_ready( pufcc_axi_m0_w_ready )
	,	.pufcc_axi_m0_w_strb( pufcc_axi_m0_w_strb )
	,	.pufcc_axi_m0_w_valid( pufcc_axi_m0_w_valid )
	,	.rst_133_n( rst_133_n )
	,	.rst_266_n( rst_266_n )
	,	.rst_533_n( rst_533_n )
	,	.sram_axi_s0_ar_addr( sram_axi_s0_ar_addr )
	,	.sram_axi_s0_ar_burst( sram_axi_s0_ar_burst )
	,	.sram_axi_s0_ar_cache( sram_axi_s0_ar_cache )
	,	.sram_axi_s0_ar_id( sram_axi_s0_ar_id )
	,	.sram_axi_s0_ar_len( sram_axi_s0_ar_len )
	,	.sram_axi_s0_ar_lock( sram_axi_s0_ar_lock )
	,	.sram_axi_s0_ar_prot( sram_axi_s0_ar_prot )
	,	.sram_axi_s0_ar_ready( sram_axi_s0_ar_ready )
	,	.sram_axi_s0_ar_size( sram_axi_s0_ar_size )
	,	.sram_axi_s0_ar_valid( sram_axi_s0_ar_valid )
	,	.sram_axi_s0_aw_addr( sram_axi_s0_aw_addr )
	,	.sram_axi_s0_aw_burst( sram_axi_s0_aw_burst )
	,	.sram_axi_s0_aw_cache( sram_axi_s0_aw_cache )
	,	.sram_axi_s0_aw_id( sram_axi_s0_aw_id )
	,	.sram_axi_s0_aw_len( sram_axi_s0_aw_len )
	,	.sram_axi_s0_aw_lock( sram_axi_s0_aw_lock )
	,	.sram_axi_s0_aw_prot( sram_axi_s0_aw_prot )
	,	.sram_axi_s0_aw_ready( sram_axi_s0_aw_ready )
	,	.sram_axi_s0_aw_size( sram_axi_s0_aw_size )
	,	.sram_axi_s0_aw_valid( sram_axi_s0_aw_valid )
	,	.sram_axi_s0_b_id( sram_axi_s0_b_id )
	,	.sram_axi_s0_b_ready( sram_axi_s0_b_ready )
	,	.sram_axi_s0_b_resp( sram_axi_s0_b_resp )
	,	.sram_axi_s0_b_valid( sram_axi_s0_b_valid )
	,	.sram_axi_s0_r_data( sram_axi_s0_r_data )
	,	.sram_axi_s0_r_id( sram_axi_s0_r_id )
	,	.sram_axi_s0_r_last( sram_axi_s0_r_last )
	,	.sram_axi_s0_r_ready( sram_axi_s0_r_ready )
	,	.sram_axi_s0_r_resp( sram_axi_s0_r_resp )
	,	.sram_axi_s0_r_valid( sram_axi_s0_r_valid )
	,	.sram_axi_s0_w_data( sram_axi_s0_w_data )
	,	.sram_axi_s0_w_last( sram_axi_s0_w_last )
	,	.sram_axi_s0_w_ready( sram_axi_s0_w_ready )
	,	.sram_axi_s0_w_strb( sram_axi_s0_w_strb )
	,	.sram_axi_s0_w_valid( sram_axi_s0_w_valid )
	,	.sram_axi_s1_ar_addr( sram_axi_s1_ar_addr )
	,	.sram_axi_s1_ar_burst( sram_axi_s1_ar_burst )
	,	.sram_axi_s1_ar_cache( sram_axi_s1_ar_cache )
	,	.sram_axi_s1_ar_id( sram_axi_s1_ar_id )
	,	.sram_axi_s1_ar_len( sram_axi_s1_ar_len )
	,	.sram_axi_s1_ar_lock( sram_axi_s1_ar_lock )
	,	.sram_axi_s1_ar_prot( sram_axi_s1_ar_prot )
	,	.sram_axi_s1_ar_ready( sram_axi_s1_ar_ready )
	,	.sram_axi_s1_ar_size( sram_axi_s1_ar_size )
	,	.sram_axi_s1_ar_valid( sram_axi_s1_ar_valid )
	,	.sram_axi_s1_aw_addr( sram_axi_s1_aw_addr )
	,	.sram_axi_s1_aw_burst( sram_axi_s1_aw_burst )
	,	.sram_axi_s1_aw_cache( sram_axi_s1_aw_cache )
	,	.sram_axi_s1_aw_id( sram_axi_s1_aw_id )
	,	.sram_axi_s1_aw_len( sram_axi_s1_aw_len )
	,	.sram_axi_s1_aw_lock( sram_axi_s1_aw_lock )
	,	.sram_axi_s1_aw_prot( sram_axi_s1_aw_prot )
	,	.sram_axi_s1_aw_ready( sram_axi_s1_aw_ready )
	,	.sram_axi_s1_aw_size( sram_axi_s1_aw_size )
	,	.sram_axi_s1_aw_valid( sram_axi_s1_aw_valid )
	,	.sram_axi_s1_b_id( sram_axi_s1_b_id )
	,	.sram_axi_s1_b_ready( sram_axi_s1_b_ready )
	,	.sram_axi_s1_b_resp( sram_axi_s1_b_resp )
	,	.sram_axi_s1_b_valid( sram_axi_s1_b_valid )
	,	.sram_axi_s1_r_data( sram_axi_s1_r_data )
	,	.sram_axi_s1_r_id( sram_axi_s1_r_id )
	,	.sram_axi_s1_r_last( sram_axi_s1_r_last )
	,	.sram_axi_s1_r_ready( sram_axi_s1_r_ready )
	,	.sram_axi_s1_r_resp( sram_axi_s1_r_resp )
	,	.sram_axi_s1_r_valid( sram_axi_s1_r_valid )
	,	.sram_axi_s1_w_data( sram_axi_s1_w_data )
	,	.sram_axi_s1_w_last( sram_axi_s1_w_last )
	,	.sram_axi_s1_w_ready( sram_axi_s1_w_ready )
	,	.sram_axi_s1_w_strb( sram_axi_s1_w_strb )
	,	.sram_axi_s1_w_valid( sram_axi_s1_w_valid )
	,	.sram_axi_s2_ar_addr( sram_axi_s2_ar_addr )
	,	.sram_axi_s2_ar_burst( sram_axi_s2_ar_burst )
	,	.sram_axi_s2_ar_cache( sram_axi_s2_ar_cache )
	,	.sram_axi_s2_ar_id( sram_axi_s2_ar_id )
	,	.sram_axi_s2_ar_len( sram_axi_s2_ar_len )
	,	.sram_axi_s2_ar_lock( sram_axi_s2_ar_lock )
	,	.sram_axi_s2_ar_prot( sram_axi_s2_ar_prot )
	,	.sram_axi_s2_ar_ready( sram_axi_s2_ar_ready )
	,	.sram_axi_s2_ar_size( sram_axi_s2_ar_size )
	,	.sram_axi_s2_ar_valid( sram_axi_s2_ar_valid )
	,	.sram_axi_s2_aw_addr( sram_axi_s2_aw_addr )
	,	.sram_axi_s2_aw_burst( sram_axi_s2_aw_burst )
	,	.sram_axi_s2_aw_cache( sram_axi_s2_aw_cache )
	,	.sram_axi_s2_aw_id( sram_axi_s2_aw_id )
	,	.sram_axi_s2_aw_len( sram_axi_s2_aw_len )
	,	.sram_axi_s2_aw_lock( sram_axi_s2_aw_lock )
	,	.sram_axi_s2_aw_prot( sram_axi_s2_aw_prot )
	,	.sram_axi_s2_aw_ready( sram_axi_s2_aw_ready )
	,	.sram_axi_s2_aw_size( sram_axi_s2_aw_size )
	,	.sram_axi_s2_aw_valid( sram_axi_s2_aw_valid )
	,	.sram_axi_s2_b_id( sram_axi_s2_b_id )
	,	.sram_axi_s2_b_ready( sram_axi_s2_b_ready )
	,	.sram_axi_s2_b_resp( sram_axi_s2_b_resp )
	,	.sram_axi_s2_b_valid( sram_axi_s2_b_valid )
	,	.sram_axi_s2_r_data( sram_axi_s2_r_data )
	,	.sram_axi_s2_r_id( sram_axi_s2_r_id )
	,	.sram_axi_s2_r_last( sram_axi_s2_r_last )
	,	.sram_axi_s2_r_ready( sram_axi_s2_r_ready )
	,	.sram_axi_s2_r_resp( sram_axi_s2_r_resp )
	,	.sram_axi_s2_r_valid( sram_axi_s2_r_valid )
	,	.sram_axi_s2_w_data( sram_axi_s2_w_data )
	,	.sram_axi_s2_w_last( sram_axi_s2_w_last )
	,	.sram_axi_s2_w_ready( sram_axi_s2_w_ready )
	,	.sram_axi_s2_w_strb( sram_axi_s2_w_strb )
	,	.sram_axi_s2_w_valid( sram_axi_s2_w_valid )
	,	.sram_axi_s3_ar_addr( sram_axi_s3_ar_addr )
	,	.sram_axi_s3_ar_burst( sram_axi_s3_ar_burst )
	,	.sram_axi_s3_ar_cache( sram_axi_s3_ar_cache )
	,	.sram_axi_s3_ar_id( sram_axi_s3_ar_id )
	,	.sram_axi_s3_ar_len( sram_axi_s3_ar_len )
	,	.sram_axi_s3_ar_lock( sram_axi_s3_ar_lock )
	,	.sram_axi_s3_ar_prot( sram_axi_s3_ar_prot )
	,	.sram_axi_s3_ar_ready( sram_axi_s3_ar_ready )
	,	.sram_axi_s3_ar_size( sram_axi_s3_ar_size )
	,	.sram_axi_s3_ar_valid( sram_axi_s3_ar_valid )
	,	.sram_axi_s3_aw_addr( sram_axi_s3_aw_addr )
	,	.sram_axi_s3_aw_burst( sram_axi_s3_aw_burst )
	,	.sram_axi_s3_aw_cache( sram_axi_s3_aw_cache )
	,	.sram_axi_s3_aw_id( sram_axi_s3_aw_id )
	,	.sram_axi_s3_aw_len( sram_axi_s3_aw_len )
	,	.sram_axi_s3_aw_lock( sram_axi_s3_aw_lock )
	,	.sram_axi_s3_aw_prot( sram_axi_s3_aw_prot )
	,	.sram_axi_s3_aw_ready( sram_axi_s3_aw_ready )
	,	.sram_axi_s3_aw_size( sram_axi_s3_aw_size )
	,	.sram_axi_s3_aw_valid( sram_axi_s3_aw_valid )
	,	.sram_axi_s3_b_id( sram_axi_s3_b_id )
	,	.sram_axi_s3_b_ready( sram_axi_s3_b_ready )
	,	.sram_axi_s3_b_resp( sram_axi_s3_b_resp )
	,	.sram_axi_s3_b_valid( sram_axi_s3_b_valid )
	,	.sram_axi_s3_r_data( sram_axi_s3_r_data )
	,	.sram_axi_s3_r_id( sram_axi_s3_r_id )
	,	.sram_axi_s3_r_last( sram_axi_s3_r_last )
	,	.sram_axi_s3_r_ready( sram_axi_s3_r_ready )
	,	.sram_axi_s3_r_resp( sram_axi_s3_r_resp )
	,	.sram_axi_s3_r_valid( sram_axi_s3_r_valid )
	,	.sram_axi_s3_w_data( sram_axi_s3_w_data )
	,	.sram_axi_s3_w_last( sram_axi_s3_w_last )
	,	.sram_axi_s3_w_ready( sram_axi_s3_w_ready )
	,	.sram_axi_s3_w_strb( sram_axi_s3_w_strb )
	,	.sram_axi_s3_w_valid( sram_axi_s3_w_valid )
	,	.tm( tm )
	,	.usb_axi_m0_ar_addr( usb_axi_m0_ar_addr )
	,	.usb_axi_m0_ar_burst( usb_axi_m0_ar_burst )
	,	.usb_axi_m0_ar_cache( usb_axi_m0_ar_cache )
	,	.usb_axi_m0_ar_id( usb_axi_m0_ar_id )
	,	.usb_axi_m0_ar_len( usb_axi_m0_ar_len )
	,	.usb_axi_m0_ar_lock( usb_axi_m0_ar_lock )
	,	.usb_axi_m0_ar_prot( usb_axi_m0_ar_prot )
	,	.usb_axi_m0_ar_ready( usb_axi_m0_ar_ready )
	,	.usb_axi_m0_ar_size( usb_axi_m0_ar_size )
	,	.usb_axi_m0_ar_valid( usb_axi_m0_ar_valid )
	,	.usb_axi_m0_aw_addr( usb_axi_m0_aw_addr )
	,	.usb_axi_m0_aw_burst( usb_axi_m0_aw_burst )
	,	.usb_axi_m0_aw_cache( usb_axi_m0_aw_cache )
	,	.usb_axi_m0_aw_id( usb_axi_m0_aw_id )
	,	.usb_axi_m0_aw_len( usb_axi_m0_aw_len )
	,	.usb_axi_m0_aw_lock( usb_axi_m0_aw_lock )
	,	.usb_axi_m0_aw_prot( usb_axi_m0_aw_prot )
	,	.usb_axi_m0_aw_ready( usb_axi_m0_aw_ready )
	,	.usb_axi_m0_aw_size( usb_axi_m0_aw_size )
	,	.usb_axi_m0_aw_valid( usb_axi_m0_aw_valid )
	,	.usb_axi_m0_b_id( usb_axi_m0_b_id )
	,	.usb_axi_m0_b_ready( usb_axi_m0_b_ready )
	,	.usb_axi_m0_b_resp( usb_axi_m0_b_resp )
	,	.usb_axi_m0_b_valid( usb_axi_m0_b_valid )
	,	.usb_axi_m0_r_data( usb_axi_m0_r_data )
	,	.usb_axi_m0_r_id( usb_axi_m0_r_id )
	,	.usb_axi_m0_r_last( usb_axi_m0_r_last )
	,	.usb_axi_m0_r_ready( usb_axi_m0_r_ready )
	,	.usb_axi_m0_r_resp( usb_axi_m0_r_resp )
	,	.usb_axi_m0_r_valid( usb_axi_m0_r_valid )
	,	.usb_axi_m0_w_data( usb_axi_m0_w_data )
	,	.usb_axi_m0_w_last( usb_axi_m0_w_last )
	,	.usb_axi_m0_w_ready( usb_axi_m0_w_ready )
	,	.usb_axi_m0_w_strb( usb_axi_m0_w_strb )
	,	.usb_axi_m0_w_valid( usb_axi_m0_w_valid )
	);
	assign Int_DMA_apb_s0.PWData = DMA_apb_s0_pwdata;
	assign Int_BCPU_WDT.ReqUser = 256'b0;
	assign Int_BCPU_WDT.PSlvErr = BCPU_WDT_PSlvErr;
	anvu_uvmTestEnv_Top_z_S_R_U_Cm_U_e3d1b193 uUnit_e3d1b193(
		.In_Clk( clk_533 )
	,	.In_RstN( rst_133_n )
	,	.In_Tm( tm )
	,	.In_root_Clk( clk_133 )
	,	.root_Clk( u_b0c_Clk )
	,	.root_Clk_ClkS( u_b0c_Clk_ClkS )
	,	.root_Clk_En( u_b0c_Clk_En )
	,	.root_Clk_EnS( u_b0c_Clk_EnS )
	,	.root_Clk_RetRstN( u_b0c_Clk_RetRstN )
	,	.root_Clk_RstN( u_b0c_Clk_RstN )
	,	.root_Clk_Tm( u_b0c_Clk_Tm )
	,	.root_Pwr_Idle( 1'b0 )
	,	.root_Pwr_WakeUp( 1'b0 )
	);
	assign Int_BCPU_WDT.RstN = u_b0c_Clk_RstN;
	assign Int_BCPU_WDT.PProt = 3'b0;
	assign Int_BCPU_WDT.PAddr = { 4'b0 , BCPU_WDT_PAddr };
	assign Int_BCPU_WDT.PEnable = BCPU_WDT_PEnable;
	assign Int_BCPU_WDT.PStrb = BCPU_WDT_PWBe;
	assign Int_BCPU_WDT.PWDataInfo = 32'b0;
	assign Int_BCPU_WDT.PSel = BCPU_WDT_PSel;
	assign Int_PUFCC_apb_s0.RstN = u_b0c_Clk_RstN;
	assign Int_BCPU_WDT.PReady = BCPU_WDT_PReady;
	assign Int_BCPU_WDT.PRDataInfo = 32'b0;
	assign Int_BCPU_WDT.Clk = u_b0c_Clk;
	assign Int_BCPU_WDT.PRData = BCPU_WDT_PRData;
	assign Int_BCPU_WDT.PWrite = BCPU_WDT_PWrite;
	assign Int_BCPU_WDT.PWData = BCPU_WDT_PWData;
	assign Int_ACPU_WDT.ReqUser = 256'b0;
	assign Int_ACPU_WDT.PSlvErr = ACPU_WDT_PSlvErr;
	assign Int_SCU.ReqUser = 256'b0;
	assign Int_SCU.PSlvErr = SCU_PSlvErr;
	assign Int_SPI_ahb_s0.Clk = u_b0c_Clk;
	assign Int_SPI_ahb_s0.HWData = { 224'b0 , SPI_ahb_s0_hwdata };
	assign Int_SPI_ahb_s0.HAddr = { 8'b0 , SPI_ahb_s0_haddr };
	assign Int_SPI_ahb_s0.HRUser = 256'b0;
	assign Int_SPI_ahb_s0.HWrite = SPI_ahb_s0_hwrite;
	assign Int_SPI_ahb_s0.HTrans = SPI_ahb_s0_htrans;
	assign Int_SPI_ahb_s0.HExcl = 1'b0;
	assign Int_SPI_ahb_s0.HWBe = { 28'b0 , SPI_ahb_s0_hwbe };
	assign Int_SPI_ahb_s0.HMaster = 4'b0;
	assign Int_SPI_ahb_s0.HAUser = 256'b0;
	assign Int_SPI_ahb_s0.HResp = { 1'b0 , SPI_ahb_s0_hresp };
	assign Int_SPI_ahb_s0.RstN = u_b0c_Clk_RstN;
	assign Int_SCU.RstN = u_b0c_Clk_RstN;
	assign Int_SPI_ahb_s0.HProt = { 3'b0 , SPI_ahb_s0_hprot };
	assign Int_SPI_ahb_s0.HReady = SPI_ahb_s0_hready;
	assign Int_SPI_ahb_s0.HSize = SPI_ahb_s0_hsize;
	assign Int_SPI_ahb_s0.HExOkay = 1'b0;
	assign Int_SPI_ahb_s0.HRData = { 224'b0 , SPI_ahb_s0_hrdata };
	assign Int_SPI_ahb_s0.HBurst = SPI_ahb_s0_hburst;
	assign Int_SPI_ahb_s0.HSel = SPI_ahb_s0_hsel;
	assign Int_SPI_ahb_s0.HWUser = 256'b0;
	assign Int_SPI_ahb_s0.HNonSec = 1'b0;
	assign Int_SPI_ahb_s0.HBStrb = 32'b11111111111111111111111111111111;
	assign Int_SPI_ahb_s0.HReadySel = Int_SPI_ahb_s0.HReady;
	assign Int_SPI_ahb_s0.HMastLock = SPI_ahb_s0_hmastlock;
	assign Int_SPI_ahb_s0.ReqUser = 256'b0;
	assign Int_SCU.PProt = 3'b0;
	assign Int_SPI_mem_ahb.Clk = u_b0c_Clk;
	assign Int_SPI_mem_ahb.HWData = { 224'b0 , SPI_mem_ahb_hwdata };
	assign Int_SPI_mem_ahb.HAddr = { 8'b0 , SPI_mem_ahb_haddr };
	assign Int_SPI_mem_ahb.HRUser = 256'b0;
	assign Int_SPI_mem_ahb.HWrite = SPI_mem_ahb_hwrite;
	assign Int_SPI_mem_ahb.HTrans = SPI_mem_ahb_htrans;
	assign Int_SPI_mem_ahb.HExcl = 1'b0;
	assign Int_SPI_mem_ahb.HWBe = { 28'b0 , SPI_mem_ahb_hwbe };
	assign Int_SPI_mem_ahb.HMaster = 4'b0;
	assign Int_SPI_mem_ahb.HAUser = 256'b0;
	assign Int_SPI_mem_ahb.HResp = { 1'b0 , SPI_mem_ahb_hresp };
	assign Int_SPI_mem_ahb.RstN = u_b0c_Clk_RstN;
	assign Int_SPI_mem_ahb.HProt = { 3'b0 , SPI_mem_ahb_hprot };
	assign Int_SPI_mem_ahb.HReady = SPI_mem_ahb_hready;
	assign Int_SPI_mem_ahb.HSize = SPI_mem_ahb_hsize;
	assign Int_SPI_mem_ahb.HExOkay = 1'b0;
	assign Int_SPI_mem_ahb.HRData = { 224'b0 , SPI_mem_ahb_hrdata };
	assign Int_PUFCC_apb_s0.PProt = PUFCC_apb_s0_PProt;
	assign Int_SPI_mem_ahb.HBurst = SPI_mem_ahb_hburst;
	assign Int_SPI_mem_ahb.HSel = SPI_mem_ahb_hsel;
	assign Int_SPI_mem_ahb.HWUser = 256'b0;
	assign Int_SPI_mem_ahb.HNonSec = 1'b0;
	assign Int_SPI_mem_ahb.HBStrb = 32'b11111111111111111111111111111111;
	assign Int_SPI_mem_ahb.HReadySel = Int_SPI_mem_ahb.HReady;
	assign Int_SPI_mem_ahb.HMastLock = SPI_mem_ahb_hmastlock;
	assign Int_SPI_mem_ahb.ReqUser = 256'b0;
	assign Int_SCU.PAddr = { 4'b0 , SCU_PAddr };
	assign Int_USB_axi_s0.ArBar = 2'b0;
	assign Int_USB_axi_s0.ArAddr = { 32'b0 , USB_axi_s0_ar_addr };
	assign Int_USB_axi_s0.AwBar = 2'b0;
	assign Int_USB_axi_s0.Clk = u_b0c_Clk;
	assign Int_USB_axi_s0.ArBurst = 2'b01;
	assign Int_USB_axi_s0.AwLock = 2'b0;
	assign Int_USB_axi_s0.RResp = USB_axi_s0_r_resp;
	assign Int_USB_axi_s0.WReady = USB_axi_s0_w_ready;
	assign Int_USB_axi_s0.ArLen = 8'b0;
	assign Int_USB_axi_s0.ArId = 16'b0;
	assign Int_USB_axi_s0.WStrb = { 124'b0 , USB_axi_s0_w_strb };
	assign Int_SCU.PEnable = SCU_PEnable;
	assign Int_USB_axi_s0.RId = 16'b0;
	assign Int_USB_axi_s0.AwId = 16'b0;
	assign Int_USB_axi_s0.RReady = USB_axi_s0_r_ready;
	assign Int_USB_axi_s0.ArLock = 2'b0;
	assign Int_USB_axi_s0.WLast = 1'b1;
	assign Int_USB_axi_s0.ArReady = USB_axi_s0_ar_ready;
	assign Int_USB_axi_s0.WValid = USB_axi_s0_w_valid;
	assign Int_USB_axi_s0.BReady = USB_axi_s0_b_ready;
	assign Int_USB_axi_s0.AwReady = USB_axi_s0_aw_ready;
	assign Int_FCB_apb_s0.ReqUser = 256'b0;
	assign Int_USB_axi_s0.RstN = u_b0c_Clk_RstN;
	assign Int_USB_axi_s0.BId = 16'b0;
	assign Int_USB_axi_s0.ArSize = 4'b0010;
	assign Int_USB_axi_s0.AwAddr = { 32'b0 , USB_axi_s0_aw_addr };
	assign Int_USB_axi_s0.ArDomain = 2'b0;
	assign Int_SCU.PStrb = SCU_PWBe;
	assign Int_USB_axi_s0.BUser = 256'b0;
	assign Int_USB_axi_s0.AwSize = 4'b0010;
	assign Int_USB_axi_s0.ArQos = 4'b0;
	assign Int_USB_axi_s0.AwDomain = 2'b0;
	assign Int_ACPU_WDT.RstN = u_b0c_Clk_RstN;
	assign Int_USB_axi_s0.WData = { 992'b0 , USB_axi_s0_w_data };
	assign Int_USB_axi_s0.AwLen = 8'b0;
	assign Int_USB_axi_s0.RValid = USB_axi_s0_r_valid;
	assign Int_USB_axi_s0.RData = { 992'b0 , USB_axi_s0_r_data };
	assign Int_USB_axi_s0.AwBurst = 2'b01;
	assign Int_USB_axi_s0.WId = 16'b0;
	assign Int_USB_axi_s0.BResp = USB_axi_s0_b_resp;
	assign Int_SCU.PWDataInfo = 32'b0;
	assign Int_USB_axi_s0.AwCache = 4'b0;
	assign Int_USB_axi_s0.AwSnoop = 3'b0;
	assign Int_USB_axi_s0.ArRegion = 4'b0;
	assign Int_USB_axi_s0.AwUser = 256'b0;
	assign Int_USB_axi_s0.AwAtop = 6'b0;
	assign Int_USB_axi_s0.ArUser = 256'b0;
	assign Int_USB_axi_s0.ArProt = USB_axi_s0_ar_prot;
	assign Int_USB_axi_s0.ArCache = 4'b0;
	assign Int_USB_axi_s0.RLast = 1'b1;
	assign Int_USB_axi_s0.AwValid = USB_axi_s0_aw_valid;
	assign Int_USB_axi_s0.AwQos = 4'b0;
	assign Int_USB_axi_s0.ArValid = USB_axi_s0_ar_valid;
	assign Int_USB_axi_s0.AwProt = USB_axi_s0_aw_prot;
	assign Int_USB_axi_s0.RUser = 256'b0;
	assign Int_USB_axi_s0.ArSnoop = 4'b0;
	assign Int_USB_axi_s0.AwRegion = 4'b0;
	assign Int_USB_axi_s0.BValid = USB_axi_s0_b_valid;
	assign Int_SCU.PSel = SCU_PSel;
	assign Int_FCB_apb_s0.PSlvErr = FCB_apb_s0_pslverr;
	assign Int_SCU.PReady = SCU_PReady;
	assign Int_acpu_axi_m0.ArBar = 2'b0;
	assign Int_acpu_axi_m0.ArAddr = { 32'b0 , acpu_axi_m0_ar_addr };
	assign Int_acpu_axi_m0.AwBar = 2'b0;
	anvu_uvmTestEnv_Top_z_S_R_U_Cm_U_398317f8 uUnit_398317f8(
		.In_Clk( clk_533 )
	,	.In_RstN( rst_533_n )
	,	.In_Tm( tm )
	,	.root_Clk( u_e741_Clk )
	,	.root_Clk_ClkS( u_e741_Clk_ClkS )
	,	.root_Clk_En( u_e741_Clk_En )
	,	.root_Clk_EnS( u_e741_Clk_EnS )
	,	.root_Clk_RetRstN( u_e741_Clk_RetRstN )
	,	.root_Clk_RstN( u_e741_Clk_RstN )
	,	.root_Clk_Tm( u_e741_Clk_Tm )
	,	.root_Pwr_Idle( 1'b0 )
	,	.root_Pwr_WakeUp( 1'b0 )
	);
	assign Int_acpu_axi_m0.Clk = u_e741_Clk;
	assign Int_acpu_axi_m0.ArBurst = acpu_axi_m0_ar_burst;
	assign Int_acpu_axi_m0.AwLock = { 1'b0 , acpu_axi_m0_aw_lock };
	assign Int_SCU.PRDataInfo = 32'b0;
	assign Int_acpu_axi_m0.RResp = acpu_axi_m0_r_resp;
	assign Int_acpu_axi_m0.WReady = acpu_axi_m0_w_ready;
	assign Int_acpu_axi_m0.ArLen = { 5'b0 , acpu_axi_m0_ar_len };
	assign Int_acpu_axi_m0.ArId = { 12'b0 , acpu_axi_m0_ar_id };
	assign Int_acpu_axi_m0.WStrb = { 120'b0 , acpu_axi_m0_w_strb };
	assign Int_acpu_axi_m0.RId = { 12'b0 , acpu_axi_m0_r_id };
	assign Int_acpu_axi_m0.AwId = { 12'b0 , acpu_axi_m0_aw_id };
	assign Int_acpu_axi_m0.RReady = acpu_axi_m0_r_ready;
	assign Int_acpu_axi_m0.ArLock = { 1'b0 , acpu_axi_m0_ar_lock };
	assign Int_acpu_axi_m0.WLast = acpu_axi_m0_w_last;
	assign Int_acpu_axi_m0.ArReady = acpu_axi_m0_ar_ready;
	assign Int_acpu_axi_m0.WValid = acpu_axi_m0_w_valid;
	assign Int_acpu_axi_m0.BReady = acpu_axi_m0_b_ready;
	assign Int_FCB_apb_s0.RstN = u_b0c_Clk_RstN;
	assign Int_acpu_axi_m0.AwReady = acpu_axi_m0_aw_ready;
	assign Int_acpu_axi_m0.RstN = u_e741_Clk_RstN;
	assign Int_acpu_axi_m0.BId = { 12'b0 , acpu_axi_m0_b_id };
	assign Int_acpu_axi_m0.ArSize = { 1'b0 , acpu_axi_m0_ar_size };
	assign Int_acpu_axi_m0.AwAddr = { 32'b0 , acpu_axi_m0_aw_addr };
	assign Int_acpu_axi_m0.ArDomain = 2'b0;
	assign Int_acpu_axi_m0.BUser = 256'b0;
	assign Int_SCU.Clk = u_b0c_Clk;
	assign Int_acpu_axi_m0.AwSize = { 1'b0 , acpu_axi_m0_aw_size };
	assign Int_acpu_axi_m0.ArQos = 4'b0;
	assign Int_acpu_axi_m0.AwDomain = 2'b0;
	assign Int_acpu_axi_m0.WData = { 960'b0 , acpu_axi_m0_w_data };
	assign Int_acpu_axi_m0.AwLen = { 5'b0 , acpu_axi_m0_aw_len };
	assign Int_acpu_axi_m0.RValid = acpu_axi_m0_r_valid;
	assign Int_acpu_axi_m0.RData = { 960'b0 , acpu_axi_m0_r_data };
	assign Int_acpu_axi_m0.AwBurst = acpu_axi_m0_aw_burst;
	assign Int_acpu_axi_m0.WId = 16'b0;
	assign Int_acpu_axi_m0.BResp = acpu_axi_m0_b_resp;
	assign Int_acpu_axi_m0.AwCache = acpu_axi_m0_aw_cache;
	assign Int_acpu_axi_m0.AwSnoop = 3'b0;
	assign Int_acpu_axi_m0.ArRegion = 4'b0;
	assign Int_acpu_axi_m0.AwUser = 256'b0;
	assign Int_SCU.PRData = SCU_PRData;
	assign Int_acpu_axi_m0.AwAtop = 6'b0;
	assign Int_acpu_axi_m0.ArUser = 256'b0;
	assign Int_acpu_axi_m0.ArProt = acpu_axi_m0_ar_prot;
	assign Int_acpu_axi_m0.ArCache = acpu_axi_m0_ar_cache;
	assign Int_acpu_axi_m0.RLast = acpu_axi_m0_r_last;
	assign Int_acpu_axi_m0.AwValid = acpu_axi_m0_aw_valid;
	assign Int_acpu_axi_m0.AwQos = 4'b0;
	assign Int_acpu_axi_m0.ArValid = acpu_axi_m0_ar_valid;
	assign Int_acpu_axi_m0.AwProt = acpu_axi_m0_aw_prot;
	assign Int_acpu_axi_m0.RUser = 256'b0;
	assign Int_acpu_axi_m0.ArSnoop = 4'b0;
	assign Int_acpu_axi_m0.AwRegion = 4'b0;
	assign Int_acpu_axi_m0.BValid = acpu_axi_m0_b_valid;
	assign Int_SCU.PWrite = SCU_PWrite;
	assign Int_FCB_apb_s0.PProt = 3'b0;
	assign Int_ACPU_WDT.PProt = 3'b0;
	assign Int_SCU.PWData = SCU_PWData;
	assign Int_arm_axi_m0.ArBar = 2'b0;
	assign Int_arm_axi_m0.ArAddr = { 32'b0 , arm_axi_m0_ar_addr };
	assign Int_arm_axi_m0.AwBar = 2'b0;
	assign Int_arm_axi_m0.Clk = u_e741_Clk;
	assign Int_arm_axi_m0.ArBurst = arm_axi_m0_ar_burst;
	assign Int_arm_axi_m0.AwLock = { 1'b0 , arm_axi_m0_aw_lock };
	assign Int_arm_axi_m0.RResp = arm_axi_m0_r_resp;
	assign Int_arm_axi_m0.WReady = arm_axi_m0_w_ready;
	assign Int_arm_axi_m0.ArLen = { 5'b0 , arm_axi_m0_ar_len };
	assign Int_arm_axi_m0.ArId = { 12'b0 , arm_axi_m0_ar_id };
	assign Int_arm_axi_m0.WStrb = { 120'b0 , arm_axi_m0_w_strb };
	assign Int_arm_axi_m0.RId = { 12'b0 , arm_axi_m0_r_id };
	assign Int_arm_axi_m0.AwId = { 12'b0 , arm_axi_m0_aw_id };
	assign Int_arm_axi_m0.RReady = arm_axi_m0_r_ready;
	assign Int_arm_axi_m0.ArLock = { 1'b0 , arm_axi_m0_ar_lock };
	assign Int_arm_axi_m0.WLast = arm_axi_m0_w_last;
	assign Int_arm_axi_m0.ArReady = arm_axi_m0_ar_ready;
	assign Int_arm_axi_m0.WValid = arm_axi_m0_w_valid;
	assign Int_arm_axi_m0.BReady = arm_axi_m0_b_ready;
	assign Int_arm_axi_m0.AwReady = arm_axi_m0_aw_ready;
	assign Int_arm_axi_m0.RstN = u_e741_Clk_RstN;
	assign Int_arm_axi_m0.BId = { 12'b0 , arm_axi_m0_b_id };
	assign Int_arm_axi_m0.ArSize = { 1'b0 , arm_axi_m0_ar_size };
	assign Int_arm_axi_m0.AwAddr = { 32'b0 , arm_axi_m0_aw_addr };
	assign Int_arm_axi_m0.ArDomain = 2'b0;
	assign Int_arm_axi_m0.BUser = 256'b0;
	assign Int_arm_axi_m0.AwSize = { 1'b0 , arm_axi_m0_aw_size };
	assign Int_arm_axi_m0.ArQos = 4'b0;
	assign Int_arm_axi_m0.AwDomain = 2'b0;
	assign Int_arm_axi_m0.WData = { 960'b0 , arm_axi_m0_w_data };
	assign Int_arm_axi_m0.AwLen = { 5'b0 , arm_axi_m0_aw_len };
	assign Int_arm_axi_m0.RValid = arm_axi_m0_r_valid;
	assign Int_arm_axi_m0.RData = { 960'b0 , arm_axi_m0_r_data };
	assign Int_arm_axi_m0.AwBurst = arm_axi_m0_aw_burst;
	assign Int_arm_axi_m0.WId = 16'b0;
	assign Int_arm_axi_m0.BResp = arm_axi_m0_b_resp;
	assign Int_arm_axi_m0.AwCache = arm_axi_m0_aw_cache;
	assign Int_arm_axi_m0.AwSnoop = 3'b0;
	assign Int_arm_axi_m0.ArRegion = 4'b0;
	assign Int_arm_axi_m0.AwUser = 256'b0;
	assign Int_arm_axi_m0.AwAtop = 6'b0;
	assign Int_arm_axi_m0.ArUser = 256'b0;
	assign Int_arm_axi_m0.ArProt = arm_axi_m0_ar_prot;
	assign Int_arm_axi_m0.ArCache = arm_axi_m0_ar_cache;
	assign Int_arm_axi_m0.RLast = arm_axi_m0_r_last;
	assign Int_arm_axi_m0.AwValid = arm_axi_m0_aw_valid;
	assign Int_arm_axi_m0.AwQos = 4'b0;
	assign Int_arm_axi_m0.ArValid = arm_axi_m0_ar_valid;
	assign Int_arm_axi_m0.AwProt = arm_axi_m0_aw_prot;
	assign Int_arm_axi_m0.RUser = 256'b0;
	assign Int_arm_axi_m0.ArSnoop = 4'b0;
	assign Int_arm_axi_m0.AwRegion = 4'b0;
	assign Int_arm_axi_m0.BValid = arm_axi_m0_b_valid;
	anvu_uvmTestEnv_Top_z_S_R_U_Cm_U_83ff00b5 uUnit_83ff00b5(
		.In_Clk( clk_533 )
	,	.In_RstN( rst_266_n )
	,	.In_Tm( tm )
	,	.In_root_Clk( clk_266 )
	,	.root_Clk( u_991a_Clk )
	,	.root_Clk_ClkS( u_991a_Clk_ClkS )
	,	.root_Clk_En( u_991a_Clk_En )
	,	.root_Clk_EnS( u_991a_Clk_EnS )
	,	.root_Clk_RetRstN( u_991a_Clk_RetRstN )
	,	.root_Clk_RstN( u_991a_Clk_RstN )
	,	.root_Clk_Tm( u_991a_Clk_Tm )
	,	.root_Pwr_Idle( 1'b0 )
	,	.root_Pwr_WakeUp( 1'b0 )
	);
	assign Int_bcpu_ahb_m0.Clk = u_991a_Clk;
	assign Int_bcpu_ahb_m0.HWData = { 224'b0 , bcpu_ahb_m0_hwdata };
	assign Int_bcpu_ahb_m0.HAddr = { 8'b0 , bcpu_ahb_m0_haddr };
	assign Int_bcpu_ahb_m0.HRUser = 256'b0;
	assign Int_bcpu_ahb_m0.HWrite = bcpu_ahb_m0_hwrite;
	assign Int_bcpu_ahb_m0.HTrans = bcpu_ahb_m0_htrans;
	assign Int_bcpu_ahb_m0.HExcl = 1'b0;
	assign Int_bcpu_ahb_m0.HWBe = { 28'b0 , bcpu_ahb_m0_hwbe };
	assign Int_bcpu_ahb_m0.HMaster = 4'b0;
	assign Int_bcpu_ahb_m0.HAUser = 256'b0;
	assign Int_bcpu_ahb_m0.HResp = { 1'b0 , bcpu_ahb_m0_hresp };
	assign Int_bcpu_ahb_m0.RstN = u_991a_Clk_RstN;
	assign Int_bcpu_ahb_m0.HProt = { 3'b0 , bcpu_ahb_m0_hprot };
	assign Int_FCB_apb_s0.PAddr = { 4'b0 , FCB_apb_s0_paddr };
	assign Int_bcpu_ahb_m0.HReady = bcpu_ahb_m0_hready;
	assign Int_bcpu_ahb_m0.HSize = bcpu_ahb_m0_hsize;
	assign Int_bcpu_ahb_m0.HExOkay = 1'b0;
	assign Int_bcpu_ahb_m0.HRData = { 224'b0 , bcpu_ahb_m0_hrdata };
	assign Int_bcpu_ahb_m0.HBurst = bcpu_ahb_m0_hburst;
	assign Int_bcpu_ahb_m0.HSel = bcpu_ahb_m0_hsel;
	assign Int_bcpu_ahb_m0.HWUser = 256'b0;
	assign Int_bcpu_ahb_m0.HNonSec = 1'b0;
	assign Int_bcpu_ahb_m0.HBStrb = 32'b11111111111111111111111111111111;
	assign Int_bcpu_ahb_m0.HReadySel = Int_bcpu_ahb_m0.HReady;
	assign Int_bcpu_ahb_m0.HMastLock = bcpu_ahb_m0_hmastlock;
	assign Int_bcpu_ahb_m0.ReqUser = 256'b0;
	assign Int_FCB_apb_s0.PEnable = FCB_apb_s0_penable;
	assign Int_ddr_axi_s0.ArBar = 2'b0;
	assign Int_ddr_axi_s0.ArAddr = { 32'b0 , ddr_axi_s0_ar_addr };
	assign Int_ddr_axi_s0.AwBar = 2'b0;
	assign Int_ddr_axi_s0.Clk = u_e741_Clk;
	assign Int_ddr_axi_s0.ArBurst = ddr_axi_s0_ar_burst;
	assign Int_ddr_axi_s0.AwLock = { 1'b0 , ddr_axi_s0_aw_lock };
	assign Int_ddr_axi_s0.RResp = ddr_axi_s0_r_resp;
	assign Int_ddr_axi_s0.WReady = ddr_axi_s0_w_ready;
	assign Int_ddr_axi_s0.ArLen = { 5'b0 , ddr_axi_s0_ar_len };
	assign Int_ddr_axi_s0.ArId = { 12'b0 , ddr_axi_s0_ar_id };
	assign Int_ddr_axi_s0.WStrb = { 112'b0 , ddr_axi_s0_w_strb };
	assign Int_ddr_axi_s0.RId = { 12'b0 , ddr_axi_s0_r_id };
	assign Int_ddr_axi_s0.AwId = { 12'b0 , ddr_axi_s0_aw_id };
	assign Int_ddr_axi_s0.RReady = ddr_axi_s0_r_ready;
	assign Int_ddr_axi_s0.ArLock = { 1'b0 , ddr_axi_s0_ar_lock };
	assign Int_ddr_axi_s0.WLast = ddr_axi_s0_w_last;
	assign Int_ddr_axi_s0.ArReady = ddr_axi_s0_ar_ready;
	assign Int_ddr_axi_s0.WValid = ddr_axi_s0_w_valid;
	assign Int_ddr_axi_s0.BReady = ddr_axi_s0_b_ready;
	assign Int_ddr_axi_s0.AwReady = ddr_axi_s0_aw_ready;
	assign Int_ddr_axi_s0.RstN = u_e741_Clk_RstN;
	assign Int_ddr_axi_s0.BId = { 12'b0 , ddr_axi_s0_b_id };
	assign Int_ddr_axi_s0.ArSize = { 1'b0 , ddr_axi_s0_ar_size };
	assign Int_ddr_axi_s0.AwAddr = { 32'b0 , ddr_axi_s0_aw_addr };
	assign Int_ddr_axi_s0.ArDomain = 2'b0;
	assign Int_ddr_axi_s0.BUser = 256'b0;
	assign Int_ddr_axi_s0.AwSize = { 1'b0 , ddr_axi_s0_aw_size };
	assign Int_ddr_axi_s0.ArQos = 4'b0;
	assign Int_ddr_axi_s0.AwDomain = 2'b0;
	assign Int_ddr_axi_s0.WData = { 896'b0 , ddr_axi_s0_w_data };
	assign Int_ddr_axi_s0.AwLen = { 5'b0 , ddr_axi_s0_aw_len };
	assign Int_ddr_axi_s0.RValid = ddr_axi_s0_r_valid;
	assign Int_ddr_axi_s0.RData = { 896'b0 , ddr_axi_s0_r_data };
	assign Int_ddr_axi_s0.AwBurst = ddr_axi_s0_aw_burst;
	assign Int_ddr_axi_s0.WId = 16'b0;
	assign Int_ddr_axi_s0.BResp = ddr_axi_s0_b_resp;
	assign Int_ddr_axi_s0.AwCache = ddr_axi_s0_aw_cache;
	assign Int_ddr_axi_s0.AwSnoop = 3'b0;
	assign Int_ddr_axi_s0.ArRegion = 4'b0;
	assign Int_ddr_axi_s0.AwUser = 256'b0;
	assign Int_ddr_axi_s0.AwAtop = 6'b0;
	assign Int_ddr_axi_s0.ArUser = 256'b0;
	assign Int_ddr_axi_s0.ArProt = ddr_axi_s0_ar_prot;
	assign Int_ddr_axi_s0.ArCache = ddr_axi_s0_ar_cache;
	assign Int_ddr_axi_s0.RLast = ddr_axi_s0_r_last;
	assign Int_ddr_axi_s0.AwValid = ddr_axi_s0_aw_valid;
	assign Int_ddr_axi_s0.AwQos = 4'b0;
	assign Int_ddr_axi_s0.ArValid = ddr_axi_s0_ar_valid;
	assign Int_ddr_axi_s0.AwProt = ddr_axi_s0_aw_prot;
	assign Int_FCB_apb_s0.PStrb = FCB_apb_s0_pwbe;
	assign Int_ddr_axi_s0.RUser = 256'b0;
	assign Int_ddr_axi_s0.ArSnoop = 4'b0;
	assign Int_ddr_axi_s0.AwRegion = 4'b0;
	assign Int_ddr_axi_s0.BValid = ddr_axi_s0_b_valid;
	assign Int_ddr_axi_s1.ArBar = 2'b0;
	assign Int_ddr_axi_s1.ArAddr = { 32'b0 , ddr_axi_s1_ar_addr };
	assign Int_ddr_axi_s1.AwBar = 2'b0;
	assign Int_ddr_axi_s1.Clk = u_e741_Clk;
	assign Int_ddr_axi_s1.ArBurst = ddr_axi_s1_ar_burst;
	assign Int_ddr_axi_s1.AwLock = { 1'b0 , ddr_axi_s1_aw_lock };
	assign Int_ddr_axi_s1.RResp = ddr_axi_s1_r_resp;
	assign Int_FCB_apb_s0.PWDataInfo = 32'b0;
	assign Int_ddr_axi_s1.WReady = ddr_axi_s1_w_ready;
	assign Int_ddr_axi_s1.ArLen = { 5'b0 , ddr_axi_s1_ar_len };
	assign Int_ddr_axi_s1.ArId = { 12'b0 , ddr_axi_s1_ar_id };
	assign Int_ddr_axi_s1.WStrb = { 112'b0 , ddr_axi_s1_w_strb };
	assign Int_ddr_axi_s1.RId = { 12'b0 , ddr_axi_s1_r_id };
	assign Int_ddr_axi_s1.AwId = { 12'b0 , ddr_axi_s1_aw_id };
	assign Int_ddr_axi_s1.RReady = ddr_axi_s1_r_ready;
	assign Int_ddr_axi_s1.ArLock = { 1'b0 , ddr_axi_s1_ar_lock };
	assign Int_ddr_axi_s1.WLast = ddr_axi_s1_w_last;
	assign Int_ddr_axi_s1.ArReady = ddr_axi_s1_ar_ready;
	assign Int_ddr_axi_s1.WValid = ddr_axi_s1_w_valid;
	assign Int_ddr_axi_s1.BReady = ddr_axi_s1_b_ready;
	assign Int_ddr_axi_s1.AwReady = ddr_axi_s1_aw_ready;
	assign Int_ddr_axi_s1.RstN = u_e741_Clk_RstN;
	assign Int_ddr_axi_s1.BId = { 12'b0 , ddr_axi_s1_b_id };
	assign Int_ddr_axi_s1.ArSize = { 1'b0 , ddr_axi_s1_ar_size };
	assign Int_ddr_axi_s1.AwAddr = { 32'b0 , ddr_axi_s1_aw_addr };
	assign Int_ddr_axi_s1.ArDomain = 2'b0;
	assign Int_ddr_axi_s1.BUser = 256'b0;
	assign Int_ddr_axi_s1.AwSize = { 1'b0 , ddr_axi_s1_aw_size };
	assign Int_ddr_axi_s1.ArQos = 4'b0;
	assign Int_ddr_axi_s1.AwDomain = 2'b0;
	assign Int_ddr_axi_s1.WData = { 896'b0 , ddr_axi_s1_w_data };
	assign Int_ddr_axi_s1.AwLen = { 5'b0 , ddr_axi_s1_aw_len };
	assign Int_ddr_axi_s1.RValid = ddr_axi_s1_r_valid;
	assign Int_ddr_axi_s1.RData = { 896'b0 , ddr_axi_s1_r_data };
	assign Int_ddr_axi_s1.AwBurst = ddr_axi_s1_aw_burst;
	assign Int_ddr_axi_s1.WId = 16'b0;
	assign Int_ddr_axi_s1.BResp = ddr_axi_s1_b_resp;
	assign Int_ddr_axi_s1.AwCache = ddr_axi_s1_aw_cache;
	assign Int_ddr_axi_s1.AwSnoop = 3'b0;
	assign Int_ddr_axi_s1.ArRegion = 4'b0;
	assign Int_ddr_axi_s1.AwUser = 256'b0;
	assign Int_ddr_axi_s1.AwAtop = 6'b0;
	assign Int_ddr_axi_s1.ArUser = 256'b0;
	assign Int_ddr_axi_s1.ArProt = ddr_axi_s1_ar_prot;
	assign Int_ddr_axi_s1.ArCache = ddr_axi_s1_ar_cache;
	assign Int_ddr_axi_s1.RLast = ddr_axi_s1_r_last;
	assign Int_ddr_axi_s1.AwValid = ddr_axi_s1_aw_valid;
	assign Int_ddr_axi_s1.AwQos = 4'b0;
	assign Int_ddr_axi_s1.ArValid = ddr_axi_s1_ar_valid;
	assign Int_ddr_axi_s1.AwProt = ddr_axi_s1_aw_prot;
	assign Int_ddr_axi_s1.RUser = 256'b0;
	assign Int_PUFCC_apb_s0.PAddr = { 4'b0 , PUFCC_apb_s0_PAddr };
	assign Int_ddr_axi_s1.ArSnoop = 4'b0;
	assign Int_ddr_axi_s1.AwRegion = 4'b0;
	assign Int_ddr_axi_s1.BValid = ddr_axi_s1_b_valid;
	assign Int_FCB_apb_s0.PSel = FCB_apb_s0_psel;
	assign Int_ddr_axi_s2.ArBar = 2'b0;
	assign Int_GPIO_apb_s0.ReqUser = 256'b0;
	assign Int_ddr_axi_s2.ArAddr = { 32'b0 , ddr_axi_s2_ar_addr };
	assign Int_ddr_axi_s2.AwBar = 2'b0;
	assign Int_ddr_axi_s2.Clk = u_e741_Clk;
	assign Int_ddr_axi_s2.ArBurst = ddr_axi_s2_ar_burst;
	assign Int_ddr_axi_s2.AwLock = { 1'b0 , ddr_axi_s2_aw_lock };
	assign Int_ddr_axi_s2.RResp = ddr_axi_s2_r_resp;
	assign Int_ddr_axi_s2.WReady = ddr_axi_s2_w_ready;
	assign Int_ddr_axi_s2.ArLen = { 5'b0 , ddr_axi_s2_ar_len };
	assign Int_ddr_axi_s2.ArId = { 12'b0 , ddr_axi_s2_ar_id };
	assign Int_ddr_axi_s2.WStrb = { 112'b0 , ddr_axi_s2_w_strb };
	assign Int_ddr_axi_s2.RId = { 12'b0 , ddr_axi_s2_r_id };
	assign Int_ddr_axi_s2.AwId = { 12'b0 , ddr_axi_s2_aw_id };
	assign Int_ddr_axi_s2.RReady = ddr_axi_s2_r_ready;
	assign Int_FCB_apb_s0.PReady = FCB_apb_s0_pready;
	assign Int_ddr_axi_s2.ArLock = { 1'b0 , ddr_axi_s2_ar_lock };
	assign Int_ddr_axi_s2.WLast = ddr_axi_s2_w_last;
	assign Int_ddr_axi_s2.ArReady = ddr_axi_s2_ar_ready;
	assign Int_ddr_axi_s2.WValid = ddr_axi_s2_w_valid;
	assign Int_ddr_axi_s2.BReady = ddr_axi_s2_b_ready;
	assign Int_ddr_axi_s2.AwReady = ddr_axi_s2_aw_ready;
	assign Int_ddr_axi_s2.RstN = u_e741_Clk_RstN;
	assign Int_GPIO_apb_s0.PSlvErr = GPIO_apb_s0_pslverr;
	assign Int_ddr_axi_s2.BId = { 12'b0 , ddr_axi_s2_b_id };
	assign Int_ddr_axi_s2.ArSize = { 1'b0 , ddr_axi_s2_ar_size };
	assign Int_ddr_axi_s2.AwAddr = { 32'b0 , ddr_axi_s2_aw_addr };
	assign Int_ddr_axi_s2.ArDomain = 2'b0;
	assign Int_ddr_axi_s2.BUser = 256'b0;
	assign Int_ddr_axi_s2.AwSize = { 1'b0 , ddr_axi_s2_aw_size };
	assign Int_ddr_axi_s2.ArQos = 4'b0;
	assign Int_ddr_axi_s2.AwDomain = 2'b0;
	assign Int_ddr_axi_s2.WData = { 896'b0 , ddr_axi_s2_w_data };
	assign Int_ddr_axi_s2.AwLen = { 5'b0 , ddr_axi_s2_aw_len };
	assign Int_ddr_axi_s2.RValid = ddr_axi_s2_r_valid;
	assign Int_ddr_axi_s2.RData = { 896'b0 , ddr_axi_s2_r_data };
	assign Int_ddr_axi_s2.AwBurst = ddr_axi_s2_aw_burst;
	assign Int_ddr_axi_s2.WId = 16'b0;
	assign Int_GPIO_apb_s0.RstN = u_b0c_Clk_RstN;
	assign Int_ddr_axi_s2.BResp = ddr_axi_s2_b_resp;
	assign Int_ddr_axi_s2.AwCache = ddr_axi_s2_aw_cache;
	assign Int_ddr_axi_s2.AwSnoop = 3'b0;
	assign Int_ddr_axi_s2.ArRegion = 4'b0;
	assign Int_ddr_axi_s2.AwUser = 256'b0;
	assign Int_ddr_axi_s2.AwAtop = 6'b0;
	assign Int_ddr_axi_s2.ArUser = 256'b0;
	assign Int_ddr_axi_s2.ArProt = ddr_axi_s2_ar_prot;
	assign Int_ddr_axi_s2.ArCache = ddr_axi_s2_ar_cache;
	assign Int_ddr_axi_s2.RLast = ddr_axi_s2_r_last;
	assign Int_ddr_axi_s2.AwValid = ddr_axi_s2_aw_valid;
	assign Int_ddr_axi_s2.AwQos = 4'b0;
	assign Int_ddr_axi_s2.ArValid = ddr_axi_s2_ar_valid;
	assign Int_ddr_axi_s2.AwProt = ddr_axi_s2_aw_prot;
	assign Int_ddr_axi_s2.RUser = 256'b0;
	assign Int_ddr_axi_s2.ArSnoop = 4'b0;
	assign Int_ddr_axi_s2.AwRegion = 4'b0;
	assign Int_ddr_axi_s2.BValid = ddr_axi_s2_b_valid;
	assign Int_GPIO_apb_s0.PProt = 3'b0;
	assign Int_FCB_apb_s0.PRDataInfo = 32'b0;
	assign Int_ddr_axi_s3.ArBar = 2'b0;
	assign Int_ddr_axi_s3.ArAddr = { 32'b0 , ddr_axi_s3_ar_addr };
	assign Int_ddr_axi_s3.AwBar = 2'b0;
	assign Int_ddr_axi_s3.Clk = u_e741_Clk;
	assign Int_ddr_axi_s3.ArBurst = ddr_axi_s3_ar_burst;
	assign Int_ddr_axi_s3.AwLock = { 1'b0 , ddr_axi_s3_aw_lock };
	assign Int_ddr_axi_s3.RResp = ddr_axi_s3_r_resp;
	assign Int_ddr_axi_s3.WReady = ddr_axi_s3_w_ready;
	assign Int_ddr_axi_s3.ArLen = { 5'b0 , ddr_axi_s3_ar_len };
	assign Int_ddr_axi_s3.ArId = { 12'b0 , ddr_axi_s3_ar_id };
	assign Int_ACPU_WDT.PAddr = { 4'b0 , ACPU_WDT_PAddr };
	assign Int_GPIO_apb_s0.PAddr = { 4'b0 , GPIO_apb_s0_paddr };
	assign Int_ddr_axi_s3.WStrb = { 112'b0 , ddr_axi_s3_w_strb };
	assign Int_ddr_axi_s3.RId = { 12'b0 , ddr_axi_s3_r_id };
	assign Int_ddr_axi_s3.AwId = { 12'b0 , ddr_axi_s3_aw_id };
	assign Int_ddr_axi_s3.RReady = ddr_axi_s3_r_ready;
	assign Int_ddr_axi_s3.ArLock = { 1'b0 , ddr_axi_s3_ar_lock };
	assign Int_ddr_axi_s3.WLast = ddr_axi_s3_w_last;
	assign Int_ddr_axi_s3.ArReady = ddr_axi_s3_ar_ready;
	assign Int_ddr_axi_s3.WValid = ddr_axi_s3_w_valid;
	assign Int_ddr_axi_s3.BReady = ddr_axi_s3_b_ready;
	assign Int_ddr_axi_s3.AwReady = ddr_axi_s3_aw_ready;
	assign Int_ddr_axi_s3.RstN = u_e741_Clk_RstN;
	assign Int_ddr_axi_s3.BId = { 12'b0 , ddr_axi_s3_b_id };
	assign Int_ddr_axi_s3.ArSize = { 1'b0 , ddr_axi_s3_ar_size };
	assign Int_FCB_apb_s0.Clk = u_b0c_Clk;
	assign Int_ddr_axi_s3.AwAddr = { 32'b0 , ddr_axi_s3_aw_addr };
	assign Int_ddr_axi_s3.ArDomain = 2'b0;
	assign Int_ddr_axi_s3.BUser = 256'b0;
	assign Int_ddr_axi_s3.AwSize = { 1'b0 , ddr_axi_s3_aw_size };
	assign Int_ddr_axi_s3.ArQos = 4'b0;
	assign Int_GPIO_apb_s0.PEnable = GPIO_apb_s0_penable;
	assign Int_ddr_axi_s3.AwDomain = 2'b0;
	assign Int_ddr_axi_s3.WData = { 896'b0 , ddr_axi_s3_w_data };
	assign Int_ddr_axi_s3.AwLen = { 5'b0 , ddr_axi_s3_aw_len };
	assign Int_ddr_axi_s3.RValid = ddr_axi_s3_r_valid;
	assign Int_ddr_axi_s3.RData = { 896'b0 , ddr_axi_s3_r_data };
	assign Int_ddr_axi_s3.AwBurst = ddr_axi_s3_aw_burst;
	assign Int_ddr_axi_s3.WId = 16'b0;
	assign Int_ddr_axi_s3.BResp = ddr_axi_s3_b_resp;
	assign Int_ddr_axi_s3.AwCache = ddr_axi_s3_aw_cache;
	assign Int_ddr_axi_s3.AwSnoop = 3'b0;
	assign Int_ddr_axi_s3.ArRegion = 4'b0;
	assign Int_ddr_axi_s3.AwUser = 256'b0;
	assign Int_ddr_axi_s3.AwAtop = 6'b0;
	assign Int_ddr_axi_s3.ArUser = 256'b0;
	assign Int_ddr_axi_s3.ArProt = ddr_axi_s3_ar_prot;
	assign Int_ddr_axi_s3.ArCache = ddr_axi_s3_ar_cache;
	assign Int_ddr_axi_s3.RLast = ddr_axi_s3_r_last;
	assign Int_GPIO_apb_s0.PStrb = GPIO_apb_s0_pwbe;
	assign Int_ddr_axi_s3.AwValid = ddr_axi_s3_aw_valid;
	assign Int_ddr_axi_s3.AwQos = 4'b0;
	assign Int_ddr_axi_s3.ArValid = ddr_axi_s3_ar_valid;
	assign Int_ddr_axi_s3.AwProt = ddr_axi_s3_aw_prot;
	assign Int_ddr_axi_s3.RUser = 256'b0;
	assign Int_ddr_axi_s3.ArSnoop = 4'b0;
	assign Int_ddr_axi_s3.AwRegion = 4'b0;
	assign Int_ddr_axi_s3.BValid = ddr_axi_s3_b_valid;
	assign Int_GPIO_apb_s0.PWDataInfo = 32'b0;
	assign Int_ddr_axil_s0.ArBar = 2'b0;
	assign Int_ddr_axil_s0.ArAddr = { 32'b0 , ddr_axil_s0_ar_addr };
	assign Int_ddr_axil_s0.AwBar = 2'b0;
	assign Int_FCB_apb_s0.PRData = FCB_apb_s0_prdata;
	assign Int_ddr_axil_s0.Clk = u_b0c_Clk;
	assign Int_ddr_axil_s0.ArBurst = 2'b01;
	assign Int_ddr_axil_s0.AwLock = 2'b0;
	assign Int_ddr_axil_s0.RResp = ddr_axil_s0_r_resp;
	assign Int_DMA_apb_s0.PWrite = DMA_apb_s0_pwrite;
	assign Int_ddr_axil_s0.WReady = ddr_axil_s0_w_ready;
	assign Int_ddr_axil_s0.ArLen = 8'b0;
	assign Int_ddr_axil_s0.ArId = 16'b0;
	assign Int_ddr_axil_s0.WStrb = { 124'b0 , ddr_axil_s0_w_strb };
	assign Int_ddr_axil_s0.RId = 16'b0;
	assign Int_GPIO_apb_s0.PSel = GPIO_apb_s0_psel;
	assign Int_ddr_axil_s0.AwId = 16'b0;
	assign Int_ddr_axil_s0.RReady = ddr_axil_s0_r_ready;
	assign Int_ddr_axil_s0.ArLock = 2'b0;
	assign Int_ddr_axil_s0.WLast = 1'b1;
	assign Int_ddr_axil_s0.ArReady = ddr_axil_s0_ar_ready;
	assign Int_ddr_axil_s0.WValid = ddr_axil_s0_w_valid;
	assign Int_ddr_axil_s0.BReady = ddr_axil_s0_b_ready;
	assign Int_ddr_axil_s0.AwReady = ddr_axil_s0_aw_ready;
	assign Int_ddr_axil_s0.RstN = u_b0c_Clk_RstN;
	assign Int_ddr_axil_s0.BId = 16'b0;
	assign Int_ddr_axil_s0.ArSize = 4'b0010;
	assign Int_ddr_axil_s0.AwAddr = { 32'b0 , ddr_axil_s0_aw_addr };
	assign Int_ddr_axil_s0.ArDomain = 2'b0;
	assign Int_GPIO_apb_s0.PReady = GPIO_apb_s0_pready;
	assign Int_ddr_axil_s0.BUser = 256'b0;
	assign Int_ddr_axil_s0.AwSize = 4'b0010;
	assign Int_ddr_axil_s0.ArQos = 4'b0;
	assign Int_ddr_axil_s0.AwDomain = 2'b0;
	assign Int_ddr_axil_s0.WData = { 992'b0 , ddr_axil_s0_w_data };
	assign Int_ddr_axil_s0.AwLen = 8'b0;
	assign Int_ddr_axil_s0.RValid = ddr_axil_s0_r_valid;
	assign Int_ddr_axil_s0.RData = { 992'b0 , ddr_axil_s0_r_data };
	assign Int_ddr_axil_s0.AwBurst = 2'b01;
	assign Int_ddr_axil_s0.WId = 16'b0;
	assign Int_ddr_axil_s0.BResp = ddr_axil_s0_b_resp;
	assign Int_FCB_apb_s0.PWrite = FCB_apb_s0_pwrite;
	assign Int_ddr_axil_s0.AwCache = 4'b0;
	assign Int_ddr_axil_s0.AwSnoop = 3'b0;
	assign Int_ddr_axil_s0.ArRegion = 4'b0;
	assign Int_ddr_axil_s0.AwUser = 256'b0;
	assign Int_ddr_axil_s0.AwAtop = 6'b0;
	assign Int_ddr_axil_s0.ArUser = 256'b0;
	assign Int_GPIO_apb_s0.PRDataInfo = 32'b0;
	assign Int_ddr_axil_s0.ArProt = ddr_axil_s0_ar_prot;
	assign Int_ddr_axil_s0.ArCache = 4'b0;
	assign Int_ddr_axil_s0.RLast = 1'b1;
	assign Int_ddr_axil_s0.AwValid = ddr_axil_s0_aw_valid;
	assign Int_ddr_axil_s0.AwQos = 4'b0;
	assign Int_ddr_axil_s0.ArValid = ddr_axil_s0_ar_valid;
	assign Int_ddr_axil_s0.AwProt = ddr_axil_s0_aw_prot;
	assign Int_ddr_axil_s0.RUser = 256'b0;
	assign Int_ddr_axil_s0.ArSnoop = 4'b0;
	assign Int_ddr_axil_s0.AwRegion = 4'b0;
	assign Int_ddr_axil_s0.BValid = ddr_axil_s0_b_valid;
	assign Int_GPIO_apb_s0.Clk = u_b0c_Clk;
	assign Int_GPIO_apb_s0.PRData = GPIO_apb_s0_prdata;
	assign Int_FCB_apb_s0.PWData = FCB_apb_s0_pwdata;
	assign Int_dma_axi_m0.ArBar = 2'b0;
	assign Int_dma_axi_m0.ArAddr = { 32'b0 , dma_axi_m0_ar_addr };
	assign Int_dma_axi_m0.AwBar = 2'b0;
	assign Int_dma_axi_m0.Clk = u_991a_Clk;
	assign Int_dma_axi_m0.ArBurst = dma_axi_m0_ar_burst;
	assign Int_dma_axi_m0.AwLock = { 1'b0 , dma_axi_m0_aw_lock };
	assign Int_GPIO_apb_s0.PWrite = GPIO_apb_s0_pwrite;
	assign Int_dma_axi_m0.RResp = dma_axi_m0_r_resp;
	assign Int_dma_axi_m0.WReady = dma_axi_m0_w_ready;
	assign Int_dma_axi_m0.ArLen = { 4'b0 , dma_axi_m0_ar_len };
	assign Int_dma_axi_m0.ArId = { 12'b0 , dma_axi_m0_ar_id };
	assign Int_dma_axi_m0.WStrb = { 124'b0 , dma_axi_m0_w_strb };
	assign Int_dma_axi_m0.RId = { 12'b0 , dma_axi_m0_r_id };
	assign Int_dma_axi_m0.AwId = { 12'b0 , dma_axi_m0_aw_id };
	assign Int_dma_axi_m0.RReady = dma_axi_m0_r_ready;
	assign Int_dma_axi_m0.ArLock = { 1'b0 , dma_axi_m0_ar_lock };
	assign Int_dma_axi_m0.WLast = dma_axi_m0_w_last;
	assign Int_dma_axi_m0.ArReady = dma_axi_m0_ar_ready;
	assign Int_dma_axi_m0.WValid = dma_axi_m0_w_valid;
	assign Int_dma_axi_m0.BReady = dma_axi_m0_b_ready;
	assign Int_dma_axi_m0.AwReady = dma_axi_m0_aw_ready;
	assign Int_dma_axi_m0.RstN = u_991a_Clk_RstN;
	assign Int_dma_axi_m0.BId = { 12'b0 , dma_axi_m0_b_id };
	assign Int_dma_axi_m0.ArSize = { 1'b0 , dma_axi_m0_ar_size };
	assign Int_dma_axi_m0.AwAddr = { 32'b0 , dma_axi_m0_aw_addr };
	assign Int_dma_axi_m0.ArDomain = 2'b0;
	assign Int_dma_axi_m0.BUser = 256'b0;
	assign Int_GPIO_apb_s0.PWData = GPIO_apb_s0_pwdata;
	assign Int_dma_axi_m0.AwSize = { 1'b0 , dma_axi_m0_aw_size };
	assign Int_dma_axi_m0.ArQos = 4'b0;
	assign Int_dma_axi_m0.AwDomain = 2'b0;
	assign Int_dma_axi_m0.WData = { 992'b0 , dma_axi_m0_w_data };
	assign Int_dma_axi_m0.AwLen = { 4'b0 , dma_axi_m0_aw_len };
	assign Int_dma_axi_m0.RValid = dma_axi_m0_r_valid;
	assign Int_dma_axi_m0.RData = { 992'b0 , dma_axi_m0_r_data };
	assign Int_dma_axi_m0.AwBurst = dma_axi_m0_aw_burst;
	assign Int_dma_axi_m0.WId = 16'b0;
	assign Int_dma_axi_m0.BResp = dma_axi_m0_b_resp;
	assign Int_dma_axi_m0.AwCache = dma_axi_m0_aw_cache;
	assign Int_dma_axi_m0.AwSnoop = 3'b0;
	assign Int_dma_axi_m0.ArRegion = 4'b0;
	assign Int_dma_axi_m0.AwUser = 256'b0;
	assign Int_ACPU_WDT.PEnable = ACPU_WDT_PEnable;
	assign Int_dma_axi_m0.AwAtop = 6'b0;
	assign Int_dma_axi_m0.ArUser = 256'b0;
	assign Int_dma_axi_m0.ArProt = dma_axi_m0_ar_prot;
	assign Int_dma_axi_m0.ArCache = dma_axi_m0_ar_cache;
	assign Int_dma_axi_m0.RLast = dma_axi_m0_r_last;
	assign Int_dma_axi_m0.AwValid = dma_axi_m0_aw_valid;
	assign Int_dma_axi_m0.AwQos = 4'b0;
	assign Int_dma_axi_m0.ArValid = dma_axi_m0_ar_valid;
	assign Int_dma_axi_m0.AwProt = dma_axi_m0_aw_prot;
	assign Int_dma_axi_m0.RUser = 256'b0;
	assign Int_dma_axi_m0.ArSnoop = 4'b0;
	assign Int_dma_axi_m0.AwRegion = 4'b0;
	assign Int_dma_axi_m0.BValid = dma_axi_m0_b_valid;
	assign Int_dma_axi_m1.ArBar = 2'b0;
	assign Int_dma_axi_m1.ArAddr = { 32'b0 , dma_axi_m1_ar_addr };
	assign Int_dma_axi_m1.AwBar = 2'b0;
	assign Int_dma_axi_m1.Clk = u_991a_Clk;
	assign Int_dma_axi_m1.ArBurst = dma_axi_m1_ar_burst;
	assign Int_dma_axi_m1.AwLock = { 1'b0 , dma_axi_m1_aw_lock };
	assign Int_dma_axi_m1.RResp = dma_axi_m1_r_resp;
	assign Int_dma_axi_m1.WReady = dma_axi_m1_w_ready;
	assign Int_dma_axi_m1.ArLen = { 4'b0 , dma_axi_m1_ar_len };
	assign Int_dma_axi_m1.ArId = { 12'b0 , dma_axi_m1_ar_id };
	assign Int_dma_axi_m1.WStrb = { 124'b0 , dma_axi_m1_w_strb };
	assign Int_dma_axi_m1.RId = { 12'b0 , dma_axi_m1_r_id };
	assign Int_dma_axi_m1.AwId = { 12'b0 , dma_axi_m1_aw_id };
	assign Int_dma_axi_m1.RReady = dma_axi_m1_r_ready;
	assign Int_dma_axi_m1.ArLock = { 1'b0 , dma_axi_m1_ar_lock };
	assign Int_dma_axi_m1.WLast = dma_axi_m1_w_last;
	assign Int_dma_axi_m1.ArReady = dma_axi_m1_ar_ready;
	assign Int_dma_axi_m1.WValid = dma_axi_m1_w_valid;
	assign Int_dma_axi_m1.BReady = dma_axi_m1_b_ready;
	assign Int_dma_axi_m1.AwReady = dma_axi_m1_aw_ready;
	assign Int_dma_axi_m1.RstN = u_991a_Clk_RstN;
	assign Int_dma_axi_m1.BId = { 12'b0 , dma_axi_m1_b_id };
	assign Int_dma_axi_m1.ArSize = { 1'b0 , dma_axi_m1_ar_size };
	assign Int_dma_axi_m1.AwAddr = { 32'b0 , dma_axi_m1_aw_addr };
	assign Int_dma_axi_m1.ArDomain = 2'b0;
	assign Int_dma_axi_m1.BUser = 256'b0;
	assign Int_dma_axi_m1.AwSize = { 1'b0 , dma_axi_m1_aw_size };
	assign Int_dma_axi_m1.ArQos = 4'b0;
	assign Int_dma_axi_m1.AwDomain = 2'b0;
	assign Int_dma_axi_m1.WData = { 992'b0 , dma_axi_m1_w_data };
	assign Int_dma_axi_m1.AwLen = { 4'b0 , dma_axi_m1_aw_len };
	assign Int_dma_axi_m1.RValid = dma_axi_m1_r_valid;
	assign Int_dma_axi_m1.RData = { 992'b0 , dma_axi_m1_r_data };
	assign Int_dma_axi_m1.AwBurst = dma_axi_m1_aw_burst;
	assign Int_dma_axi_m1.WId = 16'b0;
	assign Int_dma_axi_m1.BResp = dma_axi_m1_b_resp;
	assign Int_dma_axi_m1.AwCache = dma_axi_m1_aw_cache;
	assign Int_dma_axi_m1.AwSnoop = 3'b0;
	assign Int_dma_axi_m1.ArRegion = 4'b0;
	assign Int_dma_axi_m1.AwUser = 256'b0;
	assign Int_dma_axi_m1.AwAtop = 6'b0;
	assign Int_dma_axi_m1.ArUser = 256'b0;
	assign Int_dma_axi_m1.ArProt = dma_axi_m1_ar_prot;
	assign Int_dma_axi_m1.ArCache = dma_axi_m1_ar_cache;
	assign Int_dma_axi_m1.RLast = dma_axi_m1_r_last;
	assign Int_dma_axi_m1.AwValid = dma_axi_m1_aw_valid;
	assign Int_dma_axi_m1.AwQos = 4'b0;
	assign Int_dma_axi_m1.ArValid = dma_axi_m1_ar_valid;
	assign Int_dma_axi_m1.AwProt = dma_axi_m1_aw_prot;
	assign Int_dma_axi_m1.RUser = 256'b0;
	assign Int_dma_axi_m1.ArSnoop = 4'b0;
	assign Int_dma_axi_m1.AwRegion = 4'b0;
	assign Int_dma_axi_m1.BValid = dma_axi_m1_b_valid;
	anvu_uvmTestEnv_Top_z_S_R_U_Cm_U_24b4c5ea uUnit_24b4c5ea(
		.In_Clk( fpga_clk_s0 )
	,	.In_RstN( fpga_rsts0_n )
	,	.In_Tm( tm )
	,	.root_Clk( u_990_Clk )
	,	.root_Clk_ClkS( u_990_Clk_ClkS )
	,	.root_Clk_En( u_990_Clk_En )
	,	.root_Clk_EnS( u_990_Clk_EnS )
	,	.root_Clk_RetRstN( u_990_Clk_RetRstN )
	,	.root_Clk_RstN( u_990_Clk_RstN )
	,	.root_Clk_Tm( u_990_Clk_Tm )
	,	.root_Pwr_Idle( 1'b0 )
	,	.root_Pwr_WakeUp( 1'b0 )
	);
	assign Int_fpga_ahb_s0.Clk = u_990_Clk;
	assign Int_fpga_ahb_s0.HWData = { 224'b0 , fpga_ahb_s0_hwdata };
	assign Int_fpga_ahb_s0.HAddr = { 8'b0 , fpga_ahb_s0_haddr };
	assign Int_fpga_ahb_s0.HRUser = 256'b0;
	assign Int_fpga_ahb_s0.HWrite = fpga_ahb_s0_hwrite;
	assign Int_fpga_ahb_s0.HTrans = fpga_ahb_s0_htrans;
	assign Int_fpga_ahb_s0.HExcl = 1'b0;
	assign Int_fpga_ahb_s0.HWBe = { 28'b0 , fpga_ahb_s0_hwbe };
	assign Int_fpga_ahb_s0.HMaster = 4'b0;
	assign Int_fpga_ahb_s0.HAUser = 256'b0;
	assign Int_fpga_ahb_s0.HResp = { 1'b0 , fpga_ahb_s0_hresp };
	assign Int_fpga_ahb_s0.RstN = u_990_Clk_RstN;
	assign Int_fpga_ahb_s0.HProt = { 3'b0 , fpga_ahb_s0_hprot };
	assign Int_fpga_ahb_s0.HReady = fpga_ahb_s0_hready;
	assign Int_fpga_ahb_s0.HSize = fpga_ahb_s0_hsize;
	assign Int_fpga_ahb_s0.HExOkay = 1'b0;
	assign Int_fpga_ahb_s0.HRData = { 224'b0 , fpga_ahb_s0_hrdata };
	assign Int_fpga_ahb_s0.HBurst = fpga_ahb_s0_hburst;
	assign Int_fpga_ahb_s0.HSel = fpga_ahb_s0_hsel;
	assign Int_fpga_ahb_s0.HWUser = 256'b0;
	assign Int_fpga_ahb_s0.HNonSec = 1'b0;
	assign Int_fpga_ahb_s0.HBStrb = 32'b11111111111111111111111111111111;
	assign Int_fpga_ahb_s0.HReadySel = Int_fpga_ahb_s0.HReady;
	assign Int_fpga_ahb_s0.HMastLock = fpga_ahb_s0_hmastlock;
	assign Int_fpga_ahb_s0.ReqUser = 256'b0;
	assign Int_PUFCC_apb_s0.PEnable = PUFCC_apb_s0_PEnable;
	assign Int_fpga_axi_m0.ArBar = 2'b0;
	assign Int_fpga_axi_m0.ArAddr = { 32'b0 , fpga_axi_m0_ar_addr };
	assign Int_fpga_axi_m0.AwBar = 2'b0;
	anvu_uvmTestEnv_Top_z_S_R_U_Cm_U_38b89c9c uUnit_38b89c9c(
		.In_Clk( fpga_clk_m0 )
	,	.In_RstN( fpga_rstm0_n )
	,	.In_Tm( tm )
	,	.root_Clk( u_e593_Clk )
	,	.root_Clk_ClkS( u_e593_Clk_ClkS )
	,	.root_Clk_En( u_e593_Clk_En )
	,	.root_Clk_EnS( u_e593_Clk_EnS )
	,	.root_Clk_RetRstN( u_e593_Clk_RetRstN )
	,	.root_Clk_RstN( u_e593_Clk_RstN )
	,	.root_Clk_Tm( u_e593_Clk_Tm )
	,	.root_Pwr_Idle( 1'b0 )
	,	.root_Pwr_WakeUp( 1'b0 )
	);
	assign Int_fpga_axi_m0.Clk = u_e593_Clk;
	assign Int_fpga_axi_m0.ArBurst = fpga_axi_m0_ar_burst;
	assign Int_fpga_axi_m0.AwLock = { 1'b0 , fpga_axi_m0_aw_lock };
	assign Int_fpga_axi_m0.RResp = fpga_axi_m0_r_resp;
	assign Int_fpga_axi_m0.WReady = fpga_axi_m0_w_ready;
	assign Int_fpga_axi_m0.ArLen = { 5'b0 , fpga_axi_m0_ar_len };
	assign Int_fpga_axi_m0.ArId = { 12'b0 , fpga_axi_m0_ar_id };
	assign Int_fpga_axi_m0.WStrb = { 120'b0 , fpga_axi_m0_w_strb };
	assign Int_fpga_axi_m0.RId = { 12'b0 , fpga_axi_m0_r_id };
	assign Int_fpga_axi_m0.AwId = { 12'b0 , fpga_axi_m0_aw_id };
	assign Int_fpga_axi_m0.RReady = fpga_axi_m0_r_ready;
	assign Int_fpga_axi_m0.ArLock = { 1'b0 , fpga_axi_m0_ar_lock };
	assign Int_fpga_axi_m0.WLast = fpga_axi_m0_w_last;
	assign Int_fpga_axi_m0.ArReady = fpga_axi_m0_ar_ready;
	assign Int_fpga_axi_m0.WValid = fpga_axi_m0_w_valid;
	assign Int_fpga_axi_m0.BReady = fpga_axi_m0_b_ready;
	assign Int_fpga_axi_m0.AwReady = fpga_axi_m0_aw_ready;
	assign Int_fpga_axi_m0.RstN = u_e593_Clk_RstN;
	assign Int_fpga_axi_m0.BId = { 12'b0 , fpga_axi_m0_b_id };
	assign Int_fpga_axi_m0.ArSize = { 1'b0 , fpga_axi_m0_ar_size };
	assign Int_fpga_axi_m0.AwAddr = { 32'b0 , fpga_axi_m0_aw_addr };
	assign Int_fpga_axi_m0.ArDomain = 2'b0;
	assign Int_fpga_axi_m0.BUser = 256'b0;
	assign Int_fpga_axi_m0.AwSize = { 1'b0 , fpga_axi_m0_aw_size };
	assign Int_fpga_axi_m0.ArQos = 4'b0;
	assign Int_fpga_axi_m0.AwDomain = 2'b0;
	assign Int_fpga_axi_m0.WData = { 960'b0 , fpga_axi_m0_w_data };
	assign Int_fpga_axi_m0.AwLen = { 5'b0 , fpga_axi_m0_aw_len };
	assign Int_fpga_axi_m0.RValid = fpga_axi_m0_r_valid;
	assign Int_ACPU_WDT.PStrb = ACPU_WDT_PWBe;
	assign Int_fpga_axi_m0.RData = { 960'b0 , fpga_axi_m0_r_data };
	assign Int_fpga_axi_m0.AwBurst = fpga_axi_m0_aw_burst;
	assign Int_fpga_axi_m0.WId = 16'b0;
	assign Int_fpga_axi_m0.BResp = fpga_axi_m0_b_resp;
	assign Int_fpga_axi_m0.AwCache = fpga_axi_m0_aw_cache;
	assign Int_fpga_axi_m0.AwSnoop = 3'b0;
	assign Int_fpga_axi_m0.ArRegion = 4'b0;
	assign Int_fpga_axi_m0.AwUser = 256'b0;
	assign Int_fpga_axi_m0.AwAtop = 6'b0;
	assign Int_fpga_axi_m0.ArUser = 256'b0;
	assign Int_fpga_axi_m0.ArProt = fpga_axi_m0_ar_prot;
	assign Int_fpga_axi_m0.ArCache = fpga_axi_m0_ar_cache;
	assign Int_fpga_axi_m0.RLast = fpga_axi_m0_r_last;
	assign Int_fpga_axi_m0.AwValid = fpga_axi_m0_aw_valid;
	assign Int_fpga_axi_m0.AwQos = 4'b0;
	assign Int_fpga_axi_m0.ArValid = fpga_axi_m0_ar_valid;
	assign Int_fpga_axi_m0.AwProt = fpga_axi_m0_aw_prot;
	assign Int_fpga_axi_m0.RUser = 256'b0;
	assign Int_fpga_axi_m0.ArSnoop = 4'b0;
	assign Int_fpga_axi_m0.AwRegion = 4'b0;
	assign Int_fpga_axi_m0.BValid = fpga_axi_m0_b_valid;
	assign Int_fpga_axi_m1.ArBar = 2'b0;
	assign Int_fpga_axi_m1.ArAddr = { 32'b0 , fpga_axi_m1_ar_addr };
	assign Int_fpga_axi_m1.AwBar = 2'b0;
	anvu_uvmTestEnv_Top_z_S_R_U_Cm_U_6511d323 uUnit_6511d323(
		.In_Clk( fpga_clk_m1 )
	,	.In_RstN( fpga_rstm1_n )
	,	.In_Tm( tm )
	,	.root_Clk( u_d9df_Clk )
	,	.root_Clk_ClkS( u_d9df_Clk_ClkS )
	,	.root_Clk_En( u_d9df_Clk_En )
	,	.root_Clk_EnS( u_d9df_Clk_EnS )
	,	.root_Clk_RetRstN( u_d9df_Clk_RetRstN )
	,	.root_Clk_RstN( u_d9df_Clk_RstN )
	,	.root_Clk_Tm( u_d9df_Clk_Tm )
	,	.root_Pwr_Idle( 1'b0 )
	,	.root_Pwr_WakeUp( 1'b0 )
	);
	assign Int_fpga_axi_m1.Clk = u_d9df_Clk;
	assign Int_fpga_axi_m1.ArBurst = fpga_axi_m1_ar_burst;
	assign Int_fpga_axi_m1.AwLock = { 1'b0 , fpga_axi_m1_aw_lock };
	assign Int_fpga_axi_m1.RResp = fpga_axi_m1_r_resp;
	assign Int_fpga_axi_m1.WReady = fpga_axi_m1_w_ready;
	assign Int_fpga_axi_m1.ArLen = { 4'b0 , fpga_axi_m1_ar_len };
	assign Int_fpga_axi_m1.ArId = { 12'b0 , fpga_axi_m1_ar_id };
	assign Int_fpga_axi_m1.WStrb = { 124'b0 , fpga_axi_m1_w_strb };
	assign Int_fpga_axi_m1.RId = { 12'b0 , fpga_axi_m1_r_id };
	assign Int_fpga_axi_m1.AwId = { 12'b0 , fpga_axi_m1_aw_id };
	assign Int_fpga_axi_m1.RReady = fpga_axi_m1_r_ready;
	assign Int_fpga_axi_m1.ArLock = { 1'b0 , fpga_axi_m1_ar_lock };
	assign Int_fpga_axi_m1.WLast = fpga_axi_m1_w_last;
	assign Int_fpga_axi_m1.ArReady = fpga_axi_m1_ar_ready;
	assign Int_fpga_axi_m1.WValid = fpga_axi_m1_w_valid;
	assign Int_fpga_axi_m1.BReady = fpga_axi_m1_b_ready;
	assign Int_fpga_axi_m1.AwReady = fpga_axi_m1_aw_ready;
	assign Int_GPT_apb_s0.ReqUser = 256'b0;
	assign Int_fpga_axi_m1.RstN = u_d9df_Clk_RstN;
	assign Int_fpga_axi_m1.BId = { 12'b0 , fpga_axi_m1_b_id };
	assign Int_fpga_axi_m1.ArSize = { 1'b0 , fpga_axi_m1_ar_size };
	assign Int_fpga_axi_m1.AwAddr = { 32'b0 , fpga_axi_m1_aw_addr };
	assign Int_fpga_axi_m1.ArDomain = 2'b0;
	assign Int_fpga_axi_m1.BUser = 256'b0;
	assign Int_fpga_axi_m1.AwSize = { 1'b0 , fpga_axi_m1_aw_size };
	assign Int_fpga_axi_m1.ArQos = 4'b0;
	assign Int_fpga_axi_m1.AwDomain = 2'b0;
	assign Int_fpga_axi_m1.WData = { 992'b0 , fpga_axi_m1_w_data };
	assign Int_fpga_axi_m1.AwLen = { 4'b0 , fpga_axi_m1_aw_len };
	assign Int_fpga_axi_m1.RValid = fpga_axi_m1_r_valid;
	assign Int_fpga_axi_m1.RData = { 992'b0 , fpga_axi_m1_r_data };
	assign Int_fpga_axi_m1.AwBurst = fpga_axi_m1_aw_burst;
	assign Int_fpga_axi_m1.WId = 16'b0;
	assign Int_fpga_axi_m1.BResp = fpga_axi_m1_b_resp;
	assign Int_fpga_axi_m1.AwCache = fpga_axi_m1_aw_cache;
	assign Int_fpga_axi_m1.AwSnoop = 3'b0;
	assign Int_fpga_axi_m1.ArRegion = 4'b0;
	assign Int_fpga_axi_m1.AwUser = 256'b0;
	assign Int_fpga_axi_m1.AwAtop = 6'b0;
	assign Int_GPT_apb_s0.PSlvErr = GPT_apb_s0_pslverr;
	assign Int_fpga_axi_m1.ArUser = 256'b0;
	assign Int_fpga_axi_m1.ArProt = fpga_axi_m1_ar_prot;
	assign Int_fpga_axi_m1.ArCache = fpga_axi_m1_ar_cache;
	assign Int_fpga_axi_m1.RLast = fpga_axi_m1_r_last;
	assign Int_fpga_axi_m1.AwValid = fpga_axi_m1_aw_valid;
	assign Int_fpga_axi_m1.AwQos = 4'b0;
	assign Int_fpga_axi_m1.ArValid = fpga_axi_m1_ar_valid;
	assign Int_fpga_axi_m1.AwProt = fpga_axi_m1_aw_prot;
	assign Int_fpga_axi_m1.RUser = 256'b0;
	assign Int_fpga_axi_m1.ArSnoop = 4'b0;
	assign Int_fpga_axi_m1.AwRegion = 4'b0;
	assign Int_fpga_axi_m1.BValid = fpga_axi_m1_b_valid;
	assign Int_gbe_apb_s0.PWData = gbe_apb_s0_pwdata;
	assign Int_gbe_apb_s0.PWrite = gbe_apb_s0_pwrite;
	assign Int_GPT_apb_s0.RstN = u_b0c_Clk_RstN;
	assign Int_gbe_apb_s0.PRData = gbe_apb_s0_prdata;
	assign Int_gbe_apb_s0.Clk = u_991a_Clk;
	assign Int_gbe_apb_s0.PRDataInfo = 32'b0;
	assign Int_gbe_apb_s0.PReady = gbe_apb_s0_pready;
	assign Int_gbe_apb_s0.PSel = gbe_apb_s0_psel;
	assign Int_gbe_apb_s0.PWDataInfo = 32'b0;
	assign Int_gbe_apb_s0.PStrb = gbe_apb_s0_pwbe;
	assign Int_gbe_apb_s0.PEnable = gbe_apb_s0_penable;
	assign Int_gbe_apb_s0.PAddr = { 4'b0 , gbe_apb_s0_paddr };
	assign Int_gbe_apb_s0.PProt = 3'b0;
	assign Int_gbe_apb_s0.RstN = u_991a_Clk_RstN;
	assign Int_gbe_apb_s0.PSlvErr = gbe_apb_s0_pslverr;
	assign Int_gbe_apb_s0.ReqUser = 256'b0;
	assign Int_ACPU_WDT.PWDataInfo = 32'b0;
	assign Int_GPT_apb_s0.PProt = 3'b0;
	assign Int_gbe_axi_m0.ArBar = 2'b0;
	assign Int_gbe_axi_m0.ArAddr = { 32'b0 , gbe_axi_m0_ar_addr };
	assign Int_gbe_axi_m0.AwBar = 2'b0;
	assign Int_gbe_axi_m0.Clk = u_991a_Clk;
	assign Int_gbe_axi_m0.ArBurst = gbe_axi_m0_ar_burst;
	assign Int_gbe_axi_m0.AwLock = { 1'b0 , gbe_axi_m0_aw_lock };
	assign Int_gbe_axi_m0.RResp = gbe_axi_m0_r_resp;
	assign Int_gbe_axi_m0.WReady = gbe_axi_m0_w_ready;
	assign Int_gbe_axi_m0.ArLen = { 4'b0 , gbe_axi_m0_ar_len };
	assign Int_gbe_axi_m0.ArId = { 12'b0 , gbe_axi_m0_ar_id };
	assign Int_gbe_axi_m0.WStrb = { 124'b0 , gbe_axi_m0_w_strb };
	assign Int_gbe_axi_m0.RId = { 12'b0 , gbe_axi_m0_r_id };
	assign Int_gbe_axi_m0.AwId = { 12'b0 , gbe_axi_m0_aw_id };
	assign Int_gbe_axi_m0.RReady = gbe_axi_m0_r_ready;
	assign Int_GPT_apb_s0.PAddr = { 4'b0 , GPT_apb_s0_paddr };
	assign Int_gbe_axi_m0.ArLock = { 1'b0 , gbe_axi_m0_ar_lock };
	assign Int_gbe_axi_m0.WLast = gbe_axi_m0_w_last;
	assign Int_gbe_axi_m0.ArReady = gbe_axi_m0_ar_ready;
	assign Int_gbe_axi_m0.WValid = gbe_axi_m0_w_valid;
	assign Int_gbe_axi_m0.BReady = gbe_axi_m0_b_ready;
	assign Int_gbe_axi_m0.AwReady = gbe_axi_m0_aw_ready;
	assign Int_gbe_axi_m0.RstN = u_991a_Clk_RstN;
	assign Int_gbe_axi_m0.BId = { 12'b0 , gbe_axi_m0_b_id };
	assign Int_gbe_axi_m0.ArSize = { 1'b0 , gbe_axi_m0_ar_size };
	assign Int_gbe_axi_m0.AwAddr = { 32'b0 , gbe_axi_m0_aw_addr };
	assign Int_gbe_axi_m0.ArDomain = 2'b0;
	assign Int_gbe_axi_m0.BUser = 256'b0;
	assign Int_gbe_axi_m0.AwSize = { 1'b0 , gbe_axi_m0_aw_size };
	assign Int_gbe_axi_m0.ArQos = 4'b0;
	assign Int_gbe_axi_m0.AwDomain = 2'b0;
	assign Int_gbe_axi_m0.WData = { 992'b0 , gbe_axi_m0_w_data };
	assign Int_gbe_axi_m0.AwLen = { 4'b0 , gbe_axi_m0_aw_len };
	assign Int_gbe_axi_m0.RValid = gbe_axi_m0_r_valid;
	assign Int_gbe_axi_m0.RData = { 992'b0 , gbe_axi_m0_r_data };
	assign Int_gbe_axi_m0.AwBurst = gbe_axi_m0_aw_burst;
	assign Int_gbe_axi_m0.WId = 16'b0;
	assign Int_GPT_apb_s0.PEnable = GPT_apb_s0_penable;
	assign Int_gbe_axi_m0.BResp = gbe_axi_m0_b_resp;
	assign Int_gbe_axi_m0.AwCache = gbe_axi_m0_aw_cache;
	assign Int_gbe_axi_m0.AwSnoop = 3'b0;
	assign Int_gbe_axi_m0.ArRegion = 4'b0;
	assign Int_gbe_axi_m0.AwUser = 256'b0;
	assign Int_gbe_axi_m0.AwAtop = 6'b0;
	assign Int_gbe_axi_m0.ArUser = 256'b0;
	assign Int_gbe_axi_m0.ArProt = gbe_axi_m0_ar_prot;
	assign Int_gbe_axi_m0.ArCache = gbe_axi_m0_ar_cache;
	assign Int_gbe_axi_m0.RLast = gbe_axi_m0_r_last;
	assign Int_gbe_axi_m0.AwValid = gbe_axi_m0_aw_valid;
	assign Int_gbe_axi_m0.AwQos = 4'b0;
	assign Int_gbe_axi_m0.ArValid = gbe_axi_m0_ar_valid;
	assign Int_gbe_axi_m0.AwProt = gbe_axi_m0_aw_prot;
	assign Int_gbe_axi_m0.RUser = 256'b0;
	assign Int_gbe_axi_m0.ArSnoop = 4'b0;
	assign Int_gbe_axi_m0.AwRegion = 4'b0;
	assign Int_gbe_axi_m0.BValid = gbe_axi_m0_b_valid;
	assign Int_GPT_apb_s0.PStrb = GPT_apb_s0_pwbe;
	assign Int_GPT_apb_s0.PWDataInfo = 32'b0;
	assign Int_pufcc_axi_m0.ArBar = 2'b0;
	assign Int_pufcc_axi_m0.ArAddr = { 32'b0 , pufcc_axi_m0_ar_addr };
	assign Int_pufcc_axi_m0.AwBar = 2'b0;
	assign Int_pufcc_axi_m0.Clk = u_b0c_Clk;
	assign Int_pufcc_axi_m0.ArBurst = pufcc_axi_m0_ar_burst;
	assign Int_pufcc_axi_m0.AwLock = { 1'b0 , pufcc_axi_m0_aw_lock };
	assign Int_pufcc_axi_m0.RResp = pufcc_axi_m0_r_resp;
	assign Int_pufcc_axi_m0.WReady = pufcc_axi_m0_w_ready;
	assign Int_pufcc_axi_m0.ArLen = { 4'b0 , pufcc_axi_m0_ar_len };
	assign Int_pufcc_axi_m0.ArId = { 12'b0 , pufcc_axi_m0_ar_id };
	assign Int_GPT_apb_s0.PSel = GPT_apb_s0_psel;
	assign Int_pufcc_axi_m0.WStrb = { 124'b0 , pufcc_axi_m0_w_strb };
	assign Int_pufcc_axi_m0.RId = { 12'b0 , pufcc_axi_m0_r_id };
	assign Int_pufcc_axi_m0.AwId = { 12'b0 , pufcc_axi_m0_aw_id };
	assign Int_pufcc_axi_m0.RReady = pufcc_axi_m0_r_ready;
	assign Int_pufcc_axi_m0.ArLock = { 1'b0 , pufcc_axi_m0_ar_lock };
	assign Int_pufcc_axi_m0.WLast = pufcc_axi_m0_w_last;
	assign Int_pufcc_axi_m0.ArReady = pufcc_axi_m0_ar_ready;
	assign Int_pufcc_axi_m0.WValid = pufcc_axi_m0_w_valid;
	assign Int_pufcc_axi_m0.BReady = pufcc_axi_m0_b_ready;
	assign Int_pufcc_axi_m0.AwReady = pufcc_axi_m0_aw_ready;
	assign Int_pufcc_axi_m0.RstN = u_b0c_Clk_RstN;
	assign Int_pufcc_axi_m0.BId = { 12'b0 , pufcc_axi_m0_b_id };
	assign Int_pufcc_axi_m0.ArSize = { 1'b0 , pufcc_axi_m0_ar_size };
	assign Int_pufcc_axi_m0.AwAddr = { 32'b0 , pufcc_axi_m0_aw_addr };
	assign Int_pufcc_axi_m0.ArDomain = 2'b0;
	assign Int_pufcc_axi_m0.BUser = 256'b0;
	assign Int_pufcc_axi_m0.AwSize = { 1'b0 , pufcc_axi_m0_aw_size };
	assign Int_pufcc_axi_m0.ArQos = 4'b0;
	assign Int_GPT_apb_s0.PReady = GPT_apb_s0_pready;
	assign Int_pufcc_axi_m0.AwDomain = 2'b0;
	assign Int_pufcc_axi_m0.WData = { 992'b0 , pufcc_axi_m0_w_data };
	assign Int_pufcc_axi_m0.AwLen = { 4'b0 , pufcc_axi_m0_aw_len };
	assign Int_pufcc_axi_m0.RValid = pufcc_axi_m0_r_valid;
	assign Int_pufcc_axi_m0.RData = { 992'b0 , pufcc_axi_m0_r_data };
	assign Int_pufcc_axi_m0.AwBurst = pufcc_axi_m0_aw_burst;
	assign Int_pufcc_axi_m0.WId = 16'b0;
	assign Int_pufcc_axi_m0.BResp = pufcc_axi_m0_b_resp;
	assign Int_pufcc_axi_m0.AwCache = pufcc_axi_m0_aw_cache;
	assign Int_pufcc_axi_m0.AwSnoop = 3'b0;
	assign Int_pufcc_axi_m0.ArRegion = 4'b0;
	assign Int_pufcc_axi_m0.AwUser = 256'b0;
	assign Int_pufcc_axi_m0.AwAtop = 6'b0;
	assign Int_pufcc_axi_m0.ArUser = 256'b0;
	assign Int_pufcc_axi_m0.ArProt = pufcc_axi_m0_ar_prot;
	assign Int_pufcc_axi_m0.ArCache = pufcc_axi_m0_ar_cache;
	assign Int_pufcc_axi_m0.RLast = pufcc_axi_m0_r_last;
	assign Int_pufcc_axi_m0.AwValid = pufcc_axi_m0_aw_valid;
	assign Int_pufcc_axi_m0.AwQos = 4'b0;
	assign Int_pufcc_axi_m0.ArValid = pufcc_axi_m0_ar_valid;
	assign Int_pufcc_axi_m0.AwProt = pufcc_axi_m0_aw_prot;
	assign Int_pufcc_axi_m0.RUser = 256'b0;
	assign Int_pufcc_axi_m0.ArSnoop = 4'b0;
	assign Int_pufcc_axi_m0.AwRegion = 4'b0;
	assign Int_pufcc_axi_m0.BValid = pufcc_axi_m0_b_valid;
	assign Int_GPT_apb_s0.PRDataInfo = 32'b0;
	assign Int_GPT_apb_s0.Clk = u_b0c_Clk;
	assign Int_sram_axi_s0.ArBar = 2'b0;
	assign Int_sram_axi_s0.ArAddr = { 32'b0 , sram_axi_s0_ar_addr };
	assign Int_sram_axi_s0.AwBar = 2'b0;
	assign Int_sram_axi_s0.Clk = u_e741_Clk;
	assign Int_ACPU_WDT.PSel = ACPU_WDT_PSel;
	assign Int_GPT_apb_s0.PRData = GPT_apb_s0_prdata;
	assign Int_sram_axi_s0.ArBurst = sram_axi_s0_ar_burst;
	assign Int_sram_axi_s0.AwLock = { 1'b0 , sram_axi_s0_aw_lock };
	assign Int_sram_axi_s0.RResp = sram_axi_s0_r_resp;
	assign Int_sram_axi_s0.WReady = sram_axi_s0_w_ready;
	assign Int_sram_axi_s0.ArLen = { 4'b0 , sram_axi_s0_ar_len };
	assign Int_sram_axi_s0.ArId = { 12'b0 , sram_axi_s0_ar_id };
	assign Int_sram_axi_s0.WStrb = { 124'b0 , sram_axi_s0_w_strb };
	assign Int_sram_axi_s0.RId = { 12'b0 , sram_axi_s0_r_id };
	assign Int_sram_axi_s0.AwId = { 12'b0 , sram_axi_s0_aw_id };
	assign Int_sram_axi_s0.RReady = sram_axi_s0_r_ready;
	assign Int_sram_axi_s0.ArLock = { 1'b0 , sram_axi_s0_ar_lock };
	assign Int_sram_axi_s0.WLast = sram_axi_s0_w_last;
	assign Int_sram_axi_s0.ArReady = sram_axi_s0_ar_ready;
	assign Int_sram_axi_s0.WValid = sram_axi_s0_w_valid;
	assign Int_sram_axi_s0.BReady = sram_axi_s0_b_ready;
	assign Int_sram_axi_s0.AwReady = sram_axi_s0_aw_ready;
	assign Int_sram_axi_s0.RstN = u_e741_Clk_RstN;
	assign Int_sram_axi_s0.BId = { 12'b0 , sram_axi_s0_b_id };
	assign Int_sram_axi_s0.ArSize = { 1'b0 , sram_axi_s0_ar_size };
	assign Int_sram_axi_s0.AwAddr = { 32'b0 , sram_axi_s0_aw_addr };
	assign Int_GPT_apb_s0.PWrite = GPT_apb_s0_pwrite;
	assign Int_sram_axi_s0.ArDomain = 2'b0;
	assign Int_sram_axi_s0.BUser = 256'b0;
	assign Int_sram_axi_s0.AwSize = { 1'b0 , sram_axi_s0_aw_size };
	assign Int_sram_axi_s0.ArQos = 4'b0;
	assign Int_sram_axi_s0.AwDomain = 2'b0;
	assign Int_sram_axi_s0.WData = { 992'b0 , sram_axi_s0_w_data };
	assign Int_sram_axi_s0.AwLen = { 4'b0 , sram_axi_s0_aw_len };
	assign Int_sram_axi_s0.RValid = sram_axi_s0_r_valid;
	assign Int_sram_axi_s0.RData = { 992'b0 , sram_axi_s0_r_data };
	assign Int_sram_axi_s0.AwBurst = sram_axi_s0_aw_burst;
	assign Int_sram_axi_s0.WId = 16'b0;
	assign Int_sram_axi_s0.BResp = sram_axi_s0_b_resp;
	assign Int_sram_axi_s0.AwCache = sram_axi_s0_aw_cache;
	assign Int_sram_axi_s0.AwSnoop = 3'b0;
	assign Int_sram_axi_s0.ArRegion = 4'b0;
	assign Int_sram_axi_s0.AwUser = 256'b0;
	assign Int_sram_axi_s0.AwAtop = 6'b0;
	assign Int_sram_axi_s0.ArUser = 256'b0;
	assign Int_sram_axi_s0.ArProt = sram_axi_s0_ar_prot;
	assign Int_sram_axi_s0.ArCache = sram_axi_s0_ar_cache;
	assign Int_sram_axi_s0.RLast = sram_axi_s0_r_last;
	assign Int_sram_axi_s0.AwValid = sram_axi_s0_aw_valid;
	assign Int_sram_axi_s0.AwQos = 4'b0;
	assign Int_GPT_apb_s0.PWData = GPT_apb_s0_pwdata;
	assign Int_sram_axi_s0.ArValid = sram_axi_s0_ar_valid;
	assign Int_sram_axi_s0.AwProt = sram_axi_s0_aw_prot;
	assign Int_sram_axi_s0.RUser = 256'b0;
	assign Int_sram_axi_s0.ArSnoop = 4'b0;
	assign Int_sram_axi_s0.AwRegion = 4'b0;
	assign Int_sram_axi_s0.BValid = sram_axi_s0_b_valid;
	assign Int_PUFCC_apb_s0.PStrb = PUFCC_apb_s0_PStrb;
	assign Int_sram_axi_s1.ArBar = 2'b0;
	assign Int_sram_axi_s1.ArAddr = { 32'b0 , sram_axi_s1_ar_addr };
	assign Int_sram_axi_s1.AwBar = 2'b0;
	assign Int_sram_axi_s1.Clk = u_e741_Clk;
	assign Int_sram_axi_s1.ArBurst = sram_axi_s1_ar_burst;
	assign Int_sram_axi_s1.AwLock = { 1'b0 , sram_axi_s1_aw_lock };
	assign Int_sram_axi_s1.RResp = sram_axi_s1_r_resp;
	assign Int_sram_axi_s1.WReady = sram_axi_s1_w_ready;
	assign Int_sram_axi_s1.ArLen = { 4'b0 , sram_axi_s1_ar_len };
	assign Int_sram_axi_s1.ArId = { 12'b0 , sram_axi_s1_ar_id };
	assign Int_sram_axi_s1.WStrb = { 124'b0 , sram_axi_s1_w_strb };
	assign Int_sram_axi_s1.RId = { 12'b0 , sram_axi_s1_r_id };
	assign Int_sram_axi_s1.AwId = { 12'b0 , sram_axi_s1_aw_id };
	assign Int_sram_axi_s1.RReady = sram_axi_s1_r_ready;
	assign Int_sram_axi_s1.ArLock = { 1'b0 , sram_axi_s1_ar_lock };
	assign Int_sram_axi_s1.WLast = sram_axi_s1_w_last;
	assign Int_sram_axi_s1.ArReady = sram_axi_s1_ar_ready;
	assign Int_sram_axi_s1.WValid = sram_axi_s1_w_valid;
	assign Int_sram_axi_s1.BReady = sram_axi_s1_b_ready;
	assign Int_sram_axi_s1.AwReady = sram_axi_s1_aw_ready;
	assign Int_sram_axi_s1.RstN = u_e741_Clk_RstN;
	assign Int_sram_axi_s1.BId = { 12'b0 , sram_axi_s1_b_id };
	assign Int_sram_axi_s1.ArSize = { 1'b0 , sram_axi_s1_ar_size };
	assign Int_sram_axi_s1.AwAddr = { 32'b0 , sram_axi_s1_aw_addr };
	assign Int_sram_axi_s1.ArDomain = 2'b0;
	assign Int_sram_axi_s1.BUser = 256'b0;
	assign Int_sram_axi_s1.AwSize = { 1'b0 , sram_axi_s1_aw_size };
	assign Int_sram_axi_s1.ArQos = 4'b0;
	assign Int_sram_axi_s1.AwDomain = 2'b0;
	assign Int_sram_axi_s1.WData = { 992'b0 , sram_axi_s1_w_data };
	assign Int_sram_axi_s1.AwLen = { 4'b0 , sram_axi_s1_aw_len };
	assign Int_sram_axi_s1.RValid = sram_axi_s1_r_valid;
	assign Int_sram_axi_s1.RData = { 992'b0 , sram_axi_s1_r_data };
	assign Int_sram_axi_s1.AwBurst = sram_axi_s1_aw_burst;
	assign Int_sram_axi_s1.WId = 16'b0;
	assign Int_sram_axi_s1.BResp = sram_axi_s1_b_resp;
	assign Int_sram_axi_s1.AwCache = sram_axi_s1_aw_cache;
	assign Int_sram_axi_s1.AwSnoop = 3'b0;
	assign Int_sram_axi_s1.ArRegion = 4'b0;
	assign Int_sram_axi_s1.AwUser = 256'b0;
	assign Int_DMA_apb_s0.ReqUser = 256'b0;
	assign Int_sram_axi_s1.AwAtop = 6'b0;
	assign Int_sram_axi_s1.ArUser = 256'b0;
	assign Int_sram_axi_s1.ArProt = sram_axi_s1_ar_prot;
	assign Int_sram_axi_s1.ArCache = sram_axi_s1_ar_cache;
	assign Int_sram_axi_s1.RLast = sram_axi_s1_r_last;
	assign Int_sram_axi_s1.AwValid = sram_axi_s1_aw_valid;
	assign Int_sram_axi_s1.AwQos = 4'b0;
	assign Int_sram_axi_s1.ArValid = sram_axi_s1_ar_valid;
	assign Int_sram_axi_s1.AwProt = sram_axi_s1_aw_prot;
	assign Int_sram_axi_s1.RUser = 256'b0;
	assign Int_sram_axi_s1.ArSnoop = 4'b0;
	assign Int_sram_axi_s1.AwRegion = 4'b0;
	assign Int_sram_axi_s1.BValid = sram_axi_s1_b_valid;
	assign Int_DMA_apb_s0.PSlvErr = DMA_apb_s0_pslverr;
	assign Int_sram_axi_s2.ArBar = 2'b0;
	assign Int_sram_axi_s2.ArAddr = { 32'b0 , sram_axi_s2_ar_addr };
	assign Int_sram_axi_s2.AwBar = 2'b0;
	assign Int_sram_axi_s2.Clk = u_e741_Clk;
	assign Int_sram_axi_s2.ArBurst = sram_axi_s2_ar_burst;
	assign Int_sram_axi_s2.AwLock = { 1'b0 , sram_axi_s2_aw_lock };
	assign Int_sram_axi_s2.RResp = sram_axi_s2_r_resp;
	assign Int_sram_axi_s2.WReady = sram_axi_s2_w_ready;
	assign Int_sram_axi_s2.ArLen = { 4'b0 , sram_axi_s2_ar_len };
	assign Int_sram_axi_s2.ArId = { 12'b0 , sram_axi_s2_ar_id };
	assign Int_sram_axi_s2.WStrb = { 124'b0 , sram_axi_s2_w_strb };
	assign Int_sram_axi_s2.RId = { 12'b0 , sram_axi_s2_r_id };
	assign Int_sram_axi_s2.AwId = { 12'b0 , sram_axi_s2_aw_id };
	assign Int_sram_axi_s2.RReady = sram_axi_s2_r_ready;
	assign Int_sram_axi_s2.ArLock = { 1'b0 , sram_axi_s2_ar_lock };
	assign Int_sram_axi_s2.WLast = sram_axi_s2_w_last;
	assign Int_sram_axi_s2.ArReady = sram_axi_s2_ar_ready;
	assign Int_sram_axi_s2.WValid = sram_axi_s2_w_valid;
	assign Int_sram_axi_s2.BReady = sram_axi_s2_b_ready;
	assign Int_sram_axi_s2.AwReady = sram_axi_s2_aw_ready;
	assign Int_sram_axi_s2.RstN = u_e741_Clk_RstN;
	assign Int_sram_axi_s2.BId = { 12'b0 , sram_axi_s2_b_id };
	assign Int_sram_axi_s2.ArSize = { 1'b0 , sram_axi_s2_ar_size };
	assign Int_sram_axi_s2.AwAddr = { 32'b0 , sram_axi_s2_aw_addr };
	assign Int_sram_axi_s2.ArDomain = 2'b0;
	assign Int_sram_axi_s2.BUser = 256'b0;
	assign Int_sram_axi_s2.AwSize = { 1'b0 , sram_axi_s2_aw_size };
	assign Int_sram_axi_s2.ArQos = 4'b0;
	assign Int_sram_axi_s2.AwDomain = 2'b0;
	assign Int_sram_axi_s2.WData = { 992'b0 , sram_axi_s2_w_data };
	assign Int_sram_axi_s2.AwLen = { 4'b0 , sram_axi_s2_aw_len };
	assign Int_sram_axi_s2.RValid = sram_axi_s2_r_valid;
	assign Int_sram_axi_s2.RData = { 992'b0 , sram_axi_s2_r_data };
	assign Int_sram_axi_s2.AwBurst = sram_axi_s2_aw_burst;
	assign Int_ACPU_WDT.PReady = ACPU_WDT_PReady;
	assign Int_sram_axi_s2.WId = 16'b0;
	assign Int_sram_axi_s2.BResp = sram_axi_s2_b_resp;
	assign Int_sram_axi_s2.AwCache = sram_axi_s2_aw_cache;
	assign Int_sram_axi_s2.AwSnoop = 3'b0;
	assign Int_sram_axi_s2.ArRegion = 4'b0;
	assign Int_sram_axi_s2.AwUser = 256'b0;
	assign Int_sram_axi_s2.AwAtop = 6'b0;
	assign Int_sram_axi_s2.ArUser = 256'b0;
	assign Int_sram_axi_s2.ArProt = sram_axi_s2_ar_prot;
	assign Int_sram_axi_s2.ArCache = sram_axi_s2_ar_cache;
	assign Int_sram_axi_s2.RLast = sram_axi_s2_r_last;
	assign Int_sram_axi_s2.AwValid = sram_axi_s2_aw_valid;
	assign Int_sram_axi_s2.AwQos = 4'b0;
	assign Int_sram_axi_s2.ArValid = sram_axi_s2_ar_valid;
	assign Int_sram_axi_s2.AwProt = sram_axi_s2_aw_prot;
	assign Int_sram_axi_s2.RUser = 256'b0;
	assign Int_DMA_apb_s0.RstN = u_991a_Clk_RstN;
	assign Int_sram_axi_s2.ArSnoop = 4'b0;
	assign Int_sram_axi_s2.AwRegion = 4'b0;
	assign Int_sram_axi_s2.BValid = sram_axi_s2_b_valid;
	assign Int_sram_axi_s3.ArBar = 2'b0;
	assign Int_sram_axi_s3.ArAddr = { 32'b0 , sram_axi_s3_ar_addr };
	assign Int_sram_axi_s3.AwBar = 2'b0;
	assign Int_sram_axi_s3.Clk = u_e741_Clk;
	assign Int_sram_axi_s3.ArBurst = sram_axi_s3_ar_burst;
	assign Int_sram_axi_s3.AwLock = { 1'b0 , sram_axi_s3_aw_lock };
	assign Int_sram_axi_s3.RResp = sram_axi_s3_r_resp;
	assign Int_sram_axi_s3.WReady = sram_axi_s3_w_ready;
	assign Int_DMA_apb_s0.PProt = 3'b0;
	assign Int_sram_axi_s3.ArLen = { 4'b0 , sram_axi_s3_ar_len };
	assign Int_sram_axi_s3.ArId = { 12'b0 , sram_axi_s3_ar_id };
	assign Int_sram_axi_s3.WStrb = { 124'b0 , sram_axi_s3_w_strb };
	assign Int_sram_axi_s3.RId = { 12'b0 , sram_axi_s3_r_id };
	assign Int_sram_axi_s3.AwId = { 12'b0 , sram_axi_s3_aw_id };
	assign Int_sram_axi_s3.RReady = sram_axi_s3_r_ready;
	assign Int_sram_axi_s3.ArLock = { 1'b0 , sram_axi_s3_ar_lock };
	assign Int_sram_axi_s3.WLast = sram_axi_s3_w_last;
	assign Int_sram_axi_s3.ArReady = sram_axi_s3_ar_ready;
	assign Int_sram_axi_s3.WValid = sram_axi_s3_w_valid;
	assign Int_sram_axi_s3.BReady = sram_axi_s3_b_ready;
	assign Int_sram_axi_s3.AwReady = sram_axi_s3_aw_ready;
	assign Int_sram_axi_s3.RstN = u_e741_Clk_RstN;
	assign Int_sram_axi_s3.BId = { 12'b0 , sram_axi_s3_b_id };
	assign Int_sram_axi_s3.ArSize = { 1'b0 , sram_axi_s3_ar_size };
	assign Int_sram_axi_s3.AwAddr = { 32'b0 , sram_axi_s3_aw_addr };
	assign Int_sram_axi_s3.ArDomain = 2'b0;
	assign Int_sram_axi_s3.BUser = 256'b0;
	assign Int_sram_axi_s3.AwSize = { 1'b0 , sram_axi_s3_aw_size };
	assign Int_sram_axi_s3.ArQos = 4'b0;
	assign Int_sram_axi_s3.AwDomain = 2'b0;
	assign Int_sram_axi_s3.WData = { 992'b0 , sram_axi_s3_w_data };
	assign Int_sram_axi_s3.AwLen = { 4'b0 , sram_axi_s3_aw_len };
	assign Int_sram_axi_s3.RValid = sram_axi_s3_r_valid;
	assign Int_sram_axi_s3.RData = { 992'b0 , sram_axi_s3_r_data };
	assign Int_sram_axi_s3.AwBurst = sram_axi_s3_aw_burst;
	assign Int_sram_axi_s3.WId = 16'b0;
	assign Int_sram_axi_s3.BResp = sram_axi_s3_b_resp;
	assign Int_sram_axi_s3.AwCache = sram_axi_s3_aw_cache;
	assign Int_sram_axi_s3.AwSnoop = 3'b0;
	assign Int_sram_axi_s3.ArRegion = 4'b0;
	assign Int_sram_axi_s3.AwUser = 256'b0;
	assign Int_sram_axi_s3.AwAtop = 6'b0;
	assign Int_sram_axi_s3.ArUser = 256'b0;
	assign Int_sram_axi_s3.ArProt = sram_axi_s3_ar_prot;
	assign Int_sram_axi_s3.ArCache = sram_axi_s3_ar_cache;
	assign Int_sram_axi_s3.RLast = sram_axi_s3_r_last;
	assign Int_sram_axi_s3.AwValid = sram_axi_s3_aw_valid;
	assign Int_sram_axi_s3.AwQos = 4'b0;
	assign Int_sram_axi_s3.ArValid = sram_axi_s3_ar_valid;
	assign Int_sram_axi_s3.AwProt = sram_axi_s3_aw_prot;
	assign Int_sram_axi_s3.RUser = 256'b0;
	assign Int_sram_axi_s3.ArSnoop = 4'b0;
	assign Int_sram_axi_s3.AwRegion = 4'b0;
	assign Int_sram_axi_s3.BValid = sram_axi_s3_b_valid;
	assign Int_usb_axi_m0.ArBar = 2'b0;
	assign Int_usb_axi_m0.ArAddr = { 32'b0 , usb_axi_m0_ar_addr };
	assign Int_I2C_apb_s0.ReqUser = 256'b0;
	assign Int_usb_axi_m0.AwBar = 2'b0;
	assign Int_usb_axi_m0.Clk = u_b0c_Clk;
	assign Int_usb_axi_m0.ArBurst = usb_axi_m0_ar_burst;
	assign Int_usb_axi_m0.AwLock = { 1'b0 , usb_axi_m0_aw_lock };
	assign Int_usb_axi_m0.RResp = usb_axi_m0_r_resp;
	assign Int_usb_axi_m0.WReady = usb_axi_m0_w_ready;
	assign Int_usb_axi_m0.ArLen = { 4'b0 , usb_axi_m0_ar_len };
	assign Int_usb_axi_m0.ArId = { 12'b0 , usb_axi_m0_ar_id };
	assign Int_usb_axi_m0.WStrb = { 124'b0 , usb_axi_m0_w_strb };
	assign Int_usb_axi_m0.RId = { 12'b0 , usb_axi_m0_r_id };
	assign Int_usb_axi_m0.AwId = { 12'b0 , usb_axi_m0_aw_id };
	assign Int_usb_axi_m0.RReady = usb_axi_m0_r_ready;
	assign Int_usb_axi_m0.ArLock = { 1'b0 , usb_axi_m0_ar_lock };
	assign Int_usb_axi_m0.WLast = usb_axi_m0_w_last;
	assign Int_DMA_apb_s0.PAddr = { 4'b0 , DMA_apb_s0_paddr };
	assign Int_usb_axi_m0.ArReady = usb_axi_m0_ar_ready;
	assign Int_usb_axi_m0.WValid = usb_axi_m0_w_valid;
	assign Int_usb_axi_m0.BReady = usb_axi_m0_b_ready;
	assign Int_usb_axi_m0.AwReady = usb_axi_m0_aw_ready;
	assign Int_usb_axi_m0.RstN = u_b0c_Clk_RstN;
	assign Int_usb_axi_m0.BId = { 12'b0 , usb_axi_m0_b_id };
	assign Int_usb_axi_m0.ArSize = { 1'b0 , usb_axi_m0_ar_size };
	assign Int_I2C_apb_s0.PSlvErr = I2C_apb_s0_pslverr;
	assign Int_usb_axi_m0.AwAddr = { 32'b0 , usb_axi_m0_aw_addr };
	assign Int_usb_axi_m0.ArDomain = 2'b0;
	assign Int_usb_axi_m0.BUser = 256'b0;
	assign Int_usb_axi_m0.AwSize = { 1'b0 , usb_axi_m0_aw_size };
	assign Int_usb_axi_m0.ArQos = 4'b0;
	assign Int_usb_axi_m0.AwDomain = 2'b0;
	assign Int_usb_axi_m0.WData = { 992'b0 , usb_axi_m0_w_data };
	assign Int_usb_axi_m0.AwLen = { 4'b0 , usb_axi_m0_aw_len };
	assign Int_usb_axi_m0.RValid = usb_axi_m0_r_valid;
	assign Int_usb_axi_m0.RData = { 992'b0 , usb_axi_m0_r_data };
	assign Int_usb_axi_m0.AwBurst = usb_axi_m0_aw_burst;
	assign Int_usb_axi_m0.WId = 16'b0;
	assign Int_usb_axi_m0.BResp = usb_axi_m0_b_resp;
	assign Int_usb_axi_m0.AwCache = usb_axi_m0_aw_cache;
	assign Int_I2C_apb_s0.RstN = u_b0c_Clk_RstN;
	assign Int_usb_axi_m0.AwSnoop = 3'b0;
	assign Int_usb_axi_m0.ArRegion = 4'b0;
	assign Int_usb_axi_m0.AwUser = 256'b0;
	assign Int_usb_axi_m0.AwAtop = 6'b0;
	assign Int_usb_axi_m0.ArUser = 256'b0;
	assign Int_usb_axi_m0.ArProt = usb_axi_m0_ar_prot;
	assign Int_usb_axi_m0.ArCache = usb_axi_m0_ar_cache;
	assign Int_usb_axi_m0.RLast = usb_axi_m0_r_last;
	assign Int_usb_axi_m0.AwValid = usb_axi_m0_aw_valid;
	assign Int_usb_axi_m0.AwQos = 4'b0;
	assign Int_usb_axi_m0.ArValid = usb_axi_m0_ar_valid;
	assign Int_usb_axi_m0.AwProt = usb_axi_m0_aw_prot;
	assign Int_usb_axi_m0.RUser = 256'b0;
	assign Int_usb_axi_m0.ArSnoop = 4'b0;
	assign Int_usb_axi_m0.AwRegion = 4'b0;
	assign Int_usb_axi_m0.BValid = usb_axi_m0_b_valid;
	assign Int_I2C_apb_s0.PProt = 3'b0;
	assign Int_ACPU_WDT.PRDataInfo = 32'b0;
	assign Int_DMA_apb_s0.PEnable = DMA_apb_s0_penable;
	assign Int_I2C_apb_s0.PAddr = { 4'b0 , I2C_apb_s0_paddr };
	assign Int_DMA_apb_s0.PStrb = DMA_apb_s0_pwbe;
	assign Int_I2C_apb_s0.PEnable = I2C_apb_s0_penable;
	assign Int_I2C_apb_s0.PStrb = I2C_apb_s0_pwbe;
	assign Int_I2C_apb_s0.PWDataInfo = 32'b0;
	assign Int_DMA_apb_s0.PWDataInfo = 32'b0;
	assign Int_I2C_apb_s0.PSel = I2C_apb_s0_psel;
	assign Int_I2C_apb_s0.PReady = I2C_apb_s0_pready;
	assign Int_PUFCC_apb_s0.PWDataInfo = 32'b0;
	assign Int_DMA_apb_s0.PSel = DMA_apb_s0_psel;
	assign Int_I2C_apb_s0.PRDataInfo = 32'b0;
	assign Int_I2C_apb_s0.Clk = u_b0c_Clk;
	assign Int_I2C_apb_s0.PRData = I2C_apb_s0_prdata;
	assign Int_DMA_apb_s0.PReady = DMA_apb_s0_pready;
	assign Int_ACPU_WDT.Clk = u_b0c_Clk;
	assign Int_I2C_apb_s0.PWrite = I2C_apb_s0_pwrite;
	assign Int_I2C_apb_s0.PWData = I2C_apb_s0_pwdata;
	assign Int_DMA_apb_s0.PRDataInfo = 32'b0;
	assign Int_DMA_apb_s0.Clk = u_991a_Clk;
	assign Int_DMA_apb_s0.PRData = DMA_apb_s0_prdata;
	assign Int_ACPU_WDT.PRData = ACPU_WDT_PRData;
	assign Int_MBOX_apb_s0.ReqUser = 256'b0;
	assign Int_ACPU_WDT.PWrite = ACPU_WDT_PWrite;
	assign Int_MBOX_apb_s0.PSlvErr = MBOX_apb_s0_pslverr;
	assign Int_MBOX_apb_s0.RstN = u_b0c_Clk_RstN;
	assign Int_MBOX_apb_s0.PProt = 3'b0;
	assign Int_PUFCC_apb_s0.PSel = PUFCC_apb_s0_PSel;
	assign Int_MBOX_apb_s0.PAddr = { 4'b0 , MBOX_apb_s0_paddr };
	assign Int_MBOX_apb_s0.PEnable = MBOX_apb_s0_penable;
	assign Int_MBOX_apb_s0.PStrb = MBOX_apb_s0_pwbe;
	assign Int_MBOX_apb_s0.PWDataInfo = 32'b0;
	assign Int_MBOX_apb_s0.PSel = MBOX_apb_s0_psel;
	assign Int_MBOX_apb_s0.PReady = MBOX_apb_s0_pready;
	assign Int_ACPU_WDT.PWData = ACPU_WDT_PWData;
	assign Int_MBOX_apb_s0.PRDataInfo = 32'b0;
	assign Int_MBOX_apb_s0.Clk = u_b0c_Clk;
	assign Int_MBOX_apb_s0.PRData = MBOX_apb_s0_prdata;
	assign Int_MBOX_apb_s0.PWrite = MBOX_apb_s0_pwrite;
	assign Int_MBOX_apb_s0.PWData = MBOX_apb_s0_pwdata;
	assign Int_PUFCC_apb_s0.PSlvErr = PUFCC_apb_s0_PSlvErr;
	assign Int_PUFCC_apb_s0.PReady = PUFCC_apb_s0_PReady;
	assign Int_UART_apb_s0.ReqUser = 256'b0;
	assign Int_UART_apb_s0.PSlvErr = UART_apb_s0_pslverr;
	assign Int_UART_apb_s0.RstN = u_b0c_Clk_RstN;
	assign Int_UART_apb_s0.PProt = 3'b0;
	assign Int_UART_apb_s0.PAddr = { 4'b0 , UART_apb_s0_paddr };
	assign Int_UART_apb_s0.PEnable = UART_apb_s0_penable;
	assign Int_UART_apb_s0.PStrb = UART_apb_s0_pwbe;
	assign Int_UART_apb_s0.PWDataInfo = 32'b0;
	assign Int_UART_apb_s0.PSel = UART_apb_s0_psel;
	assign Int_UART_apb_s0.PReady = UART_apb_s0_pready;
	assign Int_UART_apb_s0.PRDataInfo = 32'b0;
	assign Int_UART_apb_s0.Clk = u_b0c_Clk;
	assign Int_UART_apb_s0.PRData = UART_apb_s0_prdata;
	assign Int_UART_apb_s0.PWrite = UART_apb_s0_pwrite;
	assign Int_UART_apb_s0.PWData = UART_apb_s0_pwdata;
	assign Int_PUFCC_apb_s0.PRDataInfo = 32'b0;
	assign Int_UART_apb_s1.ReqUser = 256'b0;
	assign Int_UART_apb_s1.PSlvErr = UART_apb_s1_pslverr;
	assign Int_UART_apb_s1.RstN = u_b0c_Clk_RstN;
	assign Int_UART_apb_s1.PProt = 3'b0;
	assign Int_UART_apb_s1.PAddr = { 4'b0 , UART_apb_s1_paddr };
	assign Int_UART_apb_s1.PEnable = UART_apb_s1_penable;
	assign Int_UART_apb_s1.PStrb = UART_apb_s1_pwbe;
	assign Int_UART_apb_s1.PWDataInfo = 32'b0;
	assign Int_UART_apb_s1.PSel = UART_apb_s1_psel;
	assign Int_UART_apb_s1.PReady = UART_apb_s1_pready;
	assign Int_UART_apb_s1.PRDataInfo = 32'b0;
	assign Int_UART_apb_s1.Clk = u_b0c_Clk;
	assign Int_UART_apb_s1.PRData = UART_apb_s1_prdata;
	assign Int_PUFCC_apb_s0.Clk = u_b0c_Clk;
	assign Int_UART_apb_s1.PWrite = UART_apb_s1_pwrite;
	assign Int_UART_apb_s1.PWData = UART_apb_s1_pwdata;
	assign Int_PUFCC_apb_s0.ReqUser = 256'b0;
	assign Int_PUFCC_apb_s0.PRData = PUFCC_apb_s0_PRData;
	assign Int_PUFCC_apb_s0.PWrite = PUFCC_apb_s0_PWrite;
	assign Int_PUFCC_apb_s0.PWData = PUFCC_apb_s0_PWData;
	initial begin
		`include "anvu_uvm_macros.sv"
		import uvm_pkg::*;
		import anvu_commons_pkg::*;
		`ANVU_SET_CONFIG( virtual anvu_apb_if , Int_DMA_apb_s0 , "DMA_apb_s0_nocAipIf");
		`ANVU_SET_CONFIG( virtual anvu_apb_if , Int_FCB_apb_s0 , "FCB_apb_s0_nocAipIf");
		`ANVU_SET_CONFIG( virtual anvu_apb_if , Int_PUFCC_apb_s0 , "PUFCC_apb_s0_nocAipIf");
		`ANVU_SET_CONFIG( virtual anvu_apb_if , Int_UART_apb_s1 , "UART_apb_s1_nocAipIf");
		`ANVU_SET_CONFIG( virtual anvu_apb_if , Int_UART_apb_s0 , "UART_apb_s0_nocAipIf");
		`ANVU_SET_CONFIG( virtual anvu_apb_if , Int_MBOX_apb_s0 , "MBOX_apb_s0_nocAipIf");
		`ANVU_SET_CONFIG( virtual anvu_apb_if , Int_I2C_apb_s0 , "I2C_apb_s0_nocAipIf");
		`ANVU_SET_CONFIG( virtual anvu_apb_if , Int_GPT_apb_s0 , "GPT_apb_s0_nocAipIf");
		`ANVU_SET_CONFIG( virtual anvu_apb_if , Int_GPIO_apb_s0 , "GPIO_apb_s0_nocAipIf");
		`ANVU_SET_CONFIG( virtual anvu_apb_if , Int_SCU , "SCU_nocAipIf");
		`ANVU_SET_CONFIG( virtual anvu_apb_if , Int_BCPU_WDT , "BCPU_WDT_nocAipIf");
		`ANVU_SET_CONFIG( virtual anvu_apb_if , Int_ACPU_WDT , "ACPU_WDT_nocAipIf");
		`ANVU_SET_CONFIG( virtual anvu_ahb_if , Int_SPI_ahb_s0 , "SPI_ahb_s0_nocAipIf");
		`ANVU_SET_CONFIG( virtual anvu_ahb_if , Int_SPI_mem_ahb , "SPI_mem_ahb_nocAipIf");
		`ANVU_SET_CONFIG( virtual anvu_axi_if , Int_USB_axi_s0 , "USB_axi_s0_nocAipIf");
		`ANVU_SET_CONFIG( virtual anvu_axi_if , Int_acpu_axi_m0 , "acpu_axi_m0_nocAipIf");
		`ANVU_SET_CONFIG( virtual anvu_axi_if , Int_arm_axi_m0 , "arm_axi_m0_nocAipIf");
		`ANVU_SET_CONFIG( virtual anvu_ahb_if , Int_bcpu_ahb_m0 , "bcpu_ahb_m0_nocAipIf");
		`ANVU_SET_CONFIG( virtual anvu_axi_if , Int_ddr_axi_s0 , "ddr_axi_s0_nocAipIf");
		`ANVU_SET_CONFIG( virtual anvu_axi_if , Int_ddr_axi_s1 , "ddr_axi_s1_nocAipIf");
		`ANVU_SET_CONFIG( virtual anvu_axi_if , Int_ddr_axi_s2 , "ddr_axi_s2_nocAipIf");
		`ANVU_SET_CONFIG( virtual anvu_axi_if , Int_ddr_axi_s3 , "ddr_axi_s3_nocAipIf");
		`ANVU_SET_CONFIG( virtual anvu_axi_if , Int_ddr_axil_s0 , "ddr_axil_s0_nocAipIf");
		`ANVU_SET_CONFIG( virtual anvu_axi_if , Int_dma_axi_m0 , "dma_axi_m0_nocAipIf");
		`ANVU_SET_CONFIG( virtual anvu_axi_if , Int_dma_axi_m1 , "dma_axi_m1_nocAipIf");
		`ANVU_SET_CONFIG( virtual anvu_ahb_if , Int_fpga_ahb_s0 , "fpga_ahb_s0_nocAipIf");
		`ANVU_SET_CONFIG( virtual anvu_axi_if , Int_fpga_axi_m0 , "fpga_axi_m0_nocAipIf");
		`ANVU_SET_CONFIG( virtual anvu_axi_if , Int_fpga_axi_m1 , "fpga_axi_m1_nocAipIf");
		`ANVU_SET_CONFIG( virtual anvu_apb_if , Int_gbe_apb_s0 , "gbe_apb_s0_nocAipIf");
		`ANVU_SET_CONFIG( virtual anvu_axi_if , Int_gbe_axi_m0 , "gbe_axi_m0_nocAipIf");
		`ANVU_SET_CONFIG( virtual anvu_axi_if , Int_pufcc_axi_m0 , "pufcc_axi_m0_nocAipIf");
		`ANVU_SET_CONFIG( virtual anvu_axi_if , Int_sram_axi_s0 , "sram_axi_s0_nocAipIf");
		`ANVU_SET_CONFIG( virtual anvu_axi_if , Int_sram_axi_s1 , "sram_axi_s1_nocAipIf");
		`ANVU_SET_CONFIG( virtual anvu_axi_if , Int_sram_axi_s2 , "sram_axi_s2_nocAipIf");
		`ANVU_SET_CONFIG( virtual anvu_axi_if , Int_sram_axi_s3 , "sram_axi_s3_nocAipIf");
		`ANVU_SET_CONFIG( virtual anvu_axi_if , Int_usb_axi_m0 , "usb_axi_m0_nocAipIf");
	end
endmodule

`timescale 1ps/1ps
module anvu_uvmTestEnv_Top ( );
	wire              [31:0]  u_HAddr                               ;
	wire              [2:0]   u_HBurst                              ;
	wire                      u_HMastLock                           ;
	wire              [3:0]   u_HProt                               ;
	wire              [31:0]  u_HRData                              ;
	wire                      u_HReady                              ;
	wire                      u_HResp                               ;
	wire                      u_HSel                                ;
	wire              [2:0]   u_HSize                               ;
	wire              [1:0]   u_HTrans                              ;
	wire              [3:0]   u_HWBe                                ;
	wire              [31:0]  u_HWData                              ;
	wire                      u_HWrite                              ;
	wire              [1:0]   u_1042                                ;
	wire              [3:0]   u_1055                                ;
	wire                      u_1065                                ;
	wire                      u_11d5                                ;
	wire                      u_1263                                ;
	wire              [31:0]  u_1397                                ;
	wire              [2:0]   u_1497                                ;
	wire                      u_149b                                ;
	wire                      u_1584                                ;
	wire              [3:0]   u_15b                                 ;
	wire              [1:0]   u_15c6                                ;
	wire                      u_16ce                                ;
	wire              [3:0]   u_16db                                ;
	wire              [3:0]   u_177e                                ;
	wire              [1:0]   u_178e                                ;
	wire                      u_182                                 ;
	wire              [2:0]   u_186e                                ;
	wire                      u_190e                                ;
	wire                      u_1a01                                ;
	wire                      u_1a93                                ;
	wire              [31:0]  u_1af0                                ;
	wire              [1:0]   u_1b5b                                ;
	wire              [1:0]   u_1bc1                                ;
	wire              [31:0]  u_1c0a                                ;
	wire              [31:0]  u_1f0c                                ;
	wire              [1:0]   u_1f23                                ;
	wire                      u_1f74                                ;
	wire              [2:0]   u_1fba                                ;
	wire              [31:0]  u_20b                                 ;
	wire                      u_212f                                ;
	wire              [3:0]   u_21d                                 ;
	wire              [31:0]  u_21e4                                ;
	wire              [1:0]   u_2216                                ;
	wire                      u_2317                                ;
	wire                      u_235b                                ;
	wire              [31:0]  u_239                                 ;
	wire              [1:0]   u_23db                                ;
	wire              [31:0]  u_23f8                                ;
	wire              [3:0]   u_2478                                ;
	wire              [1:0]   u_24bf                                ;
	wire                      u_256d                                ;
	wire              [3:0]   u_263f                                ;
	wire              [31:0]  u_2736_HAddr                          ;
	wire              [2:0]   u_2736_HBurst                         ;
	wire                      u_2736_HMastLock                      ;
	wire              [3:0]   u_2736_HProt                          ;
	wire              [31:0]  u_2736_HRData                         ;
	wire                      u_2736_HReady                         ;
	wire                      u_2736_HResp                          ;
	wire                      u_2736_HSel                           ;
	wire              [2:0]   u_2736_HSize                          ;
	wire              [1:0]   u_2736_HTrans                         ;
	wire              [3:0]   u_2736_HWBe                           ;
	wire              [31:0]  u_2736_HWData                         ;
	wire                      u_2736_HWrite                         ;
	wire              [31:0]  u_27c2                                ;
	wire              [31:0]  u_27c8                                ;
	wire              [31:0]  u_27d3                                ;
	wire                      u_27ef                                ;
	wire                      u_2804                                ;
	wire                      u_288b                                ;
	wire              [3:0]   u_28b7                                ;
	wire              [3:0]   u_2ae8                                ;
	wire                      u_2c5a                                ;
	wire              [3:0]   u_2d29                                ;
	wire              [1:0]   u_2d64                                ;
	wire              [127:0] u_2fab                                ;
	wire              [2:0]   u_3431                                ;
	wire              [2:0]   u_344d                                ;
	wire              [31:0]  u_3507                                ;
	wire              [31:0]  u_3572                                ;
	wire                      u_3579                                ;
	wire              [2:0]   u_3740                                ;
	wire              [1:0]   u_37e3                                ;
	wire                      u_37ff                                ;
	wire              [3:0]   u_38da                                ;
	wire              [1:0]   u_3b9a                                ;
	wire              [15:0]  u_3bac                                ;
	wire              [2:0]   u_3bdb                                ;
	wire              [31:0]  u_3d7a                                ;
	wire              [15:0]  u_3de8                                ;
	wire                      u_3dfb                                ;
	wire              [3:0]   u_3e13                                ;
	wire              [31:0]  u_417_HAddr                           ;
	wire              [2:0]   u_417_HBurst                          ;
	wire                      u_417_HMastLock                       ;
	wire              [3:0]   u_417_HProt                           ;
	wire              [31:0]  u_417_HRData                          ;
	wire                      u_417_HReady                          ;
	wire                      u_417_HResp                           ;
	wire                      u_417_HSel                            ;
	wire              [2:0]   u_417_HSize                           ;
	wire              [1:0]   u_417_HTrans                          ;
	wire              [3:0]   u_417_HWBe                            ;
	wire              [31:0]  u_417_HWData                          ;
	wire                      u_417_HWrite                          ;
	wire                      u_41a3                                ;
	wire              [1:0]   u_41ab                                ;
	wire                      u_41c4                                ;
	wire              [1:0]   u_42e1                                ;
	wire              [2:0]   u_431e                                ;
	wire                      u_44c9                                ;
	wire              [2:0]   u_460f                                ;
	wire                      u_4625                                ;
	wire                      u_46b1                                ;
	wire              [31:0]  u_47d1                                ;
	wire              [31:0]  u_4833                                ;
	wire                      u_492e                                ;
	wire                      u_49be                                ;
	wire              [31:0]  u_4a17                                ;
	wire                      u_4b4e                                ;
	wire                      u_4b6f                                ;
	wire                      u_4b70                                ;
	wire              [1:0]   u_4c11                                ;
	wire                      u_4ccb                                ;
	wire              [2:0]   u_4dbb                                ;
	wire              [3:0]   u_4fa2                                ;
	wire                      u_4fcc                                ;
	wire                      u_4fcc_ClkS                           ;
	wire                      u_4fcc_En                             ;
	wire                      u_4fcc_EnS                            ;
	wire                      u_4fcc_RetRstN                        ;
	wire                      u_4fcc_RstN                           ;
	wire                      u_4fcc_Tm                             ;
	wire                      u_50ba                                ;
	wire              [2:0]   u_520c                                ;
	wire                      u_52d9                                ;
	wire              [3:0]   u_5446                                ;
	wire              [3:0]   u_5479                                ;
	wire              [127:0] u_54d2                                ;
	wire                      u_54f9                                ;
	wire                      u_55b0                                ;
	wire                      u_55cf                                ;
	wire              [3:0]   u_5601                                ;
	wire              [3:0]   u_563                                 ;
	wire              [31:0]  u_5694                                ;
	wire              [1:0]   u_56d1                                ;
	wire              [3:0]   u_5706                                ;
	wire              [1:0]   u_570c                                ;
	wire              [31:0]  u_58f9                                ;
	wire              [3:0]   u_596                                 ;
	wire                      u_59cf                                ;
	wire                      u_59cf_ClkS                           ;
	wire                      u_59cf_En                             ;
	wire                      u_59cf_EnS                            ;
	wire                      u_59cf_RetRstN                        ;
	wire                      u_59cf_RstN                           ;
	wire                      u_59cf_Tm                             ;
	wire              [2:0]   u_5a3c                                ;
	wire                      u_5b11                                ;
	wire                      u_5bdd                                ;
	wire                      u_5ce2                                ;
	wire              [2:0]   u_5d9d                                ;
	wire                      u_5dac                                ;
	wire              [2:0]   u_5dae                                ;
	wire                      u_5ddf                                ;
	wire                      u_5de9                                ;
	wire              [1:0]   u_5e2a                                ;
	wire                      u_5e5d                                ;
	wire              [31:0]  u_5ead                                ;
	wire                      u_5f6c                                ;
	wire              [3:0]   u_5f9d                                ;
	wire              [3:0]   u_5fc9                                ;
	wire                      u_6000                                ;
	wire              [3:0]   u_605d                                ;
	wire              [3:0]   u_60e5                                ;
	wire              [2:0]   u_61                                  ;
	wire              [2:0]   u_610f                                ;
	wire              [3:0]   u_6131                                ;
	wire              [31:0]  u_63cd                                ;
	wire                      u_6457                                ;
	wire              [3:0]   u_6538                                ;
	wire                      u_664                                 ;
	wire                      u_66ce_2162                           ;
	wire              [3:0]   u_66ec                                ;
	wire                      u_6762                                ;
	wire              [3:0]   u_67e2                                ;
	wire                      u_680                                 ;
	wire                      u_68c4                                ;
	wire              [3:0]   u_697e                                ;
	wire                      u_69b4                                ;
	wire                      u_6bf9                                ;
	wire              [1:0]   u_6c75                                ;
	wire              [3:0]   u_6c92                                ;
	wire                      u_6ccf                                ;
	wire              [1:0]   u_6d49                                ;
	wire                      u_6df0                                ;
	wire                      u_6ead                                ;
	wire              [31:0]  u_6ef6                                ;
	wire              [3:0]   u_70ee                                ;
	wire                      u_7132                                ;
	wire                      u_7134                                ;
	wire              [31:0]  u_71cb                                ;
	wire              [1:0]   u_725c                                ;
	wire              [2:0]   u_7303                                ;
	wire                      u_73c2                                ;
	wire                      u_7703                                ;
	wire                      u_77d7                                ;
	wire                      u_791                                 ;
	wire                      u_7943                                ;
	wire              [31:0]  u_799f                                ;
	wire              [3:0]   u_79a                                 ;
	wire                      u_7ad2                                ;
	wire                      u_7c40                                ;
	wire                      u_7cbc                                ;
	wire                      u_7d61                                ;
	wire                      u_7d6a                                ;
	wire              [31:0]  u_7d7b                                ;
	wire                      u_7e5c                                ;
	wire              [31:0]  u_7ed8                                ;
	wire                      u_7f78                                ;
	wire              [2:0]   u_7f95                                ;
	wire              [2:0]   u_7fa6                                ;
	wire                      u_7fe0                                ;
	wire                      u_7fe0_ClkS                           ;
	wire                      u_7fe0_En                             ;
	wire                      u_7fe0_EnS                            ;
	wire                      u_7fe0_RetRstN                        ;
	wire                      u_7fe0_RstN                           ;
	wire                      u_7fe0_Tm                             ;
	wire              [31:0]  u_8085                                ;
	wire                      u_80b0                                ;
	wire                      u_80e9                                ;
	wire                      u_8261                                ;
	wire              [31:0]  u_8296                                ;
	wire              [2:0]   u_8315                                ;
	wire              [3:0]   u_8332                                ;
	wire              [3:0]   u_83ad                                ;
	wire                      u_847f                                ;
	wire              [3:0]   u_854e                                ;
	wire                      u_85c0                                ;
	wire                      u_861f                                ;
	wire              [31:0]  u_86fb                                ;
	wire              [31:0]  u_8883                                ;
	wire              [3:0]   u_8937                                ;
	wire              [3:0]   u_8951                                ;
	wire                      u_89ae                                ;
	wire              [3:0]   u_89d6                                ;
	wire              [31:0]  u_8a64                                ;
	wire              [31:0]  u_8a97                                ;
	wire              [15:0]  u_8ea2                                ;
	wire                      u_8f76                                ;
	wire                      u_907c                                ;
	wire                      u_90f2                                ;
	wire                      u_9218                                ;
	wire              [3:0]   u_9332                                ;
	wire              [3:0]   u_9496                                ;
	wire              [31:0]  u_94c8                                ;
	wire              [3:0]   u_9516                                ;
	wire              [31:0]  u_95d8                                ;
	wire              [2:0]   u_966c                                ;
	wire              [3:0]   u_96d7                                ;
	wire              [2:0]   u_96ee                                ;
	wire              [2:0]   u_9765                                ;
	wire              [3:0]   u_9794                                ;
	wire              [3:0]   u_9807                                ;
	wire                      u_9853                                ;
	wire                      u_995b                                ;
	wire              [2:0]   u_9ac8                                ;
	wire              [31:0]  u_9b8f                                ;
	wire                      u_9ba7                                ;
	wire              [3:0]   u_9c91                                ;
	wire              [31:0]  u_9d9a                                ;
	wire              [2:0]   u_9e51                                ;
	wire              [3:0]   u_9e5a                                ;
	wire              [3:0]   u_9ebc                                ;
	wire              [31:0]  u_9f71                                ;
	wire                      u_9fd3                                ;
	wire              [3:0]   u_a1d5                                ;
	wire                      u_a1df                                ;
	wire                      u_a2bd                                ;
	wire                      u_a2fe                                ;
	wire                      u_a335                                ;
	wire              [31:0]  u_a410                                ;
	wire                      u_a426                                ;
	wire              [3:0]   u_a470                                ;
	wire              [3:0]   u_a56e                                ;
	wire                      u_a5d7                                ;
	wire                      u_a63f                                ;
	wire                      u_a826                                ;
	wire              [3:0]   u_a82a                                ;
	wire              [3:0]   u_a922                                ;
	wire              [3:0]   u_aa6a                                ;
	wire              [2:0]   u_aaa1                                ;
	wire                      u_ab37                                ;
	wire              [3:0]   u_ac5e                                ;
	wire                      u_ac7f                                ;
	wire              [3:0]   u_ad45                                ;
	wire                      u_adae                                ;
	wire              [63:0]  u_ae3f                                ;
	wire                      u_af5                                 ;
	wire              [1:0]   u_af5d                                ;
	wire                      u_afb2                                ;
	wire                      u_afb2_ClkS                           ;
	wire                      u_afb2_En                             ;
	wire                      u_afb2_EnS                            ;
	wire                      u_afb2_RetRstN                        ;
	wire                      u_afb2_RstN                           ;
	wire                      u_afb2_Tm                             ;
	wire              [3:0]   u_b0ed                                ;
	wire              [31:0]  u_b178                                ;
	wire              [3:0]   u_b293                                ;
	wire              [3:0]   u_b2f5                                ;
	wire                      u_b32c                                ;
	wire              [2:0]   u_b343                                ;
	wire              [3:0]   u_b40                                 ;
	wire              [3:0]   u_b532                                ;
	wire                      u_b55e                                ;
	wire              [3:0]   u_b55f                                ;
	wire              [3:0]   u_b69b                                ;
	wire                      u_b792                                ;
	wire              [31:0]  u_b805                                ;
	wire              [3:0]   u_b9d2                                ;
	wire              [2:0]   u_bcc6                                ;
	wire                      u_be31                                ;
	wire              [2:0]   u_be47                                ;
	wire                      u_bf64                                ;
	wire              [3:0]   u_c119                                ;
	wire              [31:0]  u_c164                                ;
	wire              [2:0]   u_c26a                                ;
	wire              [31:0]  u_c287                                ;
	wire              [2:0]   u_c2f4                                ;
	wire              [3:0]   u_c30d                                ;
	wire              [2:0]   u_c39c                                ;
	wire              [2:0]   u_c420                                ;
	wire              [3:0]   u_c598                                ;
	wire              [1:0]   u_c5ed                                ;
	wire              [3:0]   u_c640                                ;
	wire              [63:0]  u_c693                                ;
	wire              [127:0] u_c6b4                                ;
	wire              [2:0]   u_c6bd                                ;
	wire              [31:0]  u_c709                                ;
	wire              [1:0]   u_c740                                ;
	wire                      u_c974                                ;
	wire              [1:0]   u_c996                                ;
	wire              [31:0]  u_c9ec                                ;
	wire              [15:0]  u_ca2d                                ;
	wire                      u_cb43                                ;
	wire                      u_cb43_ClkS                           ;
	wire                      u_cb43_En                             ;
	wire                      u_cb43_EnS                            ;
	wire                      u_cb43_RetRstN                        ;
	wire                      u_cb43_RstN                           ;
	wire                      u_cb43_Tm                             ;
	wire              [3:0]   u_cbbd                                ;
	wire                      u_cbc0                                ;
	wire              [2:0]   u_cc26                                ;
	wire              [1:0]   u_ccad                                ;
	wire              [3:0]   u_ccbc                                ;
	wire                      u_ccbe                                ;
	wire                      u_cd43                                ;
	wire              [2:0]   u_cd4b                                ;
	wire                      u_cd55                                ;
	wire                      u_cd9b                                ;
	wire                      u_cd9b_ClkS                           ;
	wire                      u_cd9b_En                             ;
	wire                      u_cd9b_EnS                            ;
	wire                      u_cd9b_RetRstN                        ;
	wire                      u_cd9b_RstN                           ;
	wire                      u_cd9b_Tm                             ;
	wire                      u_cdaa                                ;
	wire              [1:0]   u_ce3e                                ;
	wire                      u_ce7d                                ;
	wire              [31:0]  u_d04c                                ;
	wire              [3:0]   u_d1ec                                ;
	wire              [31:0]  u_d28a                                ;
	wire              [1:0]   u_d3e                                 ;
	wire              [63:0]  u_d45c                                ;
	wire                      u_d4e5                                ;
	wire              [31:0]  u_d4fe                                ;
	wire              [3:0]   u_d500                                ;
	wire              [3:0]   u_d516                                ;
	wire                      u_d52b                                ;
	wire                      u_d5e8                                ;
	wire                      u_d63                                 ;
	wire              [31:0]  u_d630                                ;
	wire              [127:0] u_d759                                ;
	wire              [3:0]   u_d7f3                                ;
	wire              [2:0]   u_d8b                                 ;
	wire              [15:0]  u_d987                                ;
	wire              [1:0]   u_dab1                                ;
	wire                      u_db21                                ;
	wire                      u_dc24                                ;
	wire                      u_dd91                                ;
	wire                      u_dee5                                ;
	wire              [31:0]  u_e05e                                ;
	wire              [2:0]   u_e0bd                                ;
	wire              [2:0]   u_e119                                ;
	wire              [1:0]   u_e121                                ;
	wire                      u_e1a0                                ;
	wire              [3:0]   u_e1b8                                ;
	wire              [31:0]  u_e207                                ;
	wire              [31:0]  u_e277                                ;
	wire              [2:0]   u_e33c                                ;
	wire                      u_e400                                ;
	wire                      u_e45                                 ;
	wire              [31:0]  u_e45_4130                            ;
	wire              [31:0]  u_e4a0                                ;
	wire              [31:0]  u_e57e                                ;
	wire              [1:0]   u_e619                                ;
	wire              [3:0]   u_e628                                ;
	wire                      u_e646                                ;
	wire                      u_e673                                ;
	wire              [3:0]   u_e6a6                                ;
	wire              [1:0]   u_e7a5                                ;
	wire              [31:0]  u_e8d9                                ;
	wire              [31:0]  u_ea4                                 ;
	wire              [31:0]  u_eb16                                ;
	wire                      u_ed6e                                ;
	wire              [31:0]  u_eed1                                ;
	wire              [31:0]  u_ef3b                                ;
	wire              [2:0]   u_ef6e                                ;
	wire              [1:0]   u_ef7e                                ;
	wire                      u_ef86                                ;
	wire              [3:0]   u_f1cd                                ;
	wire                      u_f214                                ;
	wire                      u_f218                                ;
	wire                      u_f2d8                                ;
	wire                      u_f402                                ;
	wire                      u_f406                                ;
	wire                      u_f450                                ;
	wire                      u_f4b6                                ;
	wire              [3:0]   u_f4e9                                ;
	wire              [3:0]   u_f5c4                                ;
	wire              [2:0]   u_f5ca                                ;
	wire              [2:0]   u_f612                                ;
	wire                      u_f630                                ;
	wire              [31:0]  u_f6a3                                ;
	wire                      u_f6d4                                ;
	wire                      u_f6da                                ;
	wire              [31:0]  u_f715                                ;
	wire              [3:0]   u_f7e5                                ;
	wire                      u_f808                                ;
	wire                      u_f872                                ;
	wire              [31:0]  u_f8f7                                ;
	wire              [31:0]  u_f91e                                ;
	wire              [31:0]  u_fa8f                                ;
	wire                      u_fad2                                ;
	wire              [1:0]   u_fc09                                ;
	wire                      u_fc1e                                ;
	wire                      u_fd1                                 ;
	wire              [2:0]   u_fd7d                                ;
	wire              [2:0]   u_fdc4                                ;
	wire                      u_fea0                                ;
	wire                      u_feb                                 ;
	wire              [3:0]   u_febf                                ;
	wire                      u_ffc2                                ;
	wire                      u_ffc2_ClkS                           ;
	wire                      u_ffc2_En                             ;
	wire                      u_ffc2_EnS                            ;
	wire                      u_ffc2_RetRstN                        ;
	wire                      u_ffc2_RstN                           ;
	wire                      u_ffc2_Tm                             ;
	wire              [31:0]  u_ffed                                ;
	wire                      uhsel                                 ;
	wire                      uhsel_2748                            ;
	wire                      uhsel_429                             ;
	anvu_clk_if               IntRegime_fpga_regime_m0()            ;
	anvu_clk_if               IntRegime_fpga_regime_m1()            ;
	anvu_clk_if               IntRegime_fpga_regime_s0()            ;
	anvu_clk_if               IntRegime_interconnect_synch_regime() ;
	svt_apb_slave_if          Int_ACPU_WDT()                        ;
	svt_apb_slave_if          Int_BCPU_WDT()                        ;
	svt_apb_slave_if          Int_DMA_apb_s0()                      ;
	svt_apb_slave_if          Int_FCB_apb_s0()                      ;
	svt_apb_slave_if          Int_GPIO_apb_s0()                     ;
	svt_apb_slave_if          Int_GPT_apb_s0()                      ;
	svt_apb_slave_if          Int_I2C_apb_s0()                      ;
	svt_apb_slave_if          Int_MBOX_apb_s0()                     ;
	svt_apb_slave_if          Int_PUFCC_apb_s0()                    ;
	svt_apb_slave_if          Int_SCU()                             ;
	svt_ahb_if                Int_SPI_ahb_s0()                      ;
	svt_ahb_if                Int_SPI_mem_ahb()                     ;
	svt_apb_slave_if          Int_UART_apb_s0()                     ;
	svt_apb_slave_if          Int_UART_apb_s1()                     ;
	svt_axi_slave_if          Int_USB_axi_s0()                      ;
	svt_axi_master_if         Int_acpu_axi_m0()                     ;
	svt_axi_master_if         Int_arm_axi_m0()                      ;
	svt_ahb_if                Int_bcpu_ahb_m0()                     ;
	anvu_atb_if               Int_cpu_observer()                    ;
	svt_axi_slave_if          Int_ddr_axi_s0()                      ;
	svt_axi_slave_if          Int_ddr_axi_s1()                      ;
	svt_axi_slave_if          Int_ddr_axi_s2()                      ;
	svt_axi_slave_if          Int_ddr_axi_s3()                      ;
	svt_axi_slave_if          Int_ddr_axil_s0()                     ;
	svt_axi_master_if         Int_dma_axi_m0()                      ;
	svt_axi_master_if         Int_dma_axi_m1()                      ;
	svt_ahb_if                Int_fpga_ahb_s0()                     ;
	svt_axi_master_if         Int_fpga_axi_m0()                     ;
	svt_axi_master_if         Int_fpga_axi_m1()                     ;
	anvu_rstn_if              Int_fpga_rstm0_n()                    ;
	anvu_rstn_if              Int_fpga_rstm1_n()                    ;
	anvu_rstn_if              Int_fpga_rsts0_n()                    ;
	svt_apb_slave_if          Int_gbe_apb_s0()                      ;
	svt_axi_master_if         Int_gbe_axi_m0()                      ;
	svt_axi_master_if         Int_pufcc_axi_m0()                    ;
	anvu_rstn_if              Int_rst_133_n()                       ;
	anvu_rstn_if              Int_rst_266_n()                       ;
	anvu_rstn_if              Int_rst_533_n()                       ;
	svt_axi_slave_if          Int_sram_axi_s0()                     ;
	svt_axi_slave_if          Int_sram_axi_s1()                     ;
	svt_axi_slave_if          Int_sram_axi_s2()                     ;
	svt_axi_slave_if          Int_sram_axi_s3()                     ;
	anvu_signal_if            Int_tm()                              ;
	svt_axi_master_if         Int_usb_axi_m0()                      ;
	assign Int_ACPU_WDT.paddr = { 4'b0 , u_eed1 };
	assign Int_fpga_rstm0_n.Clk = u_ffc2;
	assign u_a826 = Int_fpga_rstm0_n.RstN & u_4ccb;
	assign Int_fpga_rstm1_n.Clk = u_cb43;
	assign u_77d7 = Int_fpga_rstm1_n.RstN & u_4ccb;
	assign Int_fpga_rsts0_n.Clk = u_4fcc;
	assign u_85c0 = Int_fpga_rsts0_n.RstN & u_4ccb;
	assign Int_rst_133_n.Clk = u_59cf;
	assign u_a2bd = Int_rst_133_n.RstN & u_4ccb;
	assign Int_rst_266_n.Clk = u_7fe0;
	assign u_41c4 = Int_rst_266_n.RstN & u_4ccb;
	assign Int_rst_533_n.Clk = u_cd9b;
	assign u_7d61 = Int_rst_533_n.RstN & u_4ccb;
	assign Int_tm.Clk = u_afb2;
	anvu_uvmTestEnv_Top_z_S_R_U_Cg_U_f5e0e607 ClkGenerator(
		.DomainClocks_fpga_regime_m0_Cm_root( u_ffc2 )
	,	.DomainClocks_fpga_regime_m0_Cm_root_ClkS( u_ffc2_ClkS )
	,	.DomainClocks_fpga_regime_m0_Cm_root_En( u_ffc2_En )
	,	.DomainClocks_fpga_regime_m0_Cm_root_EnS( u_ffc2_EnS )
	,	.DomainClocks_fpga_regime_m0_Cm_root_RetRstN( u_ffc2_RetRstN )
	,	.DomainClocks_fpga_regime_m0_Cm_root_RstN( u_ffc2_RstN )
	,	.DomainClocks_fpga_regime_m0_Cm_root_Tm( u_ffc2_Tm )
	,	.DomainClocks_fpga_regime_m1_Cm_root( u_cb43 )
	,	.DomainClocks_fpga_regime_m1_Cm_root_ClkS( u_cb43_ClkS )
	,	.DomainClocks_fpga_regime_m1_Cm_root_En( u_cb43_En )
	,	.DomainClocks_fpga_regime_m1_Cm_root_EnS( u_cb43_EnS )
	,	.DomainClocks_fpga_regime_m1_Cm_root_RetRstN( u_cb43_RetRstN )
	,	.DomainClocks_fpga_regime_m1_Cm_root_RstN( u_cb43_RstN )
	,	.DomainClocks_fpga_regime_m1_Cm_root_Tm( u_cb43_Tm )
	,	.DomainClocks_fpga_regime_s0_Cm_root( u_4fcc )
	,	.DomainClocks_fpga_regime_s0_Cm_root_ClkS( u_4fcc_ClkS )
	,	.DomainClocks_fpga_regime_s0_Cm_root_En( u_4fcc_En )
	,	.DomainClocks_fpga_regime_s0_Cm_root_EnS( u_4fcc_EnS )
	,	.DomainClocks_fpga_regime_s0_Cm_root_RetRstN( u_4fcc_RetRstN )
	,	.DomainClocks_fpga_regime_s0_Cm_root_RstN( u_4fcc_RstN )
	,	.DomainClocks_fpga_regime_s0_Cm_root_Tm( u_4fcc_Tm )
	,	.DomainClocks_interconnect_synch_regime_Cm133_root( u_59cf )
	,	.DomainClocks_interconnect_synch_regime_Cm133_root_ClkS( u_59cf_ClkS )
	,	.DomainClocks_interconnect_synch_regime_Cm133_root_En( u_59cf_En )
	,	.DomainClocks_interconnect_synch_regime_Cm133_root_EnS( u_59cf_EnS )
	,	.DomainClocks_interconnect_synch_regime_Cm133_root_RetRstN( u_59cf_RetRstN )
	,	.DomainClocks_interconnect_synch_regime_Cm133_root_RstN( u_59cf_RstN )
	,	.DomainClocks_interconnect_synch_regime_Cm133_root_Tm( u_59cf_Tm )
	,	.DomainClocks_interconnect_synch_regime_Cm266_root( u_7fe0 )
	,	.DomainClocks_interconnect_synch_regime_Cm266_root_ClkS( u_7fe0_ClkS )
	,	.DomainClocks_interconnect_synch_regime_Cm266_root_En( u_7fe0_En )
	,	.DomainClocks_interconnect_synch_regime_Cm266_root_EnS( u_7fe0_EnS )
	,	.DomainClocks_interconnect_synch_regime_Cm266_root_RetRstN( u_7fe0_RetRstN )
	,	.DomainClocks_interconnect_synch_regime_Cm266_root_RstN( u_7fe0_RstN )
	,	.DomainClocks_interconnect_synch_regime_Cm266_root_Tm( u_7fe0_Tm )
	,	.DomainClocks_interconnect_synch_regime_Cm533_root( u_cd9b )
	,	.DomainClocks_interconnect_synch_regime_Cm533_root_ClkS( u_cd9b_ClkS )
	,	.DomainClocks_interconnect_synch_regime_Cm533_root_En( u_cd9b_En )
	,	.DomainClocks_interconnect_synch_regime_Cm533_root_EnS( u_cd9b_EnS )
	,	.DomainClocks_interconnect_synch_regime_Cm533_root_RetRstN( u_cd9b_RetRstN )
	,	.DomainClocks_interconnect_synch_regime_Cm533_root_RstN( u_cd9b_RstN )
	,	.DomainClocks_interconnect_synch_regime_Cm533_root_Tm( u_cd9b_Tm )
	,	.FastRstN( u_4ccb )
	,	.Ref_fpga_regime_m0( IntRegime_fpga_regime_m0.Clk )
	,	.Ref_fpga_regime_m1( IntRegime_fpga_regime_m1.Clk )
	,	.Ref_fpga_regime_s0( IntRegime_fpga_regime_s0.Clk )
	,	.Ref_interconnect_synch_regime( IntRegime_interconnect_synch_regime.Clk )
	,	.RegimeClocks_Async( u_afb2 )
	,	.RegimeClocks_Async_ClkS( u_afb2_ClkS )
	,	.RegimeClocks_Async_En( u_afb2_En )
	,	.RegimeClocks_Async_EnS( u_afb2_EnS )
	,	.RegimeClocks_Async_RetRstN( u_afb2_RetRstN )
	,	.RegimeClocks_Async_RstN( u_afb2_RstN )
	,	.RegimeClocks_Async_Tm( u_afb2_Tm )
	,	.RegimeClocks_fpga_regime_m0( )
	,	.RegimeClocks_fpga_regime_m0_ClkS( )
	,	.RegimeClocks_fpga_regime_m0_En( )
	,	.RegimeClocks_fpga_regime_m0_EnS( )
	,	.RegimeClocks_fpga_regime_m0_RetRstN( )
	,	.RegimeClocks_fpga_regime_m0_RstN( )
	,	.RegimeClocks_fpga_regime_m0_Tm( )
	,	.RegimeClocks_fpga_regime_m1( )
	,	.RegimeClocks_fpga_regime_m1_ClkS( )
	,	.RegimeClocks_fpga_regime_m1_En( )
	,	.RegimeClocks_fpga_regime_m1_EnS( )
	,	.RegimeClocks_fpga_regime_m1_RetRstN( )
	,	.RegimeClocks_fpga_regime_m1_RstN( )
	,	.RegimeClocks_fpga_regime_m1_Tm( )
	,	.RegimeClocks_fpga_regime_s0( )
	,	.RegimeClocks_fpga_regime_s0_ClkS( )
	,	.RegimeClocks_fpga_regime_s0_En( )
	,	.RegimeClocks_fpga_regime_s0_EnS( )
	,	.RegimeClocks_fpga_regime_s0_RetRstN( )
	,	.RegimeClocks_fpga_regime_s0_RstN( )
	,	.RegimeClocks_fpga_regime_s0_Tm( )
	,	.RegimeClocks_interconnect_synch_regime( )
	,	.RegimeClocks_interconnect_synch_regime_ClkS( )
	,	.RegimeClocks_interconnect_synch_regime_En( )
	,	.RegimeClocks_interconnect_synch_regime_EnS( )
	,	.RegimeClocks_interconnect_synch_regime_RetRstN( )
	,	.RegimeClocks_interconnect_synch_regime_RstN( )
	,	.RegimeClocks_interconnect_synch_regime_Tm( )
	,	.Sel_fpga_regime_m0( IntRegime_fpga_regime_m0.Sel )
	,	.Sel_fpga_regime_m1( IntRegime_fpga_regime_m1.Sel )
	,	.Sel_fpga_regime_s0( IntRegime_fpga_regime_s0.Sel )
	,	.Sel_interconnect_synch_regime( IntRegime_interconnect_synch_regime.Sel )
	,	.clk_133( u_ed6e )
	,	.clk_266( u_a5d7 )
	,	.clk_533( u_182 )
	,	.fpga_clk_m0( u_52d9 )
	,	.fpga_clk_m1( u_cbc0 )
	,	.fpga_clk_s0( u_847f )
	,	.fpga_rstm0_n( u_a826 )
	,	.fpga_rstm1_n( u_77d7 )
	,	.fpga_rsts0_n( u_85c0 )
	,	.rst_133_n( u_a2bd )
	,	.rst_266_n( u_41c4 )
	,	.rst_533_n( u_7d61 )
	,	.tm( Int_tm.Signal [0] )
	);
	assign Int_ACPU_WDT.pclk = u_59cf;
	assign Int_ACPU_WDT.pprot = 3'b0;
	assign Int_ACPU_WDT.presetn = u_59cf_RstN;
	assign Int_ACPU_WDT.pstrb = u_c119;
	assign Int_BCPU_WDT.paddr = { 4'b0 , u_c9ec };
	assign Int_BCPU_WDT.pclk = u_59cf;
	assign Int_BCPU_WDT.pprot = 3'b0;
	assign Int_BCPU_WDT.presetn = u_59cf_RstN;
	assign Int_BCPU_WDT.pstrb = u_854e;
	assign Int_BCPU_WDT.pwdata = u_71cb;
	assign Int_DMA_apb_s0.paddr = { 4'b0 , u_3d7a };
	assign Int_DMA_apb_s0.pclk = u_7fe0;
	assign Int_DMA_apb_s0.pprot = 3'b0;
	assign Int_DMA_apb_s0.presetn = u_7fe0_RstN;
	assign Int_DMA_apb_s0.pstrb = u_9ebc;
	assign Int_DMA_apb_s0.pwdata = u_5ead;
	assign Int_FCB_apb_s0.paddr = { 4'b0 , u_9b8f };
	assign Int_FCB_apb_s0.pclk = u_59cf;
	assign Int_FCB_apb_s0.pprot = 3'b0;
	assign Int_FCB_apb_s0.presetn = u_59cf_RstN;
	assign Int_FCB_apb_s0.pstrb = u_d7f3;
	assign Int_FCB_apb_s0.pwdata = u_e05e;
	assign Int_GPIO_apb_s0.paddr = { 4'b0 , u_9d9a };
	assign Int_GPIO_apb_s0.pclk = u_59cf;
	assign Int_GPIO_apb_s0.pprot = 3'b0;
	assign Int_GPIO_apb_s0.presetn = u_59cf_RstN;
	assign Int_GPIO_apb_s0.pstrb = u_6538;
	assign Int_GPIO_apb_s0.pwdata = u_e8d9;
	assign Int_GPT_apb_s0.paddr = { 4'b0 , u_239 };
	assign Int_GPT_apb_s0.pclk = u_59cf;
	assign Int_GPT_apb_s0.pprot = 3'b0;
	assign Int_GPT_apb_s0.presetn = u_59cf_RstN;
	assign Int_GPT_apb_s0.pstrb = u_5fc9;
	assign Int_GPT_apb_s0.pwdata = u_c164;
	assign Int_I2C_apb_s0.paddr = { 4'b0 , u_e4a0 };
	assign Int_I2C_apb_s0.pclk = u_59cf;
	assign Int_I2C_apb_s0.pprot = 3'b0;
	assign Int_I2C_apb_s0.presetn = u_59cf_RstN;
	assign Int_I2C_apb_s0.pstrb = u_177e;
	assign Int_I2C_apb_s0.pwdata = u_1397;
	assign Int_MBOX_apb_s0.paddr = { 4'b0 , u_58f9 };
	assign Int_MBOX_apb_s0.pclk = u_59cf;
	assign Int_MBOX_apb_s0.pprot = 3'b0;
	assign Int_MBOX_apb_s0.presetn = u_59cf_RstN;
	assign Int_MBOX_apb_s0.pstrb = u_8951;
	assign Int_MBOX_apb_s0.pwdata = u_d04c;
	assign Int_PUFCC_apb_s0.paddr = { 4'b0 , u_ef3b };
	assign Int_PUFCC_apb_s0.pclk = u_59cf;
	assign Int_PUFCC_apb_s0.pprot = u_9e51;
	assign Int_PUFCC_apb_s0.presetn = u_59cf_RstN;
	assign Int_PUFCC_apb_s0.pstrb = u_28b7;
	assign Int_PUFCC_apb_s0.pwdata = u_eb16;
	assign Int_SCU.paddr = { 4'b0 , u_d28a };
	assign Int_SCU.pclk = u_59cf;
	assign Int_SCU.pprot = 3'b0;
	assign Int_SCU.presetn = u_59cf_RstN;
	assign Int_SCU.pstrb = u_2478;
	assign Int_SCU.pwdata = u_c709;
	assign Int_SPI_ahb_s0.control_huser_bus = 256'b0;
	assign Int_SPI_ahb_s0.haddr_bus = { 8'b0 , u_23f8 };
	assign Int_SPI_ahb_s0.hclk = u_59cf;
	assign Int_SPI_ahb_s0.hmaster_bus = 4'b0;
	assign Int_SPI_ahb_s0.hnonsec_bus = 1'b0;
	assign Int_SPI_ahb_s0.hprot_bus = { 3'b0 , u_a82a };
	assign Int_SPI_ahb_s0.hresetn = u_59cf_RstN;
	assign Int_SPI_ahb_s0.hwdata_bus = { 224'b0 , u_8085 };
	assign Int_SPI_ahb_s0.hwdata_huser_bus = 256'b0;
	assign Int_SPI_ahb_s0.slave_if[0].hsel = uhsel;
	assign Int_SPI_ahb_s0.hready_bus = Int_SPI_ahb_s0.slave_if[0].hready;
	sw_ns_engines_flexVerifier_uvm_crdl_testBench_SnpsAhbTargAdapt_z_2d758126 SPI_ahb_s0_adapt(
		.Mst_haddr( u_23f8 )
	,	.Mst_hburst( Int_SPI_ahb_s0.hburst_bus )
	,	.Mst_hmastlock( Int_SPI_ahb_s0.hmastlock_bus )
	,	.Mst_hprot( u_a82a )
	,	.Mst_hrdata( Int_SPI_ahb_s0.slave_if[0].hrdata [31:0] )
	,	.Mst_hready( Int_SPI_ahb_s0.hready_bus )
	,	.Mst_hresp( Int_SPI_ahb_s0.slave_if[0].hresp [0] )
	,	.Mst_hsel( uhsel )
	,	.Mst_hsize( Int_SPI_ahb_s0.hsize_bus )
	,	.Mst_htrans( Int_SPI_ahb_s0.htrans_bus )
	,	.Mst_hwbe( )
	,	.Mst_hwdata( u_8085 )
	,	.Mst_hwrite( Int_SPI_ahb_s0.hwrite_bus )
	,	.Slv_haddr( u_HAddr )
	,	.Slv_hburst( u_HBurst )
	,	.Slv_hmastlock( u_HMastLock )
	,	.Slv_hprot( u_HProt )
	,	.Slv_hrdata( u_HRData )
	,	.Slv_hready( u_HReady )
	,	.Slv_hresp( u_HResp )
	,	.Slv_hsel( u_HSel )
	,	.Slv_hsize( u_HSize )
	,	.Slv_htrans( u_HTrans )
	,	.Slv_hwbe( u_HWBe )
	,	.Slv_hwdata( u_HWData )
	,	.Slv_hwrite( u_HWrite )
	);
	assign Int_SPI_mem_ahb.control_huser_bus = 256'b0;
	assign Int_SPI_mem_ahb.haddr_bus = { 8'b0 , u_4a17 };
	assign Int_SPI_mem_ahb.hclk = u_59cf;
	assign Int_SPI_mem_ahb.hmaster_bus = 4'b0;
	assign Int_SPI_mem_ahb.hnonsec_bus = 1'b0;
	assign Int_SPI_mem_ahb.hprot_bus = { 3'b0 , u_5479 };
	assign Int_SPI_mem_ahb.hresetn = u_59cf_RstN;
	assign Int_SPI_mem_ahb.hwdata_bus = { 224'b0 , u_f91e };
	assign Int_SPI_mem_ahb.hwdata_huser_bus = 256'b0;
	assign Int_SPI_mem_ahb.slave_if[0].hsel = uhsel_429;
	assign Int_SPI_mem_ahb.hready_bus = Int_SPI_mem_ahb.slave_if[0].hready;
	sw_ns_engines_flexVerifier_uvm_crdl_testBench_SnpsAhbTargAdapt_z_2d758126 SPI_mem_ahb_adapt(
		.Mst_haddr( u_4a17 )
	,	.Mst_hburst( Int_SPI_mem_ahb.hburst_bus )
	,	.Mst_hmastlock( Int_SPI_mem_ahb.hmastlock_bus )
	,	.Mst_hprot( u_5479 )
	,	.Mst_hrdata( Int_SPI_mem_ahb.slave_if[0].hrdata [31:0] )
	,	.Mst_hready( Int_SPI_mem_ahb.hready_bus )
	,	.Mst_hresp( Int_SPI_mem_ahb.slave_if[0].hresp [0] )
	,	.Mst_hsel( uhsel_429 )
	,	.Mst_hsize( Int_SPI_mem_ahb.hsize_bus )
	,	.Mst_htrans( Int_SPI_mem_ahb.htrans_bus )
	,	.Mst_hwbe( )
	,	.Mst_hwdata( u_f91e )
	,	.Mst_hwrite( Int_SPI_mem_ahb.hwrite_bus )
	,	.Slv_haddr( u_417_HAddr )
	,	.Slv_hburst( u_417_HBurst )
	,	.Slv_hmastlock( u_417_HMastLock )
	,	.Slv_hprot( u_417_HProt )
	,	.Slv_hrdata( u_417_HRData )
	,	.Slv_hready( u_417_HReady )
	,	.Slv_hresp( u_417_HResp )
	,	.Slv_hsel( u_417_HSel )
	,	.Slv_hsize( u_417_HSize )
	,	.Slv_htrans( u_417_HTrans )
	,	.Slv_hwbe( u_417_HWBe )
	,	.Slv_hwdata( u_417_HWData )
	,	.Slv_hwrite( u_417_HWrite )
	);
	assign Int_UART_apb_s0.paddr = { 4'b0 , u_b805 };
	assign Int_UART_apb_s0.pclk = u_59cf;
	assign Int_UART_apb_s0.pprot = 3'b0;
	assign Int_UART_apb_s0.presetn = u_59cf_RstN;
	assign Int_UART_apb_s0.pstrb = u_60e5;
	assign Int_UART_apb_s0.pwdata = u_95d8;
	assign Int_UART_apb_s1.paddr = { 4'b0 , u_8a64 };
	assign Int_UART_apb_s1.pclk = u_59cf;
	assign Int_UART_apb_s1.pprot = 3'b0;
	assign Int_UART_apb_s1.presetn = u_59cf_RstN;
	assign Int_UART_apb_s1.pstrb = u_9332;
	assign Int_UART_apb_s1.pwdata = u_f6a3;
	assign Int_USB_axi_s0.aclk = u_59cf;
	assign Int_USB_axi_s0.acready = 1'b0;
	assign Int_USB_axi_s0.araddr = { 32'b0 , u_b178 };
	assign Int_USB_axi_s0.arbar = 2'b0;
	assign Int_USB_axi_s0.arburst = 2'b01;
	assign Int_USB_axi_s0.arcache = 4'b0;
	assign Int_USB_axi_s0.ardomain = 2'b0;
	assign Int_USB_axi_s0.aresetn = u_59cf_RstN;
	assign Int_USB_axi_s0.arid = 16'b0;
	assign Int_USB_axi_s0.arlen = 8'b0;
	assign Int_USB_axi_s0.arlock = 2'b0;
	assign Int_USB_axi_s0.arprot = u_ef6e;
	assign Int_USB_axi_s0.arqos = 4'b0;
	assign Int_USB_axi_s0.arregion = 4'b0;
	assign Int_USB_axi_s0.arsize = 4'b0;
	assign Int_USB_axi_s0.arsnoop = 4'b0;
	assign Int_USB_axi_s0.aruser = 256'b0;
	assign Int_USB_axi_s0.arvalid = u_a426;
	assign Int_USB_axi_s0.awaddr = { 32'b0 , u_27d3 };
	assign Int_USB_axi_s0.awatop = 6'b0;
	assign Int_USB_axi_s0.awbar = 2'b0;
	assign Int_USB_axi_s0.awburst = 2'b01;
	assign Int_USB_axi_s0.awcache = 4'b0;
	assign Int_USB_axi_s0.awdomain = 2'b0;
	assign Int_USB_axi_s0.awid = 16'b0;
	assign Int_USB_axi_s0.awlen = 8'b0;
	assign Int_USB_axi_s0.awlock = 2'b0;
	assign Int_USB_axi_s0.awprot = u_e119;
	assign Int_USB_axi_s0.awqos = 4'b0;
	assign Int_USB_axi_s0.awregion = 4'b0;
	assign Int_USB_axi_s0.awsize = 4'b0;
	assign Int_USB_axi_s0.awsnoop = 3'b0;
	assign Int_USB_axi_s0.awuser = 256'b0;
	assign Int_USB_axi_s0.awvalid = u_55cf;
	assign Int_USB_axi_s0.bready = u_6ead;
	assign Int_USB_axi_s0.cddata = 2048'b0;
	assign Int_USB_axi_s0.cdlast = 1'b0;
	assign Int_USB_axi_s0.cdvalid = 1'b0;
	assign Int_USB_axi_s0.crresp = 5'b0;
	assign Int_USB_axi_s0.crvalid = 1'b0;
	assign Int_USB_axi_s0.rack = 1'b0;
	assign Int_USB_axi_s0.rready = u_ce7d;
	assign Int_USB_axi_s0.wack = 1'b0;
	assign Int_USB_axi_s0.wdata = { 2016'b0 , u_e57e };
	assign Int_USB_axi_s0.wid = 16'b0;
	assign Int_USB_axi_s0.wlast = 1'b0;
	assign Int_USB_axi_s0.wstrb = { 252'b0 , u_b69b };
	assign Int_USB_axi_s0.wvalid = u_d52b;
	assign Int_acpu_axi_m0.acaddr = 64'b0;
	assign Int_acpu_axi_m0.aclk = u_cd9b;
	assign Int_acpu_axi_m0.acprot = 3'b0;
	assign Int_acpu_axi_m0.acsnoop = 4'b0;
	assign Int_acpu_axi_m0.acvalid = 1'b0;
	assign Int_acpu_axi_m0.aresetn = u_cd9b_RstN;
	assign Int_acpu_axi_m0.arready = u_288b;
	assign Int_acpu_axi_m0.awready = u_f406;
	assign Int_acpu_axi_m0.bid = { 12'b0 , u_89d6 };
	assign Int_acpu_axi_m0.bresp = u_af5d;
	assign Int_acpu_axi_m0.bvalid = u_5dac;
	assign Int_acpu_axi_m0.cdready = 1'b0;
	assign Int_acpu_axi_m0.crready = 1'b0;
	assign Int_acpu_axi_m0.rdata = { 1984'b0 , u_ae3f };
	assign Int_acpu_axi_m0.rid = { 12'b0 , u_5446 };
	assign Int_acpu_axi_m0.rlast = u_cd43;
	assign Int_acpu_axi_m0.rresp = u_c5ed;
	assign Int_acpu_axi_m0.rvalid = u_7e5c;
	assign Int_acpu_axi_m0.wready = u_f4b6;
	assign Int_arm_axi_m0.acaddr = 64'b0;
	assign Int_arm_axi_m0.aclk = u_cd9b;
	assign Int_arm_axi_m0.acprot = 3'b0;
	assign Int_arm_axi_m0.acsnoop = 4'b0;
	assign Int_arm_axi_m0.acvalid = 1'b0;
	assign Int_arm_axi_m0.aresetn = u_cd9b_RstN;
	assign Int_arm_axi_m0.arready = u_1263;
	assign Int_arm_axi_m0.awready = u_ef86;
	assign Int_arm_axi_m0.bid = { 12'b0 , u_ac5e };
	assign Int_arm_axi_m0.bresp = u_6d49;
	assign Int_arm_axi_m0.bvalid = u_7cbc;
	assign Int_arm_axi_m0.cdready = 1'b0;
	assign Int_arm_axi_m0.crready = 1'b0;
	assign Int_arm_axi_m0.rdata = { 1984'b0 , u_c693 };
	assign Int_arm_axi_m0.rid = { 12'b0 , u_70ee };
	assign Int_arm_axi_m0.rlast = u_235b;
	assign Int_arm_axi_m0.rresp = u_e619;
	assign Int_arm_axi_m0.rvalid = u_b32c;
	assign Int_arm_axi_m0.wready = u_cdaa;
	assign Int_bcpu_ahb_m0.hclk = u_7fe0;
	assign Int_bcpu_ahb_m0.hrdata_bus = { 224'b0 , u_f8f7 };
	assign Int_bcpu_ahb_m0.hrdata_huser_bus = 256'b0;
	assign Int_bcpu_ahb_m0.hresetn = u_7fe0_RstN;
	assign Int_bcpu_ahb_m0.hresp_bus = { 1'b0 , u_e1a0 };
	assign Int_bcpu_ahb_m0.master_if[0].hgrant = 1'b1;
	assign Int_cpu_observer.ATBytes = { 3'b0 , u_e646 };
	assign Int_cpu_observer.ATData = { 112'b0 , u_3de8 };
	assign Int_cpu_observer.Clk = u_59cf;
	assign Int_cpu_observer.RstN = u_59cf_RstN;
	assign Int_ddr_axi_s0.aclk = u_cd9b;
	assign Int_ddr_axi_s0.acready = 1'b0;
	assign Int_ddr_axi_s0.araddr = { 32'b0 , u_1f0c };
	assign Int_ddr_axi_s0.arbar = 2'b0;
	assign Int_ddr_axi_s0.arburst = u_c996;
	assign Int_ddr_axi_s0.arcache = u_a922;
	assign Int_ddr_axi_s0.ardomain = 2'b0;
	assign Int_ddr_axi_s0.aresetn = u_cd9b_RstN;
	assign Int_ddr_axi_s0.arid = { 12'b0 , u_e628 };
	assign Int_ddr_axi_s0.arlen = { 5'b0 , u_3bdb };
	assign Int_ddr_axi_s0.arlock = { 1'b0 , u_4b70 };
	assign Int_ddr_axi_s0.arprot = u_f612;
	assign Int_ddr_axi_s0.arqos = 4'b0;
	assign Int_ddr_axi_s0.arregion = 4'b0;
	assign Int_ddr_axi_s0.arsize = { 1'b0 , u_186e };
	assign Int_ddr_axi_s0.arsnoop = 4'b0;
	assign Int_ddr_axi_s0.aruser = 256'b0;
	assign Int_ddr_axi_s0.arvalid = u_50ba;
	assign Int_ddr_axi_s0.awaddr = { 32'b0 , u_fa8f };
	assign Int_ddr_axi_s0.awatop = 6'b0;
	assign Int_ddr_axi_s0.awbar = 2'b0;
	assign Int_ddr_axi_s0.awburst = u_23db;
	assign Int_ddr_axi_s0.awcache = u_febf;
	assign Int_ddr_axi_s0.awdomain = 2'b0;
	assign Int_ddr_axi_s0.awid = { 12'b0 , u_3e13 };
	assign Int_ddr_axi_s0.awlen = { 5'b0 , u_cc26 };
	assign Int_ddr_axi_s0.awlock = { 1'b0 , u_27ef };
	assign Int_ddr_axi_s0.awprot = u_8315;
	assign Int_ddr_axi_s0.awqos = 4'b0;
	assign Int_ddr_axi_s0.awregion = 4'b0;
	assign Int_ddr_axi_s0.awsize = { 1'b0 , u_c6bd };
	assign Int_ddr_axi_s0.awsnoop = 3'b0;
	assign Int_ddr_axi_s0.awuser = 256'b0;
	assign Int_ddr_axi_s0.awvalid = u_feb;
	assign Int_ddr_axi_s0.bready = u_db21;
	assign Int_ddr_axi_s0.cddata = 2048'b0;
	assign Int_ddr_axi_s0.cdlast = 1'b0;
	assign Int_ddr_axi_s0.cdvalid = 1'b0;
	assign Int_ddr_axi_s0.crresp = 5'b0;
	assign Int_ddr_axi_s0.crvalid = 1'b0;
	assign Int_ddr_axi_s0.rack = 1'b0;
	assign Int_ddr_axi_s0.rready = u_fd1;
	assign Int_ddr_axi_s0.wack = 1'b0;
	assign Int_ddr_axi_s0.wdata = { 1920'b0 , u_54d2 };
	assign Int_ddr_axi_s0.wid = 16'b0;
	assign Int_ddr_axi_s0.wlast = u_f6da;
	assign Int_ddr_axi_s0.wstrb = { 240'b0 , u_d987 };
	assign Int_ddr_axi_s0.wvalid = u_861f;
	assign Int_ddr_axi_s1.aclk = u_cd9b;
	assign Int_ddr_axi_s1.acready = 1'b0;
	assign Int_ddr_axi_s1.araddr = { 32'b0 , u_47d1 };
	assign Int_ddr_axi_s1.arbar = 2'b0;
	assign Int_ddr_axi_s1.arburst = u_42e1;
	assign Int_ddr_axi_s1.arcache = u_2d29;
	assign Int_ddr_axi_s1.ardomain = 2'b0;
	assign Int_ddr_axi_s1.aresetn = u_cd9b_RstN;
	assign Int_ddr_axi_s1.arid = { 12'b0 , u_1055 };
	assign Int_ddr_axi_s1.arlen = { 5'b0 , u_9ac8 };
	assign Int_ddr_axi_s1.arlock = { 1'b0 , u_be31 };
	assign Int_ddr_axi_s1.arprot = u_cd4b;
	assign Int_ddr_axi_s1.arqos = 4'b0;
	assign Int_ddr_axi_s1.arregion = 4'b0;
	assign Int_ddr_axi_s1.arsize = { 1'b0 , u_4dbb };
	assign Int_ddr_axi_s1.arsnoop = 4'b0;
	assign Int_ddr_axi_s1.aruser = 256'b0;
	assign Int_ddr_axi_s1.arvalid = u_791;
	assign Int_ddr_axi_s1.awaddr = { 32'b0 , u_8296 };
	assign Int_ddr_axi_s1.awatop = 6'b0;
	assign Int_ddr_axi_s1.awbar = 2'b0;
	assign Int_ddr_axi_s1.awburst = u_725c;
	assign Int_ddr_axi_s1.awcache = u_66ec;
	assign Int_ddr_axi_s1.awdomain = 2'b0;
	assign Int_ddr_axi_s1.awid = { 12'b0 , u_4fa2 };
	assign Int_ddr_axi_s1.awlen = { 5'b0 , u_9765 };
	assign Int_ddr_axi_s1.awlock = { 1'b0 , u_7132 };
	assign Int_ddr_axi_s1.awprot = u_3740;
	assign Int_ddr_axi_s1.awqos = 4'b0;
	assign Int_ddr_axi_s1.awregion = 4'b0;
	assign Int_ddr_axi_s1.awsize = { 1'b0 , u_e33c };
	assign Int_ddr_axi_s1.awsnoop = 3'b0;
	assign Int_ddr_axi_s1.awuser = 256'b0;
	assign Int_ddr_axi_s1.awvalid = u_55b0;
	assign Int_ddr_axi_s1.bready = u_2804;
	assign Int_ddr_axi_s1.cddata = 2048'b0;
	assign Int_ddr_axi_s1.cdlast = 1'b0;
	assign Int_ddr_axi_s1.cdvalid = 1'b0;
	assign Int_ddr_axi_s1.crresp = 5'b0;
	assign Int_ddr_axi_s1.crvalid = 1'b0;
	assign Int_ddr_axi_s1.rack = 1'b0;
	assign Int_ddr_axi_s1.rready = u_69b4;
	assign Int_ddr_axi_s1.wack = 1'b0;
	assign Int_ddr_axi_s1.wdata = { 1920'b0 , u_d759 };
	assign Int_ddr_axi_s1.wid = 16'b0;
	assign Int_ddr_axi_s1.wlast = u_256d;
	assign Int_ddr_axi_s1.wstrb = { 240'b0 , u_3bac };
	assign Int_ddr_axi_s1.wvalid = u_b55e;
	assign Int_ddr_axi_s2.aclk = u_cd9b;
	assign Int_ddr_axi_s2.acready = 1'b0;
	assign Int_ddr_axi_s2.araddr = { 32'b0 , u_27c2 };
	assign Int_ddr_axi_s2.arbar = 2'b0;
	assign Int_ddr_axi_s2.arburst = u_c740;
	assign Int_ddr_axi_s2.arcache = u_2ae8;
	assign Int_ddr_axi_s2.ardomain = 2'b0;
	assign Int_ddr_axi_s2.aresetn = u_cd9b_RstN;
	assign Int_ddr_axi_s2.arid = { 12'b0 , u_9496 };
	assign Int_ddr_axi_s2.arlen = { 5'b0 , u_61 };
	assign Int_ddr_axi_s2.arlock = { 1'b0 , u_492e };
	assign Int_ddr_axi_s2.arprot = u_c39c;
	assign Int_ddr_axi_s2.arqos = 4'b0;
	assign Int_ddr_axi_s2.arregion = 4'b0;
	assign Int_ddr_axi_s2.arsize = { 1'b0 , u_c420 };
	assign Int_ddr_axi_s2.arsnoop = 4'b0;
	assign Int_ddr_axi_s2.aruser = 256'b0;
	assign Int_ddr_axi_s2.arvalid = u_5f6c;
	assign Int_ddr_axi_s2.awaddr = { 32'b0 , u_f715 };
	assign Int_ddr_axi_s2.awatop = 6'b0;
	assign Int_ddr_axi_s2.awbar = 2'b0;
	assign Int_ddr_axi_s2.awburst = u_ccad;
	assign Int_ddr_axi_s2.awcache = u_c30d;
	assign Int_ddr_axi_s2.awdomain = 2'b0;
	assign Int_ddr_axi_s2.awid = { 12'b0 , u_6131 };
	assign Int_ddr_axi_s2.awlen = { 5'b0 , u_966c };
	assign Int_ddr_axi_s2.awlock = { 1'b0 , u_1065 };
	assign Int_ddr_axi_s2.awprot = u_460f;
	assign Int_ddr_axi_s2.awqos = 4'b0;
	assign Int_ddr_axi_s2.awregion = 4'b0;
	assign Int_ddr_axi_s2.awsize = { 1'b0 , u_1497 };
	assign Int_ddr_axi_s2.awsnoop = 3'b0;
	assign Int_ddr_axi_s2.awuser = 256'b0;
	assign Int_ddr_axi_s2.awvalid = u_dee5;
	assign Int_ddr_axi_s2.bready = u_4b6f;
	assign Int_ddr_axi_s2.cddata = 2048'b0;
	assign Int_ddr_axi_s2.cdlast = 1'b0;
	assign Int_ddr_axi_s2.cdvalid = 1'b0;
	assign Int_ddr_axi_s2.crresp = 5'b0;
	assign Int_ddr_axi_s2.crvalid = 1'b0;
	assign Int_ddr_axi_s2.rack = 1'b0;
	assign Int_ddr_axi_s2.rready = u_37ff;
	assign Int_ddr_axi_s2.wack = 1'b0;
	assign Int_ddr_axi_s2.wdata = { 1920'b0 , u_c6b4 };
	assign Int_ddr_axi_s2.wid = 16'b0;
	assign Int_ddr_axi_s2.wlast = u_f218;
	assign Int_ddr_axi_s2.wstrb = { 240'b0 , u_ca2d };
	assign Int_ddr_axi_s2.wvalid = u_4625;
	assign Int_ddr_axi_s3.aclk = u_cd9b;
	assign Int_ddr_axi_s3.acready = 1'b0;
	assign Int_ddr_axi_s3.araddr = { 32'b0 , u_c287 };
	assign Int_ddr_axi_s3.arbar = 2'b0;
	assign Int_ddr_axi_s3.arburst = u_37e3;
	assign Int_ddr_axi_s3.arcache = u_8937;
	assign Int_ddr_axi_s3.ardomain = 2'b0;
	assign Int_ddr_axi_s3.aresetn = u_cd9b_RstN;
	assign Int_ddr_axi_s3.arid = { 12'b0 , u_15b };
	assign Int_ddr_axi_s3.arlen = { 5'b0 , u_5dae };
	assign Int_ddr_axi_s3.arlock = { 1'b0 , u_ab37 };
	assign Int_ddr_axi_s3.arprot = u_fd7d;
	assign Int_ddr_axi_s3.arqos = 4'b0;
	assign Int_ddr_axi_s3.arregion = 4'b0;
	assign Int_ddr_axi_s3.arsize = { 1'b0 , u_7f95 };
	assign Int_ddr_axi_s3.arsnoop = 4'b0;
	assign Int_ddr_axi_s3.aruser = 256'b0;
	assign Int_ddr_axi_s3.arvalid = u_1a93;
	assign Int_ddr_axi_s3.awaddr = { 32'b0 , u_ea4 };
	assign Int_ddr_axi_s3.awatop = 6'b0;
	assign Int_ddr_axi_s3.awbar = 2'b0;
	assign Int_ddr_axi_s3.awburst = u_d3e;
	assign Int_ddr_axi_s3.awcache = u_79a;
	assign Int_ddr_axi_s3.awdomain = 2'b0;
	assign Int_ddr_axi_s3.awid = { 12'b0 , u_a470 };
	assign Int_ddr_axi_s3.awlen = { 5'b0 , u_b343 };
	assign Int_ddr_axi_s3.awlock = { 1'b0 , u_7f78 };
	assign Int_ddr_axi_s3.awprot = u_1fba;
	assign Int_ddr_axi_s3.awqos = 4'b0;
	assign Int_ddr_axi_s3.awregion = 4'b0;
	assign Int_ddr_axi_s3.awsize = { 1'b0 , u_bcc6 };
	assign Int_ddr_axi_s3.awsnoop = 3'b0;
	assign Int_ddr_axi_s3.awuser = 256'b0;
	assign Int_ddr_axi_s3.awvalid = u_5ce2;
	assign Int_ddr_axi_s3.bready = u_f872;
	assign Int_ddr_axi_s3.cddata = 2048'b0;
	assign Int_ddr_axi_s3.cdlast = 1'b0;
	assign Int_ddr_axi_s3.cdvalid = 1'b0;
	assign Int_ddr_axi_s3.crresp = 5'b0;
	assign Int_ddr_axi_s3.crvalid = 1'b0;
	assign Int_ddr_axi_s3.rack = 1'b0;
	assign Int_ddr_axi_s3.rready = u_f402;
	assign Int_ddr_axi_s3.wack = 1'b0;
	assign Int_ddr_axi_s3.wdata = { 1920'b0 , u_2fab };
	assign Int_ddr_axi_s3.wid = 16'b0;
	assign Int_ddr_axi_s3.wlast = u_7703;
	assign Int_ddr_axi_s3.wstrb = { 240'b0 , u_8ea2 };
	assign Int_ddr_axi_s3.wvalid = u_c974;
	assign Int_ddr_axil_s0.aclk = u_59cf;
	assign Int_ddr_axil_s0.acready = 1'b0;
	assign Int_ddr_axil_s0.araddr = { 32'b0 , u_4833 };
	assign Int_ddr_axil_s0.arbar = 2'b0;
	assign Int_ddr_axil_s0.arburst = 2'b01;
	assign Int_ddr_axil_s0.arcache = 4'b0;
	assign Int_ddr_axil_s0.ardomain = 2'b0;
	assign Int_ddr_axil_s0.aresetn = u_59cf_RstN;
	assign Int_ddr_axil_s0.arid = 16'b0;
	assign Int_ddr_axil_s0.arlen = 8'b0;
	assign Int_ddr_axil_s0.arlock = 2'b0;
	assign Int_ddr_axil_s0.arprot = u_e0bd;
	assign Int_ddr_axil_s0.arqos = 4'b0;
	assign Int_ddr_axil_s0.arregion = 4'b0;
	assign Int_ddr_axil_s0.arsize = 4'b0;
	assign Int_ddr_axil_s0.arsnoop = 4'b0;
	assign Int_ddr_axil_s0.aruser = 256'b0;
	assign Int_ddr_axil_s0.arvalid = u_41a3;
	assign Int_ddr_axil_s0.awaddr = { 32'b0 , u_5694 };
	assign Int_ddr_axil_s0.awatop = 6'b0;
	assign Int_ddr_axil_s0.awbar = 2'b0;
	assign Int_ddr_axil_s0.awburst = 2'b01;
	assign Int_ddr_axil_s0.awcache = 4'b0;
	assign Int_ddr_axil_s0.awdomain = 2'b0;
	assign Int_ddr_axil_s0.awid = 16'b0;
	assign Int_ddr_axil_s0.awlen = 8'b0;
	assign Int_ddr_axil_s0.awlock = 2'b0;
	assign Int_ddr_axil_s0.awprot = u_431e;
	assign Int_ddr_axil_s0.awqos = 4'b0;
	assign Int_ddr_axil_s0.awregion = 4'b0;
	assign Int_ddr_axil_s0.awsize = 4'b0;
	assign Int_ddr_axil_s0.awsnoop = 3'b0;
	assign Int_ddr_axil_s0.awuser = 256'b0;
	assign Int_ddr_axil_s0.awvalid = u_7d6a;
	assign Int_ddr_axil_s0.bready = u_49be;
	assign Int_ddr_axil_s0.cddata = 2048'b0;
	assign Int_ddr_axil_s0.cdlast = 1'b0;
	assign Int_ddr_axil_s0.cdvalid = 1'b0;
	assign Int_ddr_axil_s0.crresp = 5'b0;
	assign Int_ddr_axil_s0.crvalid = 1'b0;
	assign Int_ddr_axil_s0.rack = 1'b0;
	assign Int_ddr_axil_s0.rready = u_66ce_2162;
	assign Int_ddr_axil_s0.wack = 1'b0;
	assign Int_ddr_axil_s0.wdata = { 2016'b0 , u_8a97 };
	assign Int_ddr_axil_s0.wid = 16'b0;
	assign Int_ddr_axil_s0.wlast = 1'b0;
	assign Int_ddr_axil_s0.wstrb = { 252'b0 , u_697e };
	assign Int_ddr_axil_s0.wvalid = u_bf64;
	assign Int_dma_axi_m0.acaddr = 64'b0;
	assign Int_dma_axi_m0.aclk = u_7fe0;
	assign Int_dma_axi_m0.acprot = 3'b0;
	assign Int_dma_axi_m0.acsnoop = 4'b0;
	assign Int_dma_axi_m0.acvalid = 1'b0;
	assign Int_dma_axi_m0.aresetn = u_7fe0_RstN;
	assign Int_dma_axi_m0.arready = u_6457;
	assign Int_dma_axi_m0.awready = u_b792;
	assign Int_dma_axi_m0.bid = { 12'b0 , u_b532 };
	assign Int_dma_axi_m0.bresp = u_6c75;
	assign Int_dma_axi_m0.bvalid = u_6df0;
	assign Int_dma_axi_m0.cdready = 1'b0;
	assign Int_dma_axi_m0.crready = 1'b0;
	assign Int_dma_axi_m0.rdata = { 2016'b0 , u_3507 };
	assign Int_dma_axi_m0.rid = { 12'b0 , u_67e2 };
	assign Int_dma_axi_m0.rlast = u_ac7f;
	assign Int_dma_axi_m0.rresp = u_e7a5;
	assign Int_dma_axi_m0.rvalid = u_680;
	assign Int_dma_axi_m0.wready = u_4b4e;
	assign Int_dma_axi_m1.acaddr = 64'b0;
	assign Int_dma_axi_m1.aclk = u_7fe0;
	assign Int_dma_axi_m1.acprot = 3'b0;
	assign Int_dma_axi_m1.acsnoop = 4'b0;
	assign Int_dma_axi_m1.acvalid = 1'b0;
	assign Int_dma_axi_m1.aresetn = u_7fe0_RstN;
	assign Int_dma_axi_m1.arready = u_d5e8;
	assign Int_dma_axi_m1.awready = u_af5;
	assign Int_dma_axi_m1.bid = { 12'b0 , u_ad45 };
	assign Int_dma_axi_m1.bresp = u_5e2a;
	assign Int_dma_axi_m1.bvalid = u_8261;
	assign Int_dma_axi_m1.cdready = 1'b0;
	assign Int_dma_axi_m1.crready = 1'b0;
	assign Int_dma_axi_m1.rdata = { 2016'b0 , u_d630 };
	assign Int_dma_axi_m1.rid = { 12'b0 , u_b2f5 };
	assign Int_dma_axi_m1.rlast = u_1584;
	assign Int_dma_axi_m1.rresp = u_3b9a;
	assign Int_dma_axi_m1.rvalid = u_46b1;
	assign Int_dma_axi_m1.wready = u_995b;
	assign Int_fpga_ahb_s0.control_huser_bus = 256'b0;
	assign Int_fpga_ahb_s0.haddr_bus = { 8'b0 , u_20b };
	assign Int_fpga_ahb_s0.hclk = u_4fcc;
	assign Int_fpga_ahb_s0.hmaster_bus = 4'b0;
	assign Int_fpga_ahb_s0.hnonsec_bus = 1'b0;
	assign Int_fpga_ahb_s0.hprot_bus = { 3'b0 , u_5f9d };
	assign Int_fpga_ahb_s0.hresetn = u_4fcc_RstN;
	assign Int_fpga_ahb_s0.hwdata_bus = { 224'b0 , u_3572 };
	assign Int_fpga_ahb_s0.hwdata_huser_bus = 256'b0;
	assign Int_fpga_ahb_s0.slave_if[0].hsel = uhsel_2748;
	assign Int_fpga_ahb_s0.hready_bus = Int_fpga_ahb_s0.slave_if[0].hready;
	sw_ns_engines_flexVerifier_uvm_crdl_testBench_SnpsAhbTargAdapt_z_2d758126 fpga_ahb_s0_adapt(
		.Mst_haddr( u_20b )
	,	.Mst_hburst( Int_fpga_ahb_s0.hburst_bus )
	,	.Mst_hmastlock( Int_fpga_ahb_s0.hmastlock_bus )
	,	.Mst_hprot( u_5f9d )
	,	.Mst_hrdata( Int_fpga_ahb_s0.slave_if[0].hrdata [31:0] )
	,	.Mst_hready( Int_fpga_ahb_s0.hready_bus )
	,	.Mst_hresp( Int_fpga_ahb_s0.slave_if[0].hresp [0] )
	,	.Mst_hsel( uhsel_2748 )
	,	.Mst_hsize( Int_fpga_ahb_s0.hsize_bus )
	,	.Mst_htrans( Int_fpga_ahb_s0.htrans_bus )
	,	.Mst_hwbe( )
	,	.Mst_hwdata( u_3572 )
	,	.Mst_hwrite( Int_fpga_ahb_s0.hwrite_bus )
	,	.Slv_haddr( u_2736_HAddr )
	,	.Slv_hburst( u_2736_HBurst )
	,	.Slv_hmastlock( u_2736_HMastLock )
	,	.Slv_hprot( u_2736_HProt )
	,	.Slv_hrdata( u_2736_HRData )
	,	.Slv_hready( u_2736_HReady )
	,	.Slv_hresp( u_2736_HResp )
	,	.Slv_hsel( u_2736_HSel )
	,	.Slv_hsize( u_2736_HSize )
	,	.Slv_htrans( u_2736_HTrans )
	,	.Slv_hwbe( u_2736_HWBe )
	,	.Slv_hwdata( u_2736_HWData )
	,	.Slv_hwrite( u_2736_HWrite )
	);
	assign Int_fpga_axi_m0.acaddr = 64'b0;
	assign Int_fpga_axi_m0.aclk = u_ffc2;
	assign Int_fpga_axi_m0.acprot = 3'b0;
	assign Int_fpga_axi_m0.acsnoop = 4'b0;
	assign Int_fpga_axi_m0.acvalid = 1'b0;
	assign Int_fpga_axi_m0.aresetn = u_ffc2_RstN;
	assign Int_fpga_axi_m0.arready = u_fea0;
	assign Int_fpga_axi_m0.awready = u_d4e5;
	assign Int_fpga_axi_m0.bid = { 12'b0 , u_83ad };
	assign Int_fpga_axi_m0.bresp = u_178e;
	assign Int_fpga_axi_m0.bvalid = u_80e9;
	assign Int_fpga_axi_m0.cdready = 1'b0;
	assign Int_fpga_axi_m0.crready = 1'b0;
	assign Int_fpga_axi_m0.rdata = { 1984'b0 , u_d45c };
	assign Int_fpga_axi_m0.rid = { 12'b0 , u_cbbd };
	assign Int_fpga_axi_m0.rlast = u_1f74;
	assign Int_fpga_axi_m0.rresp = u_ce3e;
	assign Int_fpga_axi_m0.rvalid = u_6bf9;
	assign Int_fpga_axi_m0.wready = u_2317;
	assign Int_fpga_axi_m1.acaddr = 64'b0;
	assign Int_fpga_axi_m1.aclk = u_cb43;
	assign Int_fpga_axi_m1.acprot = 3'b0;
	assign Int_fpga_axi_m1.acsnoop = 4'b0;
	assign Int_fpga_axi_m1.acvalid = 1'b0;
	assign Int_fpga_axi_m1.aresetn = u_cb43_RstN;
	assign Int_fpga_axi_m1.arready = u_a1df;
	assign Int_fpga_axi_m1.awready = u_6762;
	assign Int_fpga_axi_m1.bid = { 12'b0 , u_9e5a };
	assign Int_fpga_axi_m1.bresp = u_e121;
	assign Int_fpga_axi_m1.bvalid = u_f808;
	assign Int_fpga_axi_m1.cdready = 1'b0;
	assign Int_fpga_axi_m1.crready = 1'b0;
	assign Int_fpga_axi_m1.rdata = { 2016'b0 , u_7d7b };
	assign Int_fpga_axi_m1.rid = { 12'b0 , u_aa6a };
	assign Int_fpga_axi_m1.rlast = u_6ccf;
	assign Int_fpga_axi_m1.rresp = u_4c11;
	assign Int_fpga_axi_m1.rvalid = u_f2d8;
	assign Int_fpga_axi_m1.wready = u_fad2;
	assign Int_gbe_apb_s0.paddr = { 4'b0 , u_7ed8 };
	assign Int_gbe_apb_s0.pclk = u_7fe0;
	assign Int_gbe_apb_s0.pprot = 3'b0;
	assign Int_gbe_apb_s0.presetn = u_7fe0_RstN;
	assign Int_gbe_apb_s0.pstrb = u_9516;
	assign Int_gbe_apb_s0.pwdata = u_799f;
	assign Int_gbe_axi_m0.acaddr = 64'b0;
	assign Int_gbe_axi_m0.aclk = u_7fe0;
	assign Int_gbe_axi_m0.acprot = 3'b0;
	assign Int_gbe_axi_m0.acsnoop = 4'b0;
	assign Int_gbe_axi_m0.acvalid = 1'b0;
	assign Int_gbe_axi_m0.aresetn = u_7fe0_RstN;
	assign Int_gbe_axi_m0.arready = u_5bdd;
	assign Int_gbe_axi_m0.awready = u_f450;
	assign Int_gbe_axi_m0.bid = { 12'b0 , u_d1ec };
	assign Int_gbe_axi_m0.bresp = u_1b5b;
	assign Int_gbe_axi_m0.bvalid = u_73c2;
	assign Int_gbe_axi_m0.cdready = 1'b0;
	assign Int_gbe_axi_m0.crready = 1'b0;
	assign Int_gbe_axi_m0.rdata = { 2016'b0 , u_63cd };
	assign Int_gbe_axi_m0.rid = { 12'b0 , u_ccbc };
	assign Int_gbe_axi_m0.rlast = u_5b11;
	assign Int_gbe_axi_m0.rresp = u_41ab;
	assign Int_gbe_axi_m0.rvalid = u_90f2;
	assign Int_gbe_axi_m0.wready = u_9218;
	assign Int_pufcc_axi_m0.acaddr = 64'b0;
	assign Int_pufcc_axi_m0.aclk = u_59cf;
	assign Int_pufcc_axi_m0.acprot = 3'b0;
	assign Int_pufcc_axi_m0.acsnoop = 4'b0;
	assign Int_pufcc_axi_m0.acvalid = 1'b0;
	assign Int_pufcc_axi_m0.aresetn = u_59cf_RstN;
	assign Int_pufcc_axi_m0.arready = u_664;
	assign Int_pufcc_axi_m0.awready = u_1a01;
	assign Int_pufcc_axi_m0.bid = { 12'b0 , u_f1cd };
	assign Int_pufcc_axi_m0.bresp = u_2216;
	assign Int_pufcc_axi_m0.bvalid = u_3579;
	assign Int_pufcc_axi_m0.cdready = 1'b0;
	assign Int_pufcc_axi_m0.crready = 1'b0;
	assign Int_pufcc_axi_m0.rdata = { 2016'b0 , u_94c8 };
	assign Int_pufcc_axi_m0.rid = { 12'b0 , u_21d };
	assign Int_pufcc_axi_m0.rlast = u_6000;
	assign Int_pufcc_axi_m0.rresp = u_15c6;
	assign Int_pufcc_axi_m0.rvalid = u_44c9;
	assign Int_pufcc_axi_m0.wready = u_9ba7;
	assign Int_sram_axi_s0.aclk = u_cd9b;
	assign Int_sram_axi_s0.acready = 1'b0;
	assign Int_sram_axi_s0.araddr = { 32'b0 , u_1af0 };
	assign Int_sram_axi_s0.arbar = 2'b0;
	assign Int_sram_axi_s0.arburst = u_ef7e;
	assign Int_sram_axi_s0.arcache = u_d516;
	assign Int_sram_axi_s0.ardomain = 2'b0;
	assign Int_sram_axi_s0.aresetn = u_cd9b_RstN;
	assign Int_sram_axi_s0.arid = { 12'b0 , u_9794 };
	assign Int_sram_axi_s0.arlen = { 4'b0 , u_16db };
	assign Int_sram_axi_s0.arlock = { 1'b0 , u_7c40 };
	assign Int_sram_axi_s0.arprot = u_f5ca;
	assign Int_sram_axi_s0.arqos = 4'b0;
	assign Int_sram_axi_s0.arregion = 4'b0;
	assign Int_sram_axi_s0.arsize = { 1'b0 , u_c26a };
	assign Int_sram_axi_s0.arsnoop = 4'b0;
	assign Int_sram_axi_s0.aruser = 256'b0;
	assign Int_sram_axi_s0.arvalid = u_16ce;
	assign Int_sram_axi_s0.awaddr = { 32'b0 , u_e277 };
	assign Int_sram_axi_s0.awatop = 6'b0;
	assign Int_sram_axi_s0.awbar = 2'b0;
	assign Int_sram_axi_s0.awburst = u_1f23;
	assign Int_sram_axi_s0.awcache = u_563;
	assign Int_sram_axi_s0.awdomain = 2'b0;
	assign Int_sram_axi_s0.awid = { 12'b0 , u_b293 };
	assign Int_sram_axi_s0.awlen = { 4'b0 , u_5706 };
	assign Int_sram_axi_s0.awlock = { 1'b0 , u_d63 };
	assign Int_sram_axi_s0.awprot = u_aaa1;
	assign Int_sram_axi_s0.awqos = 4'b0;
	assign Int_sram_axi_s0.awregion = 4'b0;
	assign Int_sram_axi_s0.awsize = { 1'b0 , u_5d9d };
	assign Int_sram_axi_s0.awsnoop = 3'b0;
	assign Int_sram_axi_s0.awuser = 256'b0;
	assign Int_sram_axi_s0.awvalid = u_212f;
	assign Int_sram_axi_s0.bready = u_cd55;
	assign Int_sram_axi_s0.cddata = 2048'b0;
	assign Int_sram_axi_s0.cdlast = 1'b0;
	assign Int_sram_axi_s0.cdvalid = 1'b0;
	assign Int_sram_axi_s0.crresp = 5'b0;
	assign Int_sram_axi_s0.crvalid = 1'b0;
	assign Int_sram_axi_s0.rack = 1'b0;
	assign Int_sram_axi_s0.rready = u_e45;
	assign Int_sram_axi_s0.wack = 1'b0;
	assign Int_sram_axi_s0.wdata = { 2016'b0 , u_1c0a };
	assign Int_sram_axi_s0.wid = 16'b0;
	assign Int_sram_axi_s0.wlast = u_fc1e;
	assign Int_sram_axi_s0.wstrb = { 252'b0 , u_b55f };
	assign Int_sram_axi_s0.wvalid = u_a63f;
	assign Int_sram_axi_s1.aclk = u_cd9b;
	assign Int_sram_axi_s1.acready = 1'b0;
	assign Int_sram_axi_s1.araddr = { 32'b0 , u_ffed };
	assign Int_sram_axi_s1.arbar = 2'b0;
	assign Int_sram_axi_s1.arburst = u_fc09;
	assign Int_sram_axi_s1.arcache = u_b0ed;
	assign Int_sram_axi_s1.ardomain = 2'b0;
	assign Int_sram_axi_s1.aresetn = u_cd9b_RstN;
	assign Int_sram_axi_s1.arid = { 12'b0 , u_f4e9 };
	assign Int_sram_axi_s1.arlen = { 4'b0 , u_c598 };
	assign Int_sram_axi_s1.arlock = { 1'b0 , u_dd91 };
	assign Int_sram_axi_s1.arprot = u_7303;
	assign Int_sram_axi_s1.arqos = 4'b0;
	assign Int_sram_axi_s1.arregion = 4'b0;
	assign Int_sram_axi_s1.arsize = { 1'b0 , u_610f };
	assign Int_sram_axi_s1.arsnoop = 4'b0;
	assign Int_sram_axi_s1.aruser = 256'b0;
	assign Int_sram_axi_s1.arvalid = u_a335;
	assign Int_sram_axi_s1.awaddr = { 32'b0 , u_d4fe };
	assign Int_sram_axi_s1.awatop = 6'b0;
	assign Int_sram_axi_s1.awbar = 2'b0;
	assign Int_sram_axi_s1.awburst = u_2d64;
	assign Int_sram_axi_s1.awcache = u_d500;
	assign Int_sram_axi_s1.awdomain = 2'b0;
	assign Int_sram_axi_s1.awid = { 12'b0 , u_b9d2 };
	assign Int_sram_axi_s1.awlen = { 4'b0 , u_a1d5 };
	assign Int_sram_axi_s1.awlock = { 1'b0 , u_adae };
	assign Int_sram_axi_s1.awprot = u_c2f4;
	assign Int_sram_axi_s1.awqos = 4'b0;
	assign Int_sram_axi_s1.awregion = 4'b0;
	assign Int_sram_axi_s1.awsize = { 1'b0 , u_520c };
	assign Int_sram_axi_s1.awsnoop = 3'b0;
	assign Int_sram_axi_s1.awuser = 256'b0;
	assign Int_sram_axi_s1.awvalid = u_f214;
	assign Int_sram_axi_s1.bready = u_80b0;
	assign Int_sram_axi_s1.cddata = 2048'b0;
	assign Int_sram_axi_s1.cdlast = 1'b0;
	assign Int_sram_axi_s1.cdvalid = 1'b0;
	assign Int_sram_axi_s1.crresp = 5'b0;
	assign Int_sram_axi_s1.crvalid = 1'b0;
	assign Int_sram_axi_s1.rack = 1'b0;
	assign Int_sram_axi_s1.rready = u_e400;
	assign Int_sram_axi_s1.wack = 1'b0;
	assign Int_sram_axi_s1.wdata = { 2016'b0 , u_9f71 };
	assign Int_sram_axi_s1.wid = 16'b0;
	assign Int_sram_axi_s1.wlast = u_5de9;
	assign Int_sram_axi_s1.wstrb = { 252'b0 , u_f5c4 };
	assign Int_sram_axi_s1.wvalid = u_89ae;
	assign Int_sram_axi_s2.aclk = u_cd9b;
	assign Int_sram_axi_s2.acready = 1'b0;
	assign Int_sram_axi_s2.araddr = { 32'b0 , u_6ef6 };
	assign Int_sram_axi_s2.arbar = 2'b0;
	assign Int_sram_axi_s2.arburst = u_570c;
	assign Int_sram_axi_s2.arcache = u_e1b8;
	assign Int_sram_axi_s2.ardomain = 2'b0;
	assign Int_sram_axi_s2.aresetn = u_cd9b_RstN;
	assign Int_sram_axi_s2.arid = { 12'b0 , u_38da };
	assign Int_sram_axi_s2.arlen = { 4'b0 , u_605d };
	assign Int_sram_axi_s2.arlock = { 1'b0 , u_8f76 };
	assign Int_sram_axi_s2.arprot = u_5a3c;
	assign Int_sram_axi_s2.arqos = 4'b0;
	assign Int_sram_axi_s2.arregion = 4'b0;
	assign Int_sram_axi_s2.arsize = { 1'b0 , u_fdc4 };
	assign Int_sram_axi_s2.arsnoop = 4'b0;
	assign Int_sram_axi_s2.aruser = 256'b0;
	assign Int_sram_axi_s2.arvalid = u_907c;
	assign Int_sram_axi_s2.awaddr = { 32'b0 , u_e45_4130 };
	assign Int_sram_axi_s2.awatop = 6'b0;
	assign Int_sram_axi_s2.awbar = 2'b0;
	assign Int_sram_axi_s2.awburst = u_dab1;
	assign Int_sram_axi_s2.awcache = u_f7e5;
	assign Int_sram_axi_s2.awdomain = 2'b0;
	assign Int_sram_axi_s2.awid = { 12'b0 , u_9c91 };
	assign Int_sram_axi_s2.awlen = { 4'b0 , u_b40 };
	assign Int_sram_axi_s2.awlock = { 1'b0 , u_54f9 };
	assign Int_sram_axi_s2.awprot = u_d8b;
	assign Int_sram_axi_s2.awqos = 4'b0;
	assign Int_sram_axi_s2.awregion = 4'b0;
	assign Int_sram_axi_s2.awsize = { 1'b0 , u_be47 };
	assign Int_sram_axi_s2.awsnoop = 3'b0;
	assign Int_sram_axi_s2.awuser = 256'b0;
	assign Int_sram_axi_s2.awvalid = u_5e5d;
	assign Int_sram_axi_s2.bready = u_7943;
	assign Int_sram_axi_s2.cddata = 2048'b0;
	assign Int_sram_axi_s2.cdlast = 1'b0;
	assign Int_sram_axi_s2.cdvalid = 1'b0;
	assign Int_sram_axi_s2.crresp = 5'b0;
	assign Int_sram_axi_s2.crvalid = 1'b0;
	assign Int_sram_axi_s2.rack = 1'b0;
	assign Int_sram_axi_s2.rready = u_9853;
	assign Int_sram_axi_s2.wack = 1'b0;
	assign Int_sram_axi_s2.wdata = { 2016'b0 , u_27c8 };
	assign Int_sram_axi_s2.wid = 16'b0;
	assign Int_sram_axi_s2.wlast = u_f630;
	assign Int_sram_axi_s2.wstrb = { 252'b0 , u_5601 };
	assign Int_sram_axi_s2.wvalid = u_11d5;
	assign Int_sram_axi_s3.aclk = u_cd9b;
	assign Int_sram_axi_s3.acready = 1'b0;
	assign Int_sram_axi_s3.araddr = { 32'b0 , u_8883 };
	assign Int_sram_axi_s3.arbar = 2'b0;
	assign Int_sram_axi_s3.arburst = u_24bf;
	assign Int_sram_axi_s3.arcache = u_96d7;
	assign Int_sram_axi_s3.ardomain = 2'b0;
	assign Int_sram_axi_s3.aresetn = u_cd9b_RstN;
	assign Int_sram_axi_s3.arid = { 12'b0 , u_9807 };
	assign Int_sram_axi_s3.arlen = { 4'b0 , u_6c92 };
	assign Int_sram_axi_s3.arlock = { 1'b0 , u_5ddf };
	assign Int_sram_axi_s3.arprot = u_344d;
	assign Int_sram_axi_s3.arqos = 4'b0;
	assign Int_sram_axi_s3.arregion = 4'b0;
	assign Int_sram_axi_s3.arsize = { 1'b0 , u_3431 };
	assign Int_sram_axi_s3.arsnoop = 4'b0;
	assign Int_sram_axi_s3.aruser = 256'b0;
	assign Int_sram_axi_s3.arvalid = u_9fd3;
	assign Int_sram_axi_s3.awaddr = { 32'b0 , u_21e4 };
	assign Int_sram_axi_s3.awatop = 6'b0;
	assign Int_sram_axi_s3.awbar = 2'b0;
	assign Int_sram_axi_s3.awburst = u_1042;
	assign Int_sram_axi_s3.awcache = u_8332;
	assign Int_sram_axi_s3.awdomain = 2'b0;
	assign Int_sram_axi_s3.awid = { 12'b0 , u_c640 };
	assign Int_sram_axi_s3.awlen = { 4'b0 , u_263f };
	assign Int_sram_axi_s3.awlock = { 1'b0 , u_68c4 };
	assign Int_sram_axi_s3.awprot = u_96ee;
	assign Int_sram_axi_s3.awqos = 4'b0;
	assign Int_sram_axi_s3.awregion = 4'b0;
	assign Int_sram_axi_s3.awsize = { 1'b0 , u_7fa6 };
	assign Int_sram_axi_s3.awsnoop = 3'b0;
	assign Int_sram_axi_s3.awuser = 256'b0;
	assign Int_sram_axi_s3.awvalid = u_2c5a;
	assign Int_sram_axi_s3.bready = u_190e;
	assign Int_sram_axi_s3.cddata = 2048'b0;
	assign Int_sram_axi_s3.cdlast = 1'b0;
	assign Int_sram_axi_s3.cdvalid = 1'b0;
	assign Int_sram_axi_s3.crresp = 5'b0;
	assign Int_sram_axi_s3.crvalid = 1'b0;
	assign Int_sram_axi_s3.rack = 1'b0;
	assign Int_sram_axi_s3.rready = u_a2fe;
	assign Int_sram_axi_s3.wack = 1'b0;
	assign Int_sram_axi_s3.wdata = { 2016'b0 , u_e207 };
	assign Int_sram_axi_s3.wid = 16'b0;
	assign Int_sram_axi_s3.wlast = u_149b;
	assign Int_sram_axi_s3.wstrb = { 252'b0 , u_a56e };
	assign Int_sram_axi_s3.wvalid = u_7134;
	assign Int_usb_axi_m0.acaddr = 64'b0;
	assign Int_usb_axi_m0.aclk = u_59cf;
	assign Int_usb_axi_m0.acprot = 3'b0;
	assign Int_usb_axi_m0.acsnoop = 4'b0;
	assign Int_usb_axi_m0.acvalid = 1'b0;
	assign Int_usb_axi_m0.aresetn = u_59cf_RstN;
	assign Int_usb_axi_m0.arready = u_3dfb;
	assign Int_usb_axi_m0.awready = u_ccbe;
	assign Int_usb_axi_m0.bid = { 12'b0 , u_e6a6 };
	assign Int_usb_axi_m0.bresp = u_56d1;
	assign Int_usb_axi_m0.bvalid = u_f6d4;
	assign Int_usb_axi_m0.cdready = 1'b0;
	assign Int_usb_axi_m0.crready = 1'b0;
	assign Int_usb_axi_m0.rdata = { 2016'b0 , u_86fb };
	assign Int_usb_axi_m0.rid = { 12'b0 , u_596 };
	assign Int_usb_axi_m0.rlast = u_e673;
	assign Int_usb_axi_m0.rresp = u_1bc1;
	assign Int_usb_axi_m0.rvalid = u_dc24;
	assign Int_usb_axi_m0.wready = u_7ad2;
	sw_ns_engines_flexVerifier_uvm_crdl_instrumentedNoc_Top_z_e79c3c56 x_Dut_x(
		.ACPU_WDT_PAddr( u_eed1 )
	,	.ACPU_WDT_PEnable( Int_ACPU_WDT.penable )
	,	.ACPU_WDT_PRData( Int_ACPU_WDT.prdata )
	,	.ACPU_WDT_PReady( Int_ACPU_WDT.pready )
	,	.ACPU_WDT_PSel( Int_ACPU_WDT.psel )
	,	.ACPU_WDT_PSlvErr( Int_ACPU_WDT.pslverr )
	,	.ACPU_WDT_PWBe( u_c119 )
	,	.ACPU_WDT_PWData( u_a410 )
	,	.ACPU_WDT_PWrite( Int_ACPU_WDT.pwrite )
	,	.BCPU_WDT_PAddr( u_c9ec )
	,	.BCPU_WDT_PEnable( Int_BCPU_WDT.penable )
	,	.BCPU_WDT_PRData( Int_BCPU_WDT.prdata )
	,	.BCPU_WDT_PReady( Int_BCPU_WDT.pready )
	,	.BCPU_WDT_PSel( Int_BCPU_WDT.psel )
	,	.BCPU_WDT_PSlvErr( Int_BCPU_WDT.pslverr )
	,	.BCPU_WDT_PWBe( u_854e )
	,	.BCPU_WDT_PWData( u_71cb )
	,	.BCPU_WDT_PWrite( Int_BCPU_WDT.pwrite )
	,	.DMA_apb_s0_paddr( u_3d7a )
	,	.DMA_apb_s0_penable( Int_DMA_apb_s0.penable )
	,	.DMA_apb_s0_prdata( Int_DMA_apb_s0.prdata )
	,	.DMA_apb_s0_pready( Int_DMA_apb_s0.pready )
	,	.DMA_apb_s0_psel( Int_DMA_apb_s0.psel )
	,	.DMA_apb_s0_pslverr( Int_DMA_apb_s0.pslverr )
	,	.DMA_apb_s0_pwbe( u_9ebc )
	,	.DMA_apb_s0_pwdata( u_5ead )
	,	.DMA_apb_s0_pwrite( Int_DMA_apb_s0.pwrite )
	,	.FCB_apb_s0_paddr( u_9b8f )
	,	.FCB_apb_s0_penable( Int_FCB_apb_s0.penable )
	,	.FCB_apb_s0_prdata( Int_FCB_apb_s0.prdata )
	,	.FCB_apb_s0_pready( Int_FCB_apb_s0.pready )
	,	.FCB_apb_s0_psel( Int_FCB_apb_s0.psel )
	,	.FCB_apb_s0_pslverr( Int_FCB_apb_s0.pslverr )
	,	.FCB_apb_s0_pwbe( u_d7f3 )
	,	.FCB_apb_s0_pwdata( u_e05e )
	,	.FCB_apb_s0_pwrite( Int_FCB_apb_s0.pwrite )
	,	.GPIO_apb_s0_paddr( u_9d9a )
	,	.GPIO_apb_s0_penable( Int_GPIO_apb_s0.penable )
	,	.GPIO_apb_s0_prdata( Int_GPIO_apb_s0.prdata )
	,	.GPIO_apb_s0_pready( Int_GPIO_apb_s0.pready )
	,	.GPIO_apb_s0_psel( Int_GPIO_apb_s0.psel )
	,	.GPIO_apb_s0_pslverr( Int_GPIO_apb_s0.pslverr )
	,	.GPIO_apb_s0_pwbe( u_6538 )
	,	.GPIO_apb_s0_pwdata( u_e8d9 )
	,	.GPIO_apb_s0_pwrite( Int_GPIO_apb_s0.pwrite )
	,	.GPT_apb_s0_paddr( u_239 )
	,	.GPT_apb_s0_penable( Int_GPT_apb_s0.penable )
	,	.GPT_apb_s0_prdata( Int_GPT_apb_s0.prdata )
	,	.GPT_apb_s0_pready( Int_GPT_apb_s0.pready )
	,	.GPT_apb_s0_psel( Int_GPT_apb_s0.psel )
	,	.GPT_apb_s0_pslverr( Int_GPT_apb_s0.pslverr )
	,	.GPT_apb_s0_pwbe( u_5fc9 )
	,	.GPT_apb_s0_pwdata( u_c164 )
	,	.GPT_apb_s0_pwrite( Int_GPT_apb_s0.pwrite )
	,	.I2C_apb_s0_paddr( u_e4a0 )
	,	.I2C_apb_s0_penable( Int_I2C_apb_s0.penable )
	,	.I2C_apb_s0_prdata( Int_I2C_apb_s0.prdata )
	,	.I2C_apb_s0_pready( Int_I2C_apb_s0.pready )
	,	.I2C_apb_s0_psel( Int_I2C_apb_s0.psel )
	,	.I2C_apb_s0_pslverr( Int_I2C_apb_s0.pslverr )
	,	.I2C_apb_s0_pwbe( u_177e )
	,	.I2C_apb_s0_pwdata( u_1397 )
	,	.I2C_apb_s0_pwrite( Int_I2C_apb_s0.pwrite )
	,	.MBOX_apb_s0_paddr( u_58f9 )
	,	.MBOX_apb_s0_penable( Int_MBOX_apb_s0.penable )
	,	.MBOX_apb_s0_prdata( Int_MBOX_apb_s0.prdata )
	,	.MBOX_apb_s0_pready( Int_MBOX_apb_s0.pready )
	,	.MBOX_apb_s0_psel( Int_MBOX_apb_s0.psel )
	,	.MBOX_apb_s0_pslverr( Int_MBOX_apb_s0.pslverr )
	,	.MBOX_apb_s0_pwbe( u_8951 )
	,	.MBOX_apb_s0_pwdata( u_d04c )
	,	.MBOX_apb_s0_pwrite( Int_MBOX_apb_s0.pwrite )
	,	.PUFCC_apb_s0_PAddr( u_ef3b )
	,	.PUFCC_apb_s0_PEnable( Int_PUFCC_apb_s0.penable )
	,	.PUFCC_apb_s0_PProt( u_9e51 )
	,	.PUFCC_apb_s0_PRData( Int_PUFCC_apb_s0.prdata )
	,	.PUFCC_apb_s0_PReady( Int_PUFCC_apb_s0.pready )
	,	.PUFCC_apb_s0_PSel( Int_PUFCC_apb_s0.psel )
	,	.PUFCC_apb_s0_PSlvErr( Int_PUFCC_apb_s0.pslverr )
	,	.PUFCC_apb_s0_PStrb( u_28b7 )
	,	.PUFCC_apb_s0_PWData( u_eb16 )
	,	.PUFCC_apb_s0_PWrite( Int_PUFCC_apb_s0.pwrite )
	,	.SCU_PAddr( u_d28a )
	,	.SCU_PEnable( Int_SCU.penable )
	,	.SCU_PRData( Int_SCU.prdata )
	,	.SCU_PReady( Int_SCU.pready )
	,	.SCU_PSel( Int_SCU.psel )
	,	.SCU_PSlvErr( Int_SCU.pslverr )
	,	.SCU_PWBe( u_2478 )
	,	.SCU_PWData( u_c709 )
	,	.SCU_PWrite( Int_SCU.pwrite )
	,	.SPI_ahb_s0_haddr( u_HAddr )
	,	.SPI_ahb_s0_hburst( u_HBurst )
	,	.SPI_ahb_s0_hmastlock( u_HMastLock )
	,	.SPI_ahb_s0_hprot( u_HProt )
	,	.SPI_ahb_s0_hrdata( u_HRData )
	,	.SPI_ahb_s0_hready( u_HReady )
	,	.SPI_ahb_s0_hresp( u_HResp )
	,	.SPI_ahb_s0_hsel( u_HSel )
	,	.SPI_ahb_s0_hsize( u_HSize )
	,	.SPI_ahb_s0_htrans( u_HTrans )
	,	.SPI_ahb_s0_hwbe( u_HWBe )
	,	.SPI_ahb_s0_hwdata( u_HWData )
	,	.SPI_ahb_s0_hwrite( u_HWrite )
	,	.SPI_mem_ahb_haddr( u_417_HAddr )
	,	.SPI_mem_ahb_hburst( u_417_HBurst )
	,	.SPI_mem_ahb_hmastlock( u_417_HMastLock )
	,	.SPI_mem_ahb_hprot( u_417_HProt )
	,	.SPI_mem_ahb_hrdata( u_417_HRData )
	,	.SPI_mem_ahb_hready( u_417_HReady )
	,	.SPI_mem_ahb_hresp( u_417_HResp )
	,	.SPI_mem_ahb_hsel( u_417_HSel )
	,	.SPI_mem_ahb_hsize( u_417_HSize )
	,	.SPI_mem_ahb_htrans( u_417_HTrans )
	,	.SPI_mem_ahb_hwbe( u_417_HWBe )
	,	.SPI_mem_ahb_hwdata( u_417_HWData )
	,	.SPI_mem_ahb_hwrite( u_417_HWrite )
	,	.UART_apb_s0_paddr( u_b805 )
	,	.UART_apb_s0_penable( Int_UART_apb_s0.penable )
	,	.UART_apb_s0_prdata( Int_UART_apb_s0.prdata )
	,	.UART_apb_s0_pready( Int_UART_apb_s0.pready )
	,	.UART_apb_s0_psel( Int_UART_apb_s0.psel )
	,	.UART_apb_s0_pslverr( Int_UART_apb_s0.pslverr )
	,	.UART_apb_s0_pwbe( u_60e5 )
	,	.UART_apb_s0_pwdata( u_95d8 )
	,	.UART_apb_s0_pwrite( Int_UART_apb_s0.pwrite )
	,	.UART_apb_s1_paddr( u_8a64 )
	,	.UART_apb_s1_penable( Int_UART_apb_s1.penable )
	,	.UART_apb_s1_prdata( Int_UART_apb_s1.prdata )
	,	.UART_apb_s1_pready( Int_UART_apb_s1.pready )
	,	.UART_apb_s1_psel( Int_UART_apb_s1.psel )
	,	.UART_apb_s1_pslverr( Int_UART_apb_s1.pslverr )
	,	.UART_apb_s1_pwbe( u_9332 )
	,	.UART_apb_s1_pwdata( u_f6a3 )
	,	.UART_apb_s1_pwrite( Int_UART_apb_s1.pwrite )
	,	.USB_axi_s0_ar_addr( u_b178 )
	,	.USB_axi_s0_ar_prot( u_ef6e )
	,	.USB_axi_s0_ar_ready( Int_USB_axi_s0.arready )
	,	.USB_axi_s0_ar_valid( u_a426 )
	,	.USB_axi_s0_aw_addr( u_27d3 )
	,	.USB_axi_s0_aw_prot( u_e119 )
	,	.USB_axi_s0_aw_ready( Int_USB_axi_s0.awready )
	,	.USB_axi_s0_aw_valid( u_55cf )
	,	.USB_axi_s0_b_ready( u_6ead )
	,	.USB_axi_s0_b_resp( Int_USB_axi_s0.bresp )
	,	.USB_axi_s0_b_valid( Int_USB_axi_s0.bvalid )
	,	.USB_axi_s0_r_data( Int_USB_axi_s0.rdata [31:0] )
	,	.USB_axi_s0_r_ready( u_ce7d )
	,	.USB_axi_s0_r_resp( Int_USB_axi_s0.rresp )
	,	.USB_axi_s0_r_valid( Int_USB_axi_s0.rvalid )
	,	.USB_axi_s0_w_data( u_e57e )
	,	.USB_axi_s0_w_ready( Int_USB_axi_s0.wready )
	,	.USB_axi_s0_w_strb( u_b69b )
	,	.USB_axi_s0_w_valid( u_d52b )
	,	.acpu_axi_m0_ar_addr( Int_acpu_axi_m0.araddr [31:0] )
	,	.acpu_axi_m0_ar_burst( Int_acpu_axi_m0.arburst )
	,	.acpu_axi_m0_ar_cache( Int_acpu_axi_m0.arcache )
	,	.acpu_axi_m0_ar_id( Int_acpu_axi_m0.arid [3:0] )
	,	.acpu_axi_m0_ar_len( Int_acpu_axi_m0.arlen [2:0] )
	,	.acpu_axi_m0_ar_lock( Int_acpu_axi_m0.arlock [0] )
	,	.acpu_axi_m0_ar_prot( Int_acpu_axi_m0.arprot )
	,	.acpu_axi_m0_ar_ready( u_288b )
	,	.acpu_axi_m0_ar_size( Int_acpu_axi_m0.arsize [2:0] )
	,	.acpu_axi_m0_ar_valid( Int_acpu_axi_m0.arvalid )
	,	.acpu_axi_m0_aw_addr( Int_acpu_axi_m0.awaddr [31:0] )
	,	.acpu_axi_m0_aw_burst( Int_acpu_axi_m0.awburst )
	,	.acpu_axi_m0_aw_cache( Int_acpu_axi_m0.awcache )
	,	.acpu_axi_m0_aw_id( Int_acpu_axi_m0.awid [3:0] )
	,	.acpu_axi_m0_aw_len( Int_acpu_axi_m0.awlen [2:0] )
	,	.acpu_axi_m0_aw_lock( Int_acpu_axi_m0.awlock [0] )
	,	.acpu_axi_m0_aw_prot( Int_acpu_axi_m0.awprot )
	,	.acpu_axi_m0_aw_ready( u_f406 )
	,	.acpu_axi_m0_aw_size( Int_acpu_axi_m0.awsize [2:0] )
	,	.acpu_axi_m0_aw_valid( Int_acpu_axi_m0.awvalid )
	,	.acpu_axi_m0_b_id( u_89d6 )
	,	.acpu_axi_m0_b_ready( Int_acpu_axi_m0.bready )
	,	.acpu_axi_m0_b_resp( u_af5d )
	,	.acpu_axi_m0_b_valid( u_5dac )
	,	.acpu_axi_m0_r_data( u_ae3f )
	,	.acpu_axi_m0_r_id( u_5446 )
	,	.acpu_axi_m0_r_last( u_cd43 )
	,	.acpu_axi_m0_r_ready( Int_acpu_axi_m0.rready )
	,	.acpu_axi_m0_r_resp( u_c5ed )
	,	.acpu_axi_m0_r_valid( u_7e5c )
	,	.acpu_axi_m0_w_data( Int_acpu_axi_m0.wdata [63:0] )
	,	.acpu_axi_m0_w_last( Int_acpu_axi_m0.wlast )
	,	.acpu_axi_m0_w_ready( u_f4b6 )
	,	.acpu_axi_m0_w_strb( Int_acpu_axi_m0.wstrb [7:0] )
	,	.acpu_axi_m0_w_valid( Int_acpu_axi_m0.wvalid )
	,	.arm_axi_m0_ar_addr( Int_arm_axi_m0.araddr [31:0] )
	,	.arm_axi_m0_ar_burst( Int_arm_axi_m0.arburst )
	,	.arm_axi_m0_ar_cache( Int_arm_axi_m0.arcache )
	,	.arm_axi_m0_ar_id( Int_arm_axi_m0.arid [3:0] )
	,	.arm_axi_m0_ar_len( Int_arm_axi_m0.arlen [2:0] )
	,	.arm_axi_m0_ar_lock( Int_arm_axi_m0.arlock [0] )
	,	.arm_axi_m0_ar_prot( Int_arm_axi_m0.arprot )
	,	.arm_axi_m0_ar_ready( u_1263 )
	,	.arm_axi_m0_ar_size( Int_arm_axi_m0.arsize [2:0] )
	,	.arm_axi_m0_ar_valid( Int_arm_axi_m0.arvalid )
	,	.arm_axi_m0_aw_addr( Int_arm_axi_m0.awaddr [31:0] )
	,	.arm_axi_m0_aw_burst( Int_arm_axi_m0.awburst )
	,	.arm_axi_m0_aw_cache( Int_arm_axi_m0.awcache )
	,	.arm_axi_m0_aw_id( Int_arm_axi_m0.awid [3:0] )
	,	.arm_axi_m0_aw_len( Int_arm_axi_m0.awlen [2:0] )
	,	.arm_axi_m0_aw_lock( Int_arm_axi_m0.awlock [0] )
	,	.arm_axi_m0_aw_prot( Int_arm_axi_m0.awprot )
	,	.arm_axi_m0_aw_ready( u_ef86 )
	,	.arm_axi_m0_aw_size( Int_arm_axi_m0.awsize [2:0] )
	,	.arm_axi_m0_aw_valid( Int_arm_axi_m0.awvalid )
	,	.arm_axi_m0_b_id( u_ac5e )
	,	.arm_axi_m0_b_ready( Int_arm_axi_m0.bready )
	,	.arm_axi_m0_b_resp( u_6d49 )
	,	.arm_axi_m0_b_valid( u_7cbc )
	,	.arm_axi_m0_r_data( u_c693 )
	,	.arm_axi_m0_r_id( u_70ee )
	,	.arm_axi_m0_r_last( u_235b )
	,	.arm_axi_m0_r_ready( Int_arm_axi_m0.rready )
	,	.arm_axi_m0_r_resp( u_e619 )
	,	.arm_axi_m0_r_valid( u_b32c )
	,	.arm_axi_m0_w_data( Int_arm_axi_m0.wdata [63:0] )
	,	.arm_axi_m0_w_last( Int_arm_axi_m0.wlast )
	,	.arm_axi_m0_w_ready( u_cdaa )
	,	.arm_axi_m0_w_strb( Int_arm_axi_m0.wstrb [7:0] )
	,	.arm_axi_m0_w_valid( Int_arm_axi_m0.wvalid )
	,	.bcpu_ahb_m0_haddr( Int_bcpu_ahb_m0.master_if[0].haddr [31:0] )
	,	.bcpu_ahb_m0_hburst( Int_bcpu_ahb_m0.master_if[0].hburst )
	,	.bcpu_ahb_m0_hmastlock( Int_bcpu_ahb_m0.master_if[0].hlock )
	,	.bcpu_ahb_m0_hprot( Int_bcpu_ahb_m0.master_if[0].hprot [3:0] )
	,	.bcpu_ahb_m0_hrdata( u_f8f7 )
	,	.bcpu_ahb_m0_hready( Int_bcpu_ahb_m0.hready_bus )
	,	.bcpu_ahb_m0_hresp( u_e1a0 )
	,	.bcpu_ahb_m0_hsel( 1'b1 )
	,	.bcpu_ahb_m0_hsize( Int_bcpu_ahb_m0.master_if[0].hsize )
	,	.bcpu_ahb_m0_htrans( Int_bcpu_ahb_m0.master_if[0].htrans )
	,	.bcpu_ahb_m0_hwbe( 4'b1111 )
	,	.bcpu_ahb_m0_hwdata( Int_bcpu_ahb_m0.master_if[0].hwdata [31:0] )
	,	.bcpu_ahb_m0_hwrite( Int_bcpu_ahb_m0.master_if[0].hwrite )
	,	.clk_133( u_ed6e )
	,	.clk_266( u_a5d7 )
	,	.clk_533( u_182 )
	,	.cpu_observer_AFReady( Int_cpu_observer.AFReady )
	,	.cpu_observer_AFValid( Int_cpu_observer.AFValid )
	,	.cpu_observer_ATBytes( u_e646 )
	,	.cpu_observer_ATData( u_3de8 )
	,	.cpu_observer_ATId( Int_cpu_observer.ATId )
	,	.cpu_observer_ATReady( Int_cpu_observer.ATReady )
	,	.cpu_observer_ATValid( Int_cpu_observer.ATValid )
	,	.ddr_axi_s0_ar_addr( u_1f0c )
	,	.ddr_axi_s0_ar_burst( u_c996 )
	,	.ddr_axi_s0_ar_cache( u_a922 )
	,	.ddr_axi_s0_ar_id( u_e628 )
	,	.ddr_axi_s0_ar_len( u_3bdb )
	,	.ddr_axi_s0_ar_lock( u_4b70 )
	,	.ddr_axi_s0_ar_prot( u_f612 )
	,	.ddr_axi_s0_ar_ready( Int_ddr_axi_s0.arready )
	,	.ddr_axi_s0_ar_size( u_186e )
	,	.ddr_axi_s0_ar_valid( u_50ba )
	,	.ddr_axi_s0_aw_addr( u_fa8f )
	,	.ddr_axi_s0_aw_burst( u_23db )
	,	.ddr_axi_s0_aw_cache( u_febf )
	,	.ddr_axi_s0_aw_id( u_3e13 )
	,	.ddr_axi_s0_aw_len( u_cc26 )
	,	.ddr_axi_s0_aw_lock( u_27ef )
	,	.ddr_axi_s0_aw_prot( u_8315 )
	,	.ddr_axi_s0_aw_ready( Int_ddr_axi_s0.awready )
	,	.ddr_axi_s0_aw_size( u_c6bd )
	,	.ddr_axi_s0_aw_valid( u_feb )
	,	.ddr_axi_s0_b_id( Int_ddr_axi_s0.bid [3:0] )
	,	.ddr_axi_s0_b_ready( u_db21 )
	,	.ddr_axi_s0_b_resp( Int_ddr_axi_s0.bresp )
	,	.ddr_axi_s0_b_valid( Int_ddr_axi_s0.bvalid )
	,	.ddr_axi_s0_r_data( Int_ddr_axi_s0.rdata [127:0] )
	,	.ddr_axi_s0_r_id( Int_ddr_axi_s0.rid [3:0] )
	,	.ddr_axi_s0_r_last( Int_ddr_axi_s0.rlast )
	,	.ddr_axi_s0_r_ready( u_fd1 )
	,	.ddr_axi_s0_r_resp( Int_ddr_axi_s0.rresp )
	,	.ddr_axi_s0_r_valid( Int_ddr_axi_s0.rvalid )
	,	.ddr_axi_s0_w_data( u_54d2 )
	,	.ddr_axi_s0_w_last( u_f6da )
	,	.ddr_axi_s0_w_ready( Int_ddr_axi_s0.wready )
	,	.ddr_axi_s0_w_strb( u_d987 )
	,	.ddr_axi_s0_w_valid( u_861f )
	,	.ddr_axi_s1_ar_addr( u_47d1 )
	,	.ddr_axi_s1_ar_burst( u_42e1 )
	,	.ddr_axi_s1_ar_cache( u_2d29 )
	,	.ddr_axi_s1_ar_id( u_1055 )
	,	.ddr_axi_s1_ar_len( u_9ac8 )
	,	.ddr_axi_s1_ar_lock( u_be31 )
	,	.ddr_axi_s1_ar_prot( u_cd4b )
	,	.ddr_axi_s1_ar_ready( Int_ddr_axi_s1.arready )
	,	.ddr_axi_s1_ar_size( u_4dbb )
	,	.ddr_axi_s1_ar_valid( u_791 )
	,	.ddr_axi_s1_aw_addr( u_8296 )
	,	.ddr_axi_s1_aw_burst( u_725c )
	,	.ddr_axi_s1_aw_cache( u_66ec )
	,	.ddr_axi_s1_aw_id( u_4fa2 )
	,	.ddr_axi_s1_aw_len( u_9765 )
	,	.ddr_axi_s1_aw_lock( u_7132 )
	,	.ddr_axi_s1_aw_prot( u_3740 )
	,	.ddr_axi_s1_aw_ready( Int_ddr_axi_s1.awready )
	,	.ddr_axi_s1_aw_size( u_e33c )
	,	.ddr_axi_s1_aw_valid( u_55b0 )
	,	.ddr_axi_s1_b_id( Int_ddr_axi_s1.bid [3:0] )
	,	.ddr_axi_s1_b_ready( u_2804 )
	,	.ddr_axi_s1_b_resp( Int_ddr_axi_s1.bresp )
	,	.ddr_axi_s1_b_valid( Int_ddr_axi_s1.bvalid )
	,	.ddr_axi_s1_r_data( Int_ddr_axi_s1.rdata [127:0] )
	,	.ddr_axi_s1_r_id( Int_ddr_axi_s1.rid [3:0] )
	,	.ddr_axi_s1_r_last( Int_ddr_axi_s1.rlast )
	,	.ddr_axi_s1_r_ready( u_69b4 )
	,	.ddr_axi_s1_r_resp( Int_ddr_axi_s1.rresp )
	,	.ddr_axi_s1_r_valid( Int_ddr_axi_s1.rvalid )
	,	.ddr_axi_s1_w_data( u_d759 )
	,	.ddr_axi_s1_w_last( u_256d )
	,	.ddr_axi_s1_w_ready( Int_ddr_axi_s1.wready )
	,	.ddr_axi_s1_w_strb( u_3bac )
	,	.ddr_axi_s1_w_valid( u_b55e )
	,	.ddr_axi_s2_ar_addr( u_27c2 )
	,	.ddr_axi_s2_ar_burst( u_c740 )
	,	.ddr_axi_s2_ar_cache( u_2ae8 )
	,	.ddr_axi_s2_ar_id( u_9496 )
	,	.ddr_axi_s2_ar_len( u_61 )
	,	.ddr_axi_s2_ar_lock( u_492e )
	,	.ddr_axi_s2_ar_prot( u_c39c )
	,	.ddr_axi_s2_ar_ready( Int_ddr_axi_s2.arready )
	,	.ddr_axi_s2_ar_size( u_c420 )
	,	.ddr_axi_s2_ar_valid( u_5f6c )
	,	.ddr_axi_s2_aw_addr( u_f715 )
	,	.ddr_axi_s2_aw_burst( u_ccad )
	,	.ddr_axi_s2_aw_cache( u_c30d )
	,	.ddr_axi_s2_aw_id( u_6131 )
	,	.ddr_axi_s2_aw_len( u_966c )
	,	.ddr_axi_s2_aw_lock( u_1065 )
	,	.ddr_axi_s2_aw_prot( u_460f )
	,	.ddr_axi_s2_aw_ready( Int_ddr_axi_s2.awready )
	,	.ddr_axi_s2_aw_size( u_1497 )
	,	.ddr_axi_s2_aw_valid( u_dee5 )
	,	.ddr_axi_s2_b_id( Int_ddr_axi_s2.bid [3:0] )
	,	.ddr_axi_s2_b_ready( u_4b6f )
	,	.ddr_axi_s2_b_resp( Int_ddr_axi_s2.bresp )
	,	.ddr_axi_s2_b_valid( Int_ddr_axi_s2.bvalid )
	,	.ddr_axi_s2_r_data( Int_ddr_axi_s2.rdata [127:0] )
	,	.ddr_axi_s2_r_id( Int_ddr_axi_s2.rid [3:0] )
	,	.ddr_axi_s2_r_last( Int_ddr_axi_s2.rlast )
	,	.ddr_axi_s2_r_ready( u_37ff )
	,	.ddr_axi_s2_r_resp( Int_ddr_axi_s2.rresp )
	,	.ddr_axi_s2_r_valid( Int_ddr_axi_s2.rvalid )
	,	.ddr_axi_s2_w_data( u_c6b4 )
	,	.ddr_axi_s2_w_last( u_f218 )
	,	.ddr_axi_s2_w_ready( Int_ddr_axi_s2.wready )
	,	.ddr_axi_s2_w_strb( u_ca2d )
	,	.ddr_axi_s2_w_valid( u_4625 )
	,	.ddr_axi_s3_ar_addr( u_c287 )
	,	.ddr_axi_s3_ar_burst( u_37e3 )
	,	.ddr_axi_s3_ar_cache( u_8937 )
	,	.ddr_axi_s3_ar_id( u_15b )
	,	.ddr_axi_s3_ar_len( u_5dae )
	,	.ddr_axi_s3_ar_lock( u_ab37 )
	,	.ddr_axi_s3_ar_prot( u_fd7d )
	,	.ddr_axi_s3_ar_ready( Int_ddr_axi_s3.arready )
	,	.ddr_axi_s3_ar_size( u_7f95 )
	,	.ddr_axi_s3_ar_valid( u_1a93 )
	,	.ddr_axi_s3_aw_addr( u_ea4 )
	,	.ddr_axi_s3_aw_burst( u_d3e )
	,	.ddr_axi_s3_aw_cache( u_79a )
	,	.ddr_axi_s3_aw_id( u_a470 )
	,	.ddr_axi_s3_aw_len( u_b343 )
	,	.ddr_axi_s3_aw_lock( u_7f78 )
	,	.ddr_axi_s3_aw_prot( u_1fba )
	,	.ddr_axi_s3_aw_ready( Int_ddr_axi_s3.awready )
	,	.ddr_axi_s3_aw_size( u_bcc6 )
	,	.ddr_axi_s3_aw_valid( u_5ce2 )
	,	.ddr_axi_s3_b_id( Int_ddr_axi_s3.bid [3:0] )
	,	.ddr_axi_s3_b_ready( u_f872 )
	,	.ddr_axi_s3_b_resp( Int_ddr_axi_s3.bresp )
	,	.ddr_axi_s3_b_valid( Int_ddr_axi_s3.bvalid )
	,	.ddr_axi_s3_r_data( Int_ddr_axi_s3.rdata [127:0] )
	,	.ddr_axi_s3_r_id( Int_ddr_axi_s3.rid [3:0] )
	,	.ddr_axi_s3_r_last( Int_ddr_axi_s3.rlast )
	,	.ddr_axi_s3_r_ready( u_f402 )
	,	.ddr_axi_s3_r_resp( Int_ddr_axi_s3.rresp )
	,	.ddr_axi_s3_r_valid( Int_ddr_axi_s3.rvalid )
	,	.ddr_axi_s3_w_data( u_2fab )
	,	.ddr_axi_s3_w_last( u_7703 )
	,	.ddr_axi_s3_w_ready( Int_ddr_axi_s3.wready )
	,	.ddr_axi_s3_w_strb( u_8ea2 )
	,	.ddr_axi_s3_w_valid( u_c974 )
	,	.ddr_axil_s0_ar_addr( u_4833 )
	,	.ddr_axil_s0_ar_prot( u_e0bd )
	,	.ddr_axil_s0_ar_ready( Int_ddr_axil_s0.arready )
	,	.ddr_axil_s0_ar_valid( u_41a3 )
	,	.ddr_axil_s0_aw_addr( u_5694 )
	,	.ddr_axil_s0_aw_prot( u_431e )
	,	.ddr_axil_s0_aw_ready( Int_ddr_axil_s0.awready )
	,	.ddr_axil_s0_aw_valid( u_7d6a )
	,	.ddr_axil_s0_b_ready( u_49be )
	,	.ddr_axil_s0_b_resp( Int_ddr_axil_s0.bresp )
	,	.ddr_axil_s0_b_valid( Int_ddr_axil_s0.bvalid )
	,	.ddr_axil_s0_r_data( Int_ddr_axil_s0.rdata [31:0] )
	,	.ddr_axil_s0_r_ready( u_66ce_2162 )
	,	.ddr_axil_s0_r_resp( Int_ddr_axil_s0.rresp )
	,	.ddr_axil_s0_r_valid( Int_ddr_axil_s0.rvalid )
	,	.ddr_axil_s0_w_data( u_8a97 )
	,	.ddr_axil_s0_w_ready( Int_ddr_axil_s0.wready )
	,	.ddr_axil_s0_w_strb( u_697e )
	,	.ddr_axil_s0_w_valid( u_bf64 )
	,	.dma_axi_m0_ar_addr( Int_dma_axi_m0.araddr [31:0] )
	,	.dma_axi_m0_ar_burst( Int_dma_axi_m0.arburst )
	,	.dma_axi_m0_ar_cache( Int_dma_axi_m0.arcache )
	,	.dma_axi_m0_ar_id( Int_dma_axi_m0.arid [3:0] )
	,	.dma_axi_m0_ar_len( Int_dma_axi_m0.arlen [3:0] )
	,	.dma_axi_m0_ar_lock( Int_dma_axi_m0.arlock [0] )
	,	.dma_axi_m0_ar_prot( Int_dma_axi_m0.arprot )
	,	.dma_axi_m0_ar_ready( u_6457 )
	,	.dma_axi_m0_ar_size( Int_dma_axi_m0.arsize [2:0] )
	,	.dma_axi_m0_ar_valid( Int_dma_axi_m0.arvalid )
	,	.dma_axi_m0_aw_addr( Int_dma_axi_m0.awaddr [31:0] )
	,	.dma_axi_m0_aw_burst( Int_dma_axi_m0.awburst )
	,	.dma_axi_m0_aw_cache( Int_dma_axi_m0.awcache )
	,	.dma_axi_m0_aw_id( Int_dma_axi_m0.awid [3:0] )
	,	.dma_axi_m0_aw_len( Int_dma_axi_m0.awlen [3:0] )
	,	.dma_axi_m0_aw_lock( Int_dma_axi_m0.awlock [0] )
	,	.dma_axi_m0_aw_prot( Int_dma_axi_m0.awprot )
	,	.dma_axi_m0_aw_ready( u_b792 )
	,	.dma_axi_m0_aw_size( Int_dma_axi_m0.awsize [2:0] )
	,	.dma_axi_m0_aw_valid( Int_dma_axi_m0.awvalid )
	,	.dma_axi_m0_b_id( u_b532 )
	,	.dma_axi_m0_b_ready( Int_dma_axi_m0.bready )
	,	.dma_axi_m0_b_resp( u_6c75 )
	,	.dma_axi_m0_b_valid( u_6df0 )
	,	.dma_axi_m0_r_data( u_3507 )
	,	.dma_axi_m0_r_id( u_67e2 )
	,	.dma_axi_m0_r_last( u_ac7f )
	,	.dma_axi_m0_r_ready( Int_dma_axi_m0.rready )
	,	.dma_axi_m0_r_resp( u_e7a5 )
	,	.dma_axi_m0_r_valid( u_680 )
	,	.dma_axi_m0_w_data( Int_dma_axi_m0.wdata [31:0] )
	,	.dma_axi_m0_w_last( Int_dma_axi_m0.wlast )
	,	.dma_axi_m0_w_ready( u_4b4e )
	,	.dma_axi_m0_w_strb( Int_dma_axi_m0.wstrb [3:0] )
	,	.dma_axi_m0_w_valid( Int_dma_axi_m0.wvalid )
	,	.dma_axi_m1_ar_addr( Int_dma_axi_m1.araddr [31:0] )
	,	.dma_axi_m1_ar_burst( Int_dma_axi_m1.arburst )
	,	.dma_axi_m1_ar_cache( Int_dma_axi_m1.arcache )
	,	.dma_axi_m1_ar_id( Int_dma_axi_m1.arid [3:0] )
	,	.dma_axi_m1_ar_len( Int_dma_axi_m1.arlen [3:0] )
	,	.dma_axi_m1_ar_lock( Int_dma_axi_m1.arlock [0] )
	,	.dma_axi_m1_ar_prot( Int_dma_axi_m1.arprot )
	,	.dma_axi_m1_ar_ready( u_d5e8 )
	,	.dma_axi_m1_ar_size( Int_dma_axi_m1.arsize [2:0] )
	,	.dma_axi_m1_ar_valid( Int_dma_axi_m1.arvalid )
	,	.dma_axi_m1_aw_addr( Int_dma_axi_m1.awaddr [31:0] )
	,	.dma_axi_m1_aw_burst( Int_dma_axi_m1.awburst )
	,	.dma_axi_m1_aw_cache( Int_dma_axi_m1.awcache )
	,	.dma_axi_m1_aw_id( Int_dma_axi_m1.awid [3:0] )
	,	.dma_axi_m1_aw_len( Int_dma_axi_m1.awlen [3:0] )
	,	.dma_axi_m1_aw_lock( Int_dma_axi_m1.awlock [0] )
	,	.dma_axi_m1_aw_prot( Int_dma_axi_m1.awprot )
	,	.dma_axi_m1_aw_ready( u_af5 )
	,	.dma_axi_m1_aw_size( Int_dma_axi_m1.awsize [2:0] )
	,	.dma_axi_m1_aw_valid( Int_dma_axi_m1.awvalid )
	,	.dma_axi_m1_b_id( u_ad45 )
	,	.dma_axi_m1_b_ready( Int_dma_axi_m1.bready )
	,	.dma_axi_m1_b_resp( u_5e2a )
	,	.dma_axi_m1_b_valid( u_8261 )
	,	.dma_axi_m1_r_data( u_d630 )
	,	.dma_axi_m1_r_id( u_b2f5 )
	,	.dma_axi_m1_r_last( u_1584 )
	,	.dma_axi_m1_r_ready( Int_dma_axi_m1.rready )
	,	.dma_axi_m1_r_resp( u_3b9a )
	,	.dma_axi_m1_r_valid( u_46b1 )
	,	.dma_axi_m1_w_data( Int_dma_axi_m1.wdata [31:0] )
	,	.dma_axi_m1_w_last( Int_dma_axi_m1.wlast )
	,	.dma_axi_m1_w_ready( u_995b )
	,	.dma_axi_m1_w_strb( Int_dma_axi_m1.wstrb [3:0] )
	,	.dma_axi_m1_w_valid( Int_dma_axi_m1.wvalid )
	,	.fpga_ahb_s0_haddr( u_2736_HAddr )
	,	.fpga_ahb_s0_hburst( u_2736_HBurst )
	,	.fpga_ahb_s0_hmastlock( u_2736_HMastLock )
	,	.fpga_ahb_s0_hprot( u_2736_HProt )
	,	.fpga_ahb_s0_hrdata( u_2736_HRData )
	,	.fpga_ahb_s0_hready( u_2736_HReady )
	,	.fpga_ahb_s0_hresp( u_2736_HResp )
	,	.fpga_ahb_s0_hsel( u_2736_HSel )
	,	.fpga_ahb_s0_hsize( u_2736_HSize )
	,	.fpga_ahb_s0_htrans( u_2736_HTrans )
	,	.fpga_ahb_s0_hwbe( u_2736_HWBe )
	,	.fpga_ahb_s0_hwdata( u_2736_HWData )
	,	.fpga_ahb_s0_hwrite( u_2736_HWrite )
	,	.fpga_axi_m0_ar_addr( Int_fpga_axi_m0.araddr [31:0] )
	,	.fpga_axi_m0_ar_burst( Int_fpga_axi_m0.arburst )
	,	.fpga_axi_m0_ar_cache( Int_fpga_axi_m0.arcache )
	,	.fpga_axi_m0_ar_id( Int_fpga_axi_m0.arid [3:0] )
	,	.fpga_axi_m0_ar_len( Int_fpga_axi_m0.arlen [2:0] )
	,	.fpga_axi_m0_ar_lock( Int_fpga_axi_m0.arlock [0] )
	,	.fpga_axi_m0_ar_prot( Int_fpga_axi_m0.arprot )
	,	.fpga_axi_m0_ar_ready( u_fea0 )
	,	.fpga_axi_m0_ar_size( Int_fpga_axi_m0.arsize [2:0] )
	,	.fpga_axi_m0_ar_valid( Int_fpga_axi_m0.arvalid )
	,	.fpga_axi_m0_aw_addr( Int_fpga_axi_m0.awaddr [31:0] )
	,	.fpga_axi_m0_aw_burst( Int_fpga_axi_m0.awburst )
	,	.fpga_axi_m0_aw_cache( Int_fpga_axi_m0.awcache )
	,	.fpga_axi_m0_aw_id( Int_fpga_axi_m0.awid [3:0] )
	,	.fpga_axi_m0_aw_len( Int_fpga_axi_m0.awlen [2:0] )
	,	.fpga_axi_m0_aw_lock( Int_fpga_axi_m0.awlock [0] )
	,	.fpga_axi_m0_aw_prot( Int_fpga_axi_m0.awprot )
	,	.fpga_axi_m0_aw_ready( u_d4e5 )
	,	.fpga_axi_m0_aw_size( Int_fpga_axi_m0.awsize [2:0] )
	,	.fpga_axi_m0_aw_valid( Int_fpga_axi_m0.awvalid )
	,	.fpga_axi_m0_b_id( u_83ad )
	,	.fpga_axi_m0_b_ready( Int_fpga_axi_m0.bready )
	,	.fpga_axi_m0_b_resp( u_178e )
	,	.fpga_axi_m0_b_valid( u_80e9 )
	,	.fpga_axi_m0_r_data( u_d45c )
	,	.fpga_axi_m0_r_id( u_cbbd )
	,	.fpga_axi_m0_r_last( u_1f74 )
	,	.fpga_axi_m0_r_ready( Int_fpga_axi_m0.rready )
	,	.fpga_axi_m0_r_resp( u_ce3e )
	,	.fpga_axi_m0_r_valid( u_6bf9 )
	,	.fpga_axi_m0_w_data( Int_fpga_axi_m0.wdata [63:0] )
	,	.fpga_axi_m0_w_last( Int_fpga_axi_m0.wlast )
	,	.fpga_axi_m0_w_ready( u_2317 )
	,	.fpga_axi_m0_w_strb( Int_fpga_axi_m0.wstrb [7:0] )
	,	.fpga_axi_m0_w_valid( Int_fpga_axi_m0.wvalid )
	,	.fpga_axi_m1_ar_addr( Int_fpga_axi_m1.araddr [31:0] )
	,	.fpga_axi_m1_ar_burst( Int_fpga_axi_m1.arburst )
	,	.fpga_axi_m1_ar_cache( Int_fpga_axi_m1.arcache )
	,	.fpga_axi_m1_ar_id( Int_fpga_axi_m1.arid [3:0] )
	,	.fpga_axi_m1_ar_len( Int_fpga_axi_m1.arlen [3:0] )
	,	.fpga_axi_m1_ar_lock( Int_fpga_axi_m1.arlock [0] )
	,	.fpga_axi_m1_ar_prot( Int_fpga_axi_m1.arprot )
	,	.fpga_axi_m1_ar_ready( u_a1df )
	,	.fpga_axi_m1_ar_size( Int_fpga_axi_m1.arsize [2:0] )
	,	.fpga_axi_m1_ar_valid( Int_fpga_axi_m1.arvalid )
	,	.fpga_axi_m1_aw_addr( Int_fpga_axi_m1.awaddr [31:0] )
	,	.fpga_axi_m1_aw_burst( Int_fpga_axi_m1.awburst )
	,	.fpga_axi_m1_aw_cache( Int_fpga_axi_m1.awcache )
	,	.fpga_axi_m1_aw_id( Int_fpga_axi_m1.awid [3:0] )
	,	.fpga_axi_m1_aw_len( Int_fpga_axi_m1.awlen [3:0] )
	,	.fpga_axi_m1_aw_lock( Int_fpga_axi_m1.awlock [0] )
	,	.fpga_axi_m1_aw_prot( Int_fpga_axi_m1.awprot )
	,	.fpga_axi_m1_aw_ready( u_6762 )
	,	.fpga_axi_m1_aw_size( Int_fpga_axi_m1.awsize [2:0] )
	,	.fpga_axi_m1_aw_valid( Int_fpga_axi_m1.awvalid )
	,	.fpga_axi_m1_b_id( u_9e5a )
	,	.fpga_axi_m1_b_ready( Int_fpga_axi_m1.bready )
	,	.fpga_axi_m1_b_resp( u_e121 )
	,	.fpga_axi_m1_b_valid( u_f808 )
	,	.fpga_axi_m1_r_data( u_7d7b )
	,	.fpga_axi_m1_r_id( u_aa6a )
	,	.fpga_axi_m1_r_last( u_6ccf )
	,	.fpga_axi_m1_r_ready( Int_fpga_axi_m1.rready )
	,	.fpga_axi_m1_r_resp( u_4c11 )
	,	.fpga_axi_m1_r_valid( u_f2d8 )
	,	.fpga_axi_m1_w_data( Int_fpga_axi_m1.wdata [31:0] )
	,	.fpga_axi_m1_w_last( Int_fpga_axi_m1.wlast )
	,	.fpga_axi_m1_w_ready( u_fad2 )
	,	.fpga_axi_m1_w_strb( Int_fpga_axi_m1.wstrb [3:0] )
	,	.fpga_axi_m1_w_valid( Int_fpga_axi_m1.wvalid )
	,	.fpga_clk_m0( u_52d9 )
	,	.fpga_clk_m1( u_cbc0 )
	,	.fpga_clk_s0( u_847f )
	,	.fpga_rstm0_n( u_a826 )
	,	.fpga_rstm1_n( u_77d7 )
	,	.fpga_rsts0_n( u_85c0 )
	,	.gbe_apb_s0_paddr( u_7ed8 )
	,	.gbe_apb_s0_penable( Int_gbe_apb_s0.penable )
	,	.gbe_apb_s0_prdata( Int_gbe_apb_s0.prdata )
	,	.gbe_apb_s0_pready( Int_gbe_apb_s0.pready )
	,	.gbe_apb_s0_psel( Int_gbe_apb_s0.psel )
	,	.gbe_apb_s0_pslverr( Int_gbe_apb_s0.pslverr )
	,	.gbe_apb_s0_pwbe( u_9516 )
	,	.gbe_apb_s0_pwdata( u_799f )
	,	.gbe_apb_s0_pwrite( Int_gbe_apb_s0.pwrite )
	,	.gbe_axi_m0_ar_addr( Int_gbe_axi_m0.araddr [31:0] )
	,	.gbe_axi_m0_ar_burst( Int_gbe_axi_m0.arburst )
	,	.gbe_axi_m0_ar_cache( Int_gbe_axi_m0.arcache )
	,	.gbe_axi_m0_ar_id( Int_gbe_axi_m0.arid [3:0] )
	,	.gbe_axi_m0_ar_len( Int_gbe_axi_m0.arlen [3:0] )
	,	.gbe_axi_m0_ar_lock( Int_gbe_axi_m0.arlock [0] )
	,	.gbe_axi_m0_ar_prot( Int_gbe_axi_m0.arprot )
	,	.gbe_axi_m0_ar_ready( u_5bdd )
	,	.gbe_axi_m0_ar_size( Int_gbe_axi_m0.arsize [2:0] )
	,	.gbe_axi_m0_ar_valid( Int_gbe_axi_m0.arvalid )
	,	.gbe_axi_m0_aw_addr( Int_gbe_axi_m0.awaddr [31:0] )
	,	.gbe_axi_m0_aw_burst( Int_gbe_axi_m0.awburst )
	,	.gbe_axi_m0_aw_cache( Int_gbe_axi_m0.awcache )
	,	.gbe_axi_m0_aw_id( Int_gbe_axi_m0.awid [3:0] )
	,	.gbe_axi_m0_aw_len( Int_gbe_axi_m0.awlen [3:0] )
	,	.gbe_axi_m0_aw_lock( Int_gbe_axi_m0.awlock [0] )
	,	.gbe_axi_m0_aw_prot( Int_gbe_axi_m0.awprot )
	,	.gbe_axi_m0_aw_ready( u_f450 )
	,	.gbe_axi_m0_aw_size( Int_gbe_axi_m0.awsize [2:0] )
	,	.gbe_axi_m0_aw_valid( Int_gbe_axi_m0.awvalid )
	,	.gbe_axi_m0_b_id( u_d1ec )
	,	.gbe_axi_m0_b_ready( Int_gbe_axi_m0.bready )
	,	.gbe_axi_m0_b_resp( u_1b5b )
	,	.gbe_axi_m0_b_valid( u_73c2 )
	,	.gbe_axi_m0_r_data( u_63cd )
	,	.gbe_axi_m0_r_id( u_ccbc )
	,	.gbe_axi_m0_r_last( u_5b11 )
	,	.gbe_axi_m0_r_ready( Int_gbe_axi_m0.rready )
	,	.gbe_axi_m0_r_resp( u_41ab )
	,	.gbe_axi_m0_r_valid( u_90f2 )
	,	.gbe_axi_m0_w_data( Int_gbe_axi_m0.wdata [31:0] )
	,	.gbe_axi_m0_w_last( Int_gbe_axi_m0.wlast )
	,	.gbe_axi_m0_w_ready( u_9218 )
	,	.gbe_axi_m0_w_strb( Int_gbe_axi_m0.wstrb [3:0] )
	,	.gbe_axi_m0_w_valid( Int_gbe_axi_m0.wvalid )
	,	.pufcc_axi_m0_ar_addr( Int_pufcc_axi_m0.araddr [31:0] )
	,	.pufcc_axi_m0_ar_burst( Int_pufcc_axi_m0.arburst )
	,	.pufcc_axi_m0_ar_cache( Int_pufcc_axi_m0.arcache )
	,	.pufcc_axi_m0_ar_id( Int_pufcc_axi_m0.arid [3:0] )
	,	.pufcc_axi_m0_ar_len( Int_pufcc_axi_m0.arlen [3:0] )
	,	.pufcc_axi_m0_ar_lock( Int_pufcc_axi_m0.arlock [0] )
	,	.pufcc_axi_m0_ar_prot( Int_pufcc_axi_m0.arprot )
	,	.pufcc_axi_m0_ar_ready( u_664 )
	,	.pufcc_axi_m0_ar_size( Int_pufcc_axi_m0.arsize [2:0] )
	,	.pufcc_axi_m0_ar_valid( Int_pufcc_axi_m0.arvalid )
	,	.pufcc_axi_m0_aw_addr( Int_pufcc_axi_m0.awaddr [31:0] )
	,	.pufcc_axi_m0_aw_burst( Int_pufcc_axi_m0.awburst )
	,	.pufcc_axi_m0_aw_cache( Int_pufcc_axi_m0.awcache )
	,	.pufcc_axi_m0_aw_id( Int_pufcc_axi_m0.awid [3:0] )
	,	.pufcc_axi_m0_aw_len( Int_pufcc_axi_m0.awlen [3:0] )
	,	.pufcc_axi_m0_aw_lock( Int_pufcc_axi_m0.awlock [0] )
	,	.pufcc_axi_m0_aw_prot( Int_pufcc_axi_m0.awprot )
	,	.pufcc_axi_m0_aw_ready( u_1a01 )
	,	.pufcc_axi_m0_aw_size( Int_pufcc_axi_m0.awsize [2:0] )
	,	.pufcc_axi_m0_aw_valid( Int_pufcc_axi_m0.awvalid )
	,	.pufcc_axi_m0_b_id( u_f1cd )
	,	.pufcc_axi_m0_b_ready( Int_pufcc_axi_m0.bready )
	,	.pufcc_axi_m0_b_resp( u_2216 )
	,	.pufcc_axi_m0_b_valid( u_3579 )
	,	.pufcc_axi_m0_r_data( u_94c8 )
	,	.pufcc_axi_m0_r_id( u_21d )
	,	.pufcc_axi_m0_r_last( u_6000 )
	,	.pufcc_axi_m0_r_ready( Int_pufcc_axi_m0.rready )
	,	.pufcc_axi_m0_r_resp( u_15c6 )
	,	.pufcc_axi_m0_r_valid( u_44c9 )
	,	.pufcc_axi_m0_w_data( Int_pufcc_axi_m0.wdata [31:0] )
	,	.pufcc_axi_m0_w_last( Int_pufcc_axi_m0.wlast )
	,	.pufcc_axi_m0_w_ready( u_9ba7 )
	,	.pufcc_axi_m0_w_strb( Int_pufcc_axi_m0.wstrb [3:0] )
	,	.pufcc_axi_m0_w_valid( Int_pufcc_axi_m0.wvalid )
	,	.rst_133_n( u_a2bd )
	,	.rst_266_n( u_41c4 )
	,	.rst_533_n( u_7d61 )
	,	.sram_axi_s0_ar_addr( u_1af0 )
	,	.sram_axi_s0_ar_burst( u_ef7e )
	,	.sram_axi_s0_ar_cache( u_d516 )
	,	.sram_axi_s0_ar_id( u_9794 )
	,	.sram_axi_s0_ar_len( u_16db )
	,	.sram_axi_s0_ar_lock( u_7c40 )
	,	.sram_axi_s0_ar_prot( u_f5ca )
	,	.sram_axi_s0_ar_ready( Int_sram_axi_s0.arready )
	,	.sram_axi_s0_ar_size( u_c26a )
	,	.sram_axi_s0_ar_valid( u_16ce )
	,	.sram_axi_s0_aw_addr( u_e277 )
	,	.sram_axi_s0_aw_burst( u_1f23 )
	,	.sram_axi_s0_aw_cache( u_563 )
	,	.sram_axi_s0_aw_id( u_b293 )
	,	.sram_axi_s0_aw_len( u_5706 )
	,	.sram_axi_s0_aw_lock( u_d63 )
	,	.sram_axi_s0_aw_prot( u_aaa1 )
	,	.sram_axi_s0_aw_ready( Int_sram_axi_s0.awready )
	,	.sram_axi_s0_aw_size( u_5d9d )
	,	.sram_axi_s0_aw_valid( u_212f )
	,	.sram_axi_s0_b_id( Int_sram_axi_s0.bid [3:0] )
	,	.sram_axi_s0_b_ready( u_cd55 )
	,	.sram_axi_s0_b_resp( Int_sram_axi_s0.bresp )
	,	.sram_axi_s0_b_valid( Int_sram_axi_s0.bvalid )
	,	.sram_axi_s0_r_data( Int_sram_axi_s0.rdata [31:0] )
	,	.sram_axi_s0_r_id( Int_sram_axi_s0.rid [3:0] )
	,	.sram_axi_s0_r_last( Int_sram_axi_s0.rlast )
	,	.sram_axi_s0_r_ready( u_e45 )
	,	.sram_axi_s0_r_resp( Int_sram_axi_s0.rresp )
	,	.sram_axi_s0_r_valid( Int_sram_axi_s0.rvalid )
	,	.sram_axi_s0_w_data( u_1c0a )
	,	.sram_axi_s0_w_last( u_fc1e )
	,	.sram_axi_s0_w_ready( Int_sram_axi_s0.wready )
	,	.sram_axi_s0_w_strb( u_b55f )
	,	.sram_axi_s0_w_valid( u_a63f )
	,	.sram_axi_s1_ar_addr( u_ffed )
	,	.sram_axi_s1_ar_burst( u_fc09 )
	,	.sram_axi_s1_ar_cache( u_b0ed )
	,	.sram_axi_s1_ar_id( u_f4e9 )
	,	.sram_axi_s1_ar_len( u_c598 )
	,	.sram_axi_s1_ar_lock( u_dd91 )
	,	.sram_axi_s1_ar_prot( u_7303 )
	,	.sram_axi_s1_ar_ready( Int_sram_axi_s1.arready )
	,	.sram_axi_s1_ar_size( u_610f )
	,	.sram_axi_s1_ar_valid( u_a335 )
	,	.sram_axi_s1_aw_addr( u_d4fe )
	,	.sram_axi_s1_aw_burst( u_2d64 )
	,	.sram_axi_s1_aw_cache( u_d500 )
	,	.sram_axi_s1_aw_id( u_b9d2 )
	,	.sram_axi_s1_aw_len( u_a1d5 )
	,	.sram_axi_s1_aw_lock( u_adae )
	,	.sram_axi_s1_aw_prot( u_c2f4 )
	,	.sram_axi_s1_aw_ready( Int_sram_axi_s1.awready )
	,	.sram_axi_s1_aw_size( u_520c )
	,	.sram_axi_s1_aw_valid( u_f214 )
	,	.sram_axi_s1_b_id( Int_sram_axi_s1.bid [3:0] )
	,	.sram_axi_s1_b_ready( u_80b0 )
	,	.sram_axi_s1_b_resp( Int_sram_axi_s1.bresp )
	,	.sram_axi_s1_b_valid( Int_sram_axi_s1.bvalid )
	,	.sram_axi_s1_r_data( Int_sram_axi_s1.rdata [31:0] )
	,	.sram_axi_s1_r_id( Int_sram_axi_s1.rid [3:0] )
	,	.sram_axi_s1_r_last( Int_sram_axi_s1.rlast )
	,	.sram_axi_s1_r_ready( u_e400 )
	,	.sram_axi_s1_r_resp( Int_sram_axi_s1.rresp )
	,	.sram_axi_s1_r_valid( Int_sram_axi_s1.rvalid )
	,	.sram_axi_s1_w_data( u_9f71 )
	,	.sram_axi_s1_w_last( u_5de9 )
	,	.sram_axi_s1_w_ready( Int_sram_axi_s1.wready )
	,	.sram_axi_s1_w_strb( u_f5c4 )
	,	.sram_axi_s1_w_valid( u_89ae )
	,	.sram_axi_s2_ar_addr( u_6ef6 )
	,	.sram_axi_s2_ar_burst( u_570c )
	,	.sram_axi_s2_ar_cache( u_e1b8 )
	,	.sram_axi_s2_ar_id( u_38da )
	,	.sram_axi_s2_ar_len( u_605d )
	,	.sram_axi_s2_ar_lock( u_8f76 )
	,	.sram_axi_s2_ar_prot( u_5a3c )
	,	.sram_axi_s2_ar_ready( Int_sram_axi_s2.arready )
	,	.sram_axi_s2_ar_size( u_fdc4 )
	,	.sram_axi_s2_ar_valid( u_907c )
	,	.sram_axi_s2_aw_addr( u_e45_4130 )
	,	.sram_axi_s2_aw_burst( u_dab1 )
	,	.sram_axi_s2_aw_cache( u_f7e5 )
	,	.sram_axi_s2_aw_id( u_9c91 )
	,	.sram_axi_s2_aw_len( u_b40 )
	,	.sram_axi_s2_aw_lock( u_54f9 )
	,	.sram_axi_s2_aw_prot( u_d8b )
	,	.sram_axi_s2_aw_ready( Int_sram_axi_s2.awready )
	,	.sram_axi_s2_aw_size( u_be47 )
	,	.sram_axi_s2_aw_valid( u_5e5d )
	,	.sram_axi_s2_b_id( Int_sram_axi_s2.bid [3:0] )
	,	.sram_axi_s2_b_ready( u_7943 )
	,	.sram_axi_s2_b_resp( Int_sram_axi_s2.bresp )
	,	.sram_axi_s2_b_valid( Int_sram_axi_s2.bvalid )
	,	.sram_axi_s2_r_data( Int_sram_axi_s2.rdata [31:0] )
	,	.sram_axi_s2_r_id( Int_sram_axi_s2.rid [3:0] )
	,	.sram_axi_s2_r_last( Int_sram_axi_s2.rlast )
	,	.sram_axi_s2_r_ready( u_9853 )
	,	.sram_axi_s2_r_resp( Int_sram_axi_s2.rresp )
	,	.sram_axi_s2_r_valid( Int_sram_axi_s2.rvalid )
	,	.sram_axi_s2_w_data( u_27c8 )
	,	.sram_axi_s2_w_last( u_f630 )
	,	.sram_axi_s2_w_ready( Int_sram_axi_s2.wready )
	,	.sram_axi_s2_w_strb( u_5601 )
	,	.sram_axi_s2_w_valid( u_11d5 )
	,	.sram_axi_s3_ar_addr( u_8883 )
	,	.sram_axi_s3_ar_burst( u_24bf )
	,	.sram_axi_s3_ar_cache( u_96d7 )
	,	.sram_axi_s3_ar_id( u_9807 )
	,	.sram_axi_s3_ar_len( u_6c92 )
	,	.sram_axi_s3_ar_lock( u_5ddf )
	,	.sram_axi_s3_ar_prot( u_344d )
	,	.sram_axi_s3_ar_ready( Int_sram_axi_s3.arready )
	,	.sram_axi_s3_ar_size( u_3431 )
	,	.sram_axi_s3_ar_valid( u_9fd3 )
	,	.sram_axi_s3_aw_addr( u_21e4 )
	,	.sram_axi_s3_aw_burst( u_1042 )
	,	.sram_axi_s3_aw_cache( u_8332 )
	,	.sram_axi_s3_aw_id( u_c640 )
	,	.sram_axi_s3_aw_len( u_263f )
	,	.sram_axi_s3_aw_lock( u_68c4 )
	,	.sram_axi_s3_aw_prot( u_96ee )
	,	.sram_axi_s3_aw_ready( Int_sram_axi_s3.awready )
	,	.sram_axi_s3_aw_size( u_7fa6 )
	,	.sram_axi_s3_aw_valid( u_2c5a )
	,	.sram_axi_s3_b_id( Int_sram_axi_s3.bid [3:0] )
	,	.sram_axi_s3_b_ready( u_190e )
	,	.sram_axi_s3_b_resp( Int_sram_axi_s3.bresp )
	,	.sram_axi_s3_b_valid( Int_sram_axi_s3.bvalid )
	,	.sram_axi_s3_r_data( Int_sram_axi_s3.rdata [31:0] )
	,	.sram_axi_s3_r_id( Int_sram_axi_s3.rid [3:0] )
	,	.sram_axi_s3_r_last( Int_sram_axi_s3.rlast )
	,	.sram_axi_s3_r_ready( u_a2fe )
	,	.sram_axi_s3_r_resp( Int_sram_axi_s3.rresp )
	,	.sram_axi_s3_r_valid( Int_sram_axi_s3.rvalid )
	,	.sram_axi_s3_w_data( u_e207 )
	,	.sram_axi_s3_w_last( u_149b )
	,	.sram_axi_s3_w_ready( Int_sram_axi_s3.wready )
	,	.sram_axi_s3_w_strb( u_a56e )
	,	.sram_axi_s3_w_valid( u_7134 )
	,	.tm( Int_tm.Signal [0] )
	,	.usb_axi_m0_ar_addr( Int_usb_axi_m0.araddr [31:0] )
	,	.usb_axi_m0_ar_burst( Int_usb_axi_m0.arburst )
	,	.usb_axi_m0_ar_cache( Int_usb_axi_m0.arcache )
	,	.usb_axi_m0_ar_id( Int_usb_axi_m0.arid [3:0] )
	,	.usb_axi_m0_ar_len( Int_usb_axi_m0.arlen [3:0] )
	,	.usb_axi_m0_ar_lock( Int_usb_axi_m0.arlock [0] )
	,	.usb_axi_m0_ar_prot( Int_usb_axi_m0.arprot )
	,	.usb_axi_m0_ar_ready( u_3dfb )
	,	.usb_axi_m0_ar_size( Int_usb_axi_m0.arsize [2:0] )
	,	.usb_axi_m0_ar_valid( Int_usb_axi_m0.arvalid )
	,	.usb_axi_m0_aw_addr( Int_usb_axi_m0.awaddr [31:0] )
	,	.usb_axi_m0_aw_burst( Int_usb_axi_m0.awburst )
	,	.usb_axi_m0_aw_cache( Int_usb_axi_m0.awcache )
	,	.usb_axi_m0_aw_id( Int_usb_axi_m0.awid [3:0] )
	,	.usb_axi_m0_aw_len( Int_usb_axi_m0.awlen [3:0] )
	,	.usb_axi_m0_aw_lock( Int_usb_axi_m0.awlock [0] )
	,	.usb_axi_m0_aw_prot( Int_usb_axi_m0.awprot )
	,	.usb_axi_m0_aw_ready( u_ccbe )
	,	.usb_axi_m0_aw_size( Int_usb_axi_m0.awsize [2:0] )
	,	.usb_axi_m0_aw_valid( Int_usb_axi_m0.awvalid )
	,	.usb_axi_m0_b_id( u_e6a6 )
	,	.usb_axi_m0_b_ready( Int_usb_axi_m0.bready )
	,	.usb_axi_m0_b_resp( u_56d1 )
	,	.usb_axi_m0_b_valid( u_f6d4 )
	,	.usb_axi_m0_r_data( u_86fb )
	,	.usb_axi_m0_r_id( u_596 )
	,	.usb_axi_m0_r_last( u_e673 )
	,	.usb_axi_m0_r_ready( Int_usb_axi_m0.rready )
	,	.usb_axi_m0_r_resp( u_1bc1 )
	,	.usb_axi_m0_r_valid( u_dc24 )
	,	.usb_axi_m0_w_data( Int_usb_axi_m0.wdata [31:0] )
	,	.usb_axi_m0_w_last( Int_usb_axi_m0.wlast )
	,	.usb_axi_m0_w_ready( u_7ad2 )
	,	.usb_axi_m0_w_strb( Int_usb_axi_m0.wstrb [3:0] )
	,	.usb_axi_m0_w_valid( Int_usb_axi_m0.wvalid )
	);
	assign Int_ACPU_WDT.pwdata = u_a410;
	initial begin
		`include "anvu_uvm_macros.sv"
		import uvm_pkg::*;
		import anvu_commons_pkg::*;
		import anvu_tests_pkg::*;
		import user_tests_pkg::*;
		`ANVU_SET_CONFIG( virtual anvu_clk_if , IntRegime_interconnect_synch_regime , "interconnect_synch_regime_benchIf");
		`ANVU_SET_CONFIG( virtual anvu_clk_if , IntRegime_fpga_regime_s0 , "fpga_regime_s0_benchIf");
		`ANVU_SET_CONFIG( virtual anvu_clk_if , IntRegime_fpga_regime_m1 , "fpga_regime_m1_benchIf");
		`ANVU_SET_CONFIG( virtual anvu_clk_if , IntRegime_fpga_regime_m0 , "fpga_regime_m0_benchIf");
		`ANVU_SET_CONFIG( virtual anvu_rstn_if , Int_fpga_rstm0_n , "fpga_rstm0_n_benchIf");
		`ANVU_SET_CONFIG( virtual anvu_rstn_if , Int_fpga_rstm1_n , "fpga_rstm1_n_benchIf");
		`ANVU_SET_CONFIG( virtual anvu_rstn_if , Int_fpga_rsts0_n , "fpga_rsts0_n_benchIf");
		`ANVU_SET_CONFIG( virtual anvu_rstn_if , Int_rst_133_n , "rst_133_n_benchIf");
		`ANVU_SET_CONFIG( virtual anvu_rstn_if , Int_rst_266_n , "rst_266_n_benchIf");
		`ANVU_SET_CONFIG( virtual anvu_rstn_if , Int_rst_533_n , "rst_533_n_benchIf");
		`ANVU_SET_CONFIG( virtual anvu_signal_if , Int_tm , "tm_benchIf");
		`ANVU_SET_CONFIG( virtual svt_apb_slave_if , Int_ACPU_WDT , "ACPU_WDT_benchIf");
		`ANVU_SET_CONFIG( virtual svt_apb_slave_if , Int_BCPU_WDT , "BCPU_WDT_benchIf");
		`ANVU_SET_CONFIG( virtual svt_apb_slave_if , Int_DMA_apb_s0 , "DMA_apb_s0_benchIf");
		`ANVU_SET_CONFIG( virtual svt_apb_slave_if , Int_FCB_apb_s0 , "FCB_apb_s0_benchIf");
		`ANVU_SET_CONFIG( virtual svt_apb_slave_if , Int_GPIO_apb_s0 , "GPIO_apb_s0_benchIf");
		`ANVU_SET_CONFIG( virtual svt_apb_slave_if , Int_GPT_apb_s0 , "GPT_apb_s0_benchIf");
		`ANVU_SET_CONFIG( virtual svt_apb_slave_if , Int_I2C_apb_s0 , "I2C_apb_s0_benchIf");
		`ANVU_SET_CONFIG( virtual svt_apb_slave_if , Int_MBOX_apb_s0 , "MBOX_apb_s0_benchIf");
		`ANVU_SET_CONFIG( virtual svt_apb_slave_if , Int_PUFCC_apb_s0 , "PUFCC_apb_s0_benchIf");
		`ANVU_SET_CONFIG( virtual svt_apb_slave_if , Int_SCU , "SCU_benchIf");
		`ANVU_SET_CONFIG( virtual svt_ahb_if , Int_SPI_ahb_s0 , "SPI_ahb_s0_benchIf");
		`ANVU_SET_CONFIG( virtual svt_ahb_if , Int_SPI_mem_ahb , "SPI_mem_ahb_benchIf");
		`ANVU_SET_CONFIG( virtual svt_apb_slave_if , Int_UART_apb_s0 , "UART_apb_s0_benchIf");
		`ANVU_SET_CONFIG( virtual svt_apb_slave_if , Int_UART_apb_s1 , "UART_apb_s1_benchIf");
		Int_USB_axi_s0.common_clock_mode = 0;
		`ANVU_SET_CONFIG( virtual svt_axi_slave_if  , Int_USB_axi_s0 , "USB_axi_s0_benchIf");
		Int_acpu_axi_m0.common_clock_mode = 0;
		`ANVU_SET_CONFIG( virtual svt_axi_master_if , Int_acpu_axi_m0 , "acpu_axi_m0_benchIf");
		Int_arm_axi_m0.common_clock_mode = 0;
		`ANVU_SET_CONFIG( virtual svt_axi_master_if , Int_arm_axi_m0 , "arm_axi_m0_benchIf");
		`ANVU_SET_CONFIG( virtual svt_ahb_if , Int_bcpu_ahb_m0 , "bcpu_ahb_m0_benchIf");
		`ANVU_SET_CONFIG( virtual anvu_atb_if , Int_cpu_observer , "cpu_observer_benchIf");
		Int_ddr_axi_s0.common_clock_mode = 0;
		`ANVU_SET_CONFIG( virtual svt_axi_slave_if  , Int_ddr_axi_s0 , "ddr_axi_s0_benchIf");
		Int_ddr_axi_s1.common_clock_mode = 0;
		`ANVU_SET_CONFIG( virtual svt_axi_slave_if  , Int_ddr_axi_s1 , "ddr_axi_s1_benchIf");
		Int_ddr_axi_s2.common_clock_mode = 0;
		`ANVU_SET_CONFIG( virtual svt_axi_slave_if  , Int_ddr_axi_s2 , "ddr_axi_s2_benchIf");
		Int_ddr_axi_s3.common_clock_mode = 0;
		`ANVU_SET_CONFIG( virtual svt_axi_slave_if  , Int_ddr_axi_s3 , "ddr_axi_s3_benchIf");
		Int_ddr_axil_s0.common_clock_mode = 0;
		`ANVU_SET_CONFIG( virtual svt_axi_slave_if  , Int_ddr_axil_s0 , "ddr_axil_s0_benchIf");
		Int_dma_axi_m0.common_clock_mode = 0;
		`ANVU_SET_CONFIG( virtual svt_axi_master_if , Int_dma_axi_m0 , "dma_axi_m0_benchIf");
		Int_dma_axi_m1.common_clock_mode = 0;
		`ANVU_SET_CONFIG( virtual svt_axi_master_if , Int_dma_axi_m1 , "dma_axi_m1_benchIf");
		`ANVU_SET_CONFIG( virtual svt_ahb_if , Int_fpga_ahb_s0 , "fpga_ahb_s0_benchIf");
		Int_fpga_axi_m0.common_clock_mode = 0;
		`ANVU_SET_CONFIG( virtual svt_axi_master_if , Int_fpga_axi_m0 , "fpga_axi_m0_benchIf");
		Int_fpga_axi_m1.common_clock_mode = 0;
		`ANVU_SET_CONFIG( virtual svt_axi_master_if , Int_fpga_axi_m1 , "fpga_axi_m1_benchIf");
		`ANVU_SET_CONFIG( virtual svt_apb_slave_if , Int_gbe_apb_s0 , "gbe_apb_s0_benchIf");
		Int_gbe_axi_m0.common_clock_mode = 0;
		`ANVU_SET_CONFIG( virtual svt_axi_master_if , Int_gbe_axi_m0 , "gbe_axi_m0_benchIf");
		Int_pufcc_axi_m0.common_clock_mode = 0;
		`ANVU_SET_CONFIG( virtual svt_axi_master_if , Int_pufcc_axi_m0 , "pufcc_axi_m0_benchIf");
		Int_sram_axi_s0.common_clock_mode = 0;
		`ANVU_SET_CONFIG( virtual svt_axi_slave_if  , Int_sram_axi_s0 , "sram_axi_s0_benchIf");
		Int_sram_axi_s1.common_clock_mode = 0;
		`ANVU_SET_CONFIG( virtual svt_axi_slave_if  , Int_sram_axi_s1 , "sram_axi_s1_benchIf");
		Int_sram_axi_s2.common_clock_mode = 0;
		`ANVU_SET_CONFIG( virtual svt_axi_slave_if  , Int_sram_axi_s2 , "sram_axi_s2_benchIf");
		Int_sram_axi_s3.common_clock_mode = 0;
		`ANVU_SET_CONFIG( virtual svt_axi_slave_if  , Int_sram_axi_s3 , "sram_axi_s3_benchIf");
		Int_usb_axi_m0.common_clock_mode = 0;
		`ANVU_SET_CONFIG( virtual svt_axi_master_if , Int_usb_axi_m0 , "usb_axi_m0_benchIf");
		run_test();
	end
endmodule


