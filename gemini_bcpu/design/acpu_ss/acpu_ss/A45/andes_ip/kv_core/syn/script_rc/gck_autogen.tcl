set lib_gck_list [filter -regexp clock_gating_integrated_cell {posedge_precontrol} [find / -libcell *]]

#cell leakage power
set min_lp 999999 

set failure 0
set gck_autogen_clk_in "unknow_gck_autogen_clk_in"
set gck_autogen_out_pin "unknow_gck_autogen_out_pin"

if {[llength $lib_gck_list]} {
	foreach lg $lib_gck_list {
		set current_lp [get_attribute cell_leakage_power $lg]
		if {$current_lp < $min_lp} {
			set min_lp $current_lp
			set lib_gck $lg
			puts "lib_gck is updated to $lib_gck"
		}	
	}
	set_attribute avoid false $lib_gck 
	set lib_gck_pin_list [find $lib_gck -libpin *]
	if {[llength $lib_gck_pin_list] == 0} {
		set failure 1
		puts "gck_autogen failed because of no library gck cell pin list"
	}
} else {
	set failure 1
	puts "gck_autogen failed because of no library gck cell"
}

if {!$failure} {
	foreach lgp $lib_gck_pin_list {
	if {[get_attribute clock_gate_clock_pin $lgp] == true} {
			regexp {.*\/(\S+)$} $lgp match clock_pin
		} elseif {[get_attribute clock_gate_enable_pin $lgp] == true} {
			regexp {.*\/(\S+)$} $lgp match enable_pin
		} elseif {[get_attribute clock_gate_out_pin $lgp] == true} {
			regexp {.*\/(\S+)$} $lgp match out_pin
		} elseif {[get_attribute clock_gate_test_pin $lgp] == true} {
			regexp {.*\/(\S+)$} $lgp match test_pin
		}
	}
	
	if {[file exists ./script_rc/gck_autogen.v]} {
		file delete -force "./script_rc/gck_autogen.v"
	}
	    		
	set outfile [open "./script_rc/gck_autogen.v" w]
	
	puts $outfile "//This file is generated by synthesis script automatically"
	puts $outfile "\n"
	puts $outfile "module gck (clk_out, clk_en, clk_in, test_en);"
    	puts $outfile "parameter BYPASS_CLKEN_IN_FPGA = 0;"
	puts $outfile "\n"
	
	if {[info exists clock_pin]} {
		puts $outfile "input clk_in;        // clock input"
	} else {
		set failure 1
		puts "gck_autogen failed because of no clock input pin"
	}
	if {[info exists enable_pin]} {
		puts $outfile "input clk_en;        // clock enable"
	} else {
		set failure 1
		puts "gck_autogen failed because of no clock enable pin"
	}
	if {[info exists test_pin]} {
		puts $outfile "input test_en;       // test_enable"
	} else {
		set failure 1
		puts "gck_autogen failed because of no test enable pin"
	}
	if {[info exists out_pin]} {
		puts $outfile "output clk_out;      // clock output"
	} else {
		set failure 1
		puts "gck_autogen failed because of no clock output pin"
	}
	
	if {!$failure} {
		if [regexp {.*\/(\S+)$} $lib_gck match lib_gck_name] {
			puts $outfile "\n"
			puts $outfile "$lib_gck_name gck (.$out_pin\(clk_out), .$enable_pin\(clk_en), .$test_pin\(test_en), .$clock_pin\(clk_in));"
			puts $outfile "\n"
			puts $outfile "endmodule"

			set gck_autogen_clk_in 	$clock_pin
			set gck_autogen_out_pin	$out_pin
		} else {
			set failure 1
			puts "gck_autogen failed because of no library gck name"
		}
	}
	close $outfile
}

if {$failure} {
	puts "gck_autogen failed. delete the file"
	file delete -force "./script_rc/gck_autogen.v"
}
