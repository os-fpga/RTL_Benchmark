set lib_gck_list [get_object_name [filter [get_lib_cells $tech_lib/*] -regexp {@clock_gating_integrated_cell=~.*posedge_precontrol}]]

#cell leakage power
set min_lp 999999

set failure 0
set gck_autogen_clk_in "unknow_gck_autogen_clk_in"
set gck_autogen_out_pin "unknow_gck_autogen_out_pin"

if {[llength $lib_gck_list] != 0} {
	foreach lg $lib_gck_list {
	    set current_lp [get_attribute $lg cell_leakage_power]
	    if {$current_lp < $min_lp} {
		set min_lp $current_lp
		set lib_gck $lg
		puts "lib_gck is updated to $lib_gck"
	    }
	}	
	set_attribute $lib_gck dont_use false
	set lib_gck_pin_list [get_object_name [find lib_pin $lib_gck/*]]
	if {[llength $lib_gck_pin_list] == 0} {
		set failure 1
		puts "gck_autogen failed because of no library gck cell pin list"
	
	}
} else {
    set failure 1
    puts "gck_autogen failed because of no library gck cell"
}

if {!$failure} {
    foreach lgp $lib_gck_pin_list {
        if {[get_attribute $lgp clock_gate_clock_pin -quiet] == true} {
	    regexp {.*\/(\S+)$} $lgp match clock_pin
        } elseif {[get_attribute $lgp clock_gate_enable_pin -quiet] == true} {
            regexp {.*\/(\S+)$} $lgp match enable_pin
        } elseif {[get_attribute $lgp clock_gate_out_pin -quiet] == true} {
            regexp {.*\/(\S+)$} $lgp match out_pin
        } elseif {[get_attribute $lgp clock_gate_test_pin -quiet] == true} {
	    regexp {.*\/(\S+)$} $lgp match test_pin
        }
    }
    
    if {[file exists ./script/gck_autogen.v]} {
        file delete -force "./script/gck_autogen.v"
    }
    set outfile [open "./script/gck_autogen.v" w]
    
    puts $outfile "//This file is generated by synthesis script automatically"
    puts $outfile "\n"
    puts $outfile "module gck (clk_out, clk_en, clk_in, test_en);"
    puts $outfile "parameter BYPASS_CLKEN_IN_FPGA = 0;"
    puts $outfile "\n"
    
    if {[info exists clock_pin]} {
        puts $outfile "input clk_in;        // clock input"
    } else {
        set failure 1
        puts "gck_autogen failed because of no clock input pin"
    }
    if {[info exists enable_pin]} {
        puts $outfile "input clk_en;        // clock enable"
    } else {
        set failure 1
        puts "gck_autogen failed because of no clock enable pin"
    }
    if {[info exists test_pin]} {
        puts $outfile "input test_en;       // test_enable"
    } else {
        set failure 1
        puts "gck_autogen failed because of no test enable pin"
    }
    if {[info exists out_pin]} {
        puts $outfile "output clk_out;      // clock output"
    } else {
        set failure 1
        puts "gck_autogen failed because of no clock output pin"
    }
    
    if {!$failure} {
        if [regexp {.*\/(\S+)$} $lib_gck match lib_gck_name] {
	    puts $outfile "\n"
	    puts $outfile "$lib_gck_name gck (.$out_pin\(clk_out), .$enable_pin\(clk_en), .$test_pin\(test_en), .$clock_pin\(clk_in));"
	    puts $outfile "\n"
	    puts $outfile "endmodule"

	    set gck_autogen_clk_in 	$clock_pin
	    set gck_autogen_out_pin	$out_pin
        } else {
            set failure 1
	    puts "gck_autogen failed because of no library gck name"
        }
    }
    close $outfile
}

if {$failure} {
    puts "gck_autogen failed. delete the file"
    file delete -force "./script/gck_autogen.v"
}
	
