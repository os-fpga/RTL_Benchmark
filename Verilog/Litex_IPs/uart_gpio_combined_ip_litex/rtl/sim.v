// -----------------------------------------------------------------------------
// Auto-Generated by:        __   _ __      _  __
//                          / /  (_) /____ | |/_/
//                         / /__/ / __/ -_)>  <
//                        /____/_/\__/\__/_/|_|
//                     Build your hardware, easily!
//                   https://github.com/enjoy-digital/litex
//
// Filename   : sim.v
// Device     : SIM
// LiteX sha1 : 6f6a10db
// Date       : 2022-02-03 15:11:03
//------------------------------------------------------------------------------


//------------------------------------------------------------------------------
// Module
//------------------------------------------------------------------------------

module sim (
	output wire sim_trace,
	output wire serial_source_valid,
	input  wire serial_source_ready,
	output wire [7:0] serial_source_data,
	input  wire serial_sink_valid,
	output wire serial_sink_ready,
	input  wire [7:0] serial_sink_data,
	input  wire sys_clk,
	output reg  [31:0] gpio_oe,
	output reg  [31:0] gpio_o,
	input  wire [31:0] gpio_i
);


//------------------------------------------------------------------------------
// Signals
//------------------------------------------------------------------------------

reg  main_soc_rst = 1'd0;
wire main_cpu_rst;
reg  [1:0] main_reset_storage = 2'd0;
reg  main_reset_re = 1'd0;
reg  [31:0] main_scratch_storage = 32'd305419896;
reg  main_scratch_re = 1'd0;
wire [31:0] main_bus_errors_status;
wire main_bus_errors_we;
reg  main_bus_errors_re = 1'd0;
wire main_bus_error;
reg  [31:0] main_bus_errors = 32'd0;
wire main_picorv32_trap;
wire main_picorv32_reset;
reg  [31:0] main_picorv32_interrupt = 32'd0;
wire [29:0] main_picorv32_idbus_adr;
wire [31:0] main_picorv32_idbus_dat_w;
wire [31:0] main_picorv32_idbus_dat_r;
wire [3:0] main_picorv32_idbus_sel;
wire main_picorv32_idbus_cyc;
wire main_picorv32_idbus_stb;
wire main_picorv32_idbus_ack;
wire main_picorv32_idbus_we;
wire [2:0] main_picorv32_idbus_cti;
wire [1:0] main_picorv32_idbus_bte;
wire main_picorv32_idbus_err;
wire main_picorv32_mem_valid;
wire main_picorv32_mem_instr;
wire main_picorv32_mem_ready;
wire [31:0] main_picorv32_mem_addr;
wire [31:0] main_picorv32_mem_wdata;
wire [3:0] main_picorv32_mem_wstrb;
wire [31:0] main_picorv32_mem_rdata;
wire main_picorv320;
wire main_picorv321;
wire [31:0] main_picorv322;
wire [31:0] main_picorv323;
wire [3:0] main_picorv324;
wire main_picorv325;
wire [31:0] main_picorv326;
wire [31:0] main_picorv327;
wire [31:0] main_picorv328;
wire [31:0] main_picorv329;
wire [29:0] main_simsoc_ram_bus_adr;
wire [31:0] main_simsoc_ram_bus_dat_w;
wire [31:0] main_simsoc_ram_bus_dat_r;
wire [3:0] main_simsoc_ram_bus_sel;
wire main_simsoc_ram_bus_cyc;
wire main_simsoc_ram_bus_stb;
reg  main_simsoc_ram_bus_ack = 1'd0;
wire main_simsoc_ram_bus_we;
wire [2:0] main_simsoc_ram_bus_cti;
wire [1:0] main_simsoc_ram_bus_bte;
reg  main_simsoc_ram_bus_err = 1'd0;
wire [12:0] main_simsoc_adr;
wire [31:0] main_simsoc_dat_r;
wire [29:0] main_ram_bus_ram_bus_adr;
wire [31:0] main_ram_bus_ram_bus_dat_w;
wire [31:0] main_ram_bus_ram_bus_dat_r;
wire [3:0] main_ram_bus_ram_bus_sel;
wire main_ram_bus_ram_bus_cyc;
wire main_ram_bus_ram_bus_stb;
reg  main_ram_bus_ram_bus_ack = 1'd0;
wire main_ram_bus_ram_bus_we;
wire [2:0] main_ram_bus_ram_bus_cti;
wire [1:0] main_ram_bus_ram_bus_bte;
reg  main_ram_bus_ram_bus_err = 1'd0;
wire [9:0] main_ram_adr;
wire [31:0] main_ram_dat_r;
reg  [3:0] main_ram_we = 4'd0;
wire [31:0] main_ram_dat_w;
wire main_sink_valid;
wire main_sink_ready;
wire main_sink_first;
wire main_sink_last;
wire [7:0] main_sink_payload_data;
wire main_source_valid;
wire main_source_ready;
reg  main_source_first = 1'd0;
reg  main_source_last = 1'd0;
wire [7:0] main_source_payload_data;
reg  main_uart_rxtx_re = 1'd0;
wire [7:0] main_uart_rxtx_r;
reg  main_uart_rxtx_we = 1'd0;
wire [7:0] main_uart_rxtx_w;
wire main_uart_txfull_status;
wire main_uart_txfull_we;
reg  main_uart_txfull_re = 1'd0;
wire main_uart_rxempty_status;
wire main_uart_rxempty_we;
reg  main_uart_rxempty_re = 1'd0;
wire main_uart_irq;
wire main_uart_tx_status;
reg  main_uart_tx_pending = 1'd0;
wire main_uart_tx_trigger;
reg  main_uart_tx_clear = 1'd0;
reg  main_uart_tx_trigger_d = 1'd0;
wire main_uart_rx_status;
reg  main_uart_rx_pending = 1'd0;
wire main_uart_rx_trigger;
reg  main_uart_rx_clear = 1'd0;
reg  main_uart_rx_trigger_d = 1'd0;
wire main_uart_tx0;
wire main_uart_rx0;
reg  [1:0] main_uart_status_status = 2'd0;
wire main_uart_status_we;
reg  main_uart_status_re = 1'd0;
wire main_uart_tx1;
wire main_uart_rx1;
reg  [1:0] main_uart_pending_status = 2'd0;
wire main_uart_pending_we;
reg  main_uart_pending_re = 1'd0;
reg  [1:0] main_uart_pending_r = 2'd0;
wire main_uart_tx2;
wire main_uart_rx2;
reg  [1:0] main_uart_enable_storage = 2'd0;
reg  main_uart_enable_re = 1'd0;
wire main_uart_txempty_status;
wire main_uart_txempty_we;
reg  main_uart_txempty_re = 1'd0;
wire main_uart_rxfull_status;
wire main_uart_rxfull_we;
reg  main_uart_rxfull_re = 1'd0;
wire main_uart_uart_sink_valid;
wire main_uart_uart_sink_ready;
wire main_uart_uart_sink_first;
wire main_uart_uart_sink_last;
wire [7:0] main_uart_uart_sink_payload_data;
wire main_uart_uart_source_valid;
wire main_uart_uart_source_ready;
wire main_uart_uart_source_first;
wire main_uart_uart_source_last;
wire [7:0] main_uart_uart_source_payload_data;
wire main_uart_tx_fifo_sink_valid;
wire main_uart_tx_fifo_sink_ready;
reg  main_uart_tx_fifo_sink_first = 1'd0;
reg  main_uart_tx_fifo_sink_last = 1'd0;
wire [7:0] main_uart_tx_fifo_sink_payload_data;
wire main_uart_tx_fifo_source_valid;
wire main_uart_tx_fifo_source_ready;
wire main_uart_tx_fifo_source_first;
wire main_uart_tx_fifo_source_last;
wire [7:0] main_uart_tx_fifo_source_payload_data;
wire main_uart_tx_fifo_re;
reg  main_uart_tx_fifo_readable = 1'd0;
wire main_uart_tx_fifo_syncfifo_we;
wire main_uart_tx_fifo_syncfifo_writable;
wire main_uart_tx_fifo_syncfifo_re;
wire main_uart_tx_fifo_syncfifo_readable;
wire [9:0] main_uart_tx_fifo_syncfifo_din;
wire [9:0] main_uart_tx_fifo_syncfifo_dout;
reg  [4:0] main_uart_tx_fifo_level0 = 5'd0;
reg  main_uart_tx_fifo_replace = 1'd0;
reg  [3:0] main_uart_tx_fifo_produce = 4'd0;
reg  [3:0] main_uart_tx_fifo_consume = 4'd0;
reg  [3:0] main_uart_tx_fifo_wrport_adr = 4'd0;
wire [9:0] main_uart_tx_fifo_wrport_dat_r;
wire main_uart_tx_fifo_wrport_we;
wire [9:0] main_uart_tx_fifo_wrport_dat_w;
wire main_uart_tx_fifo_do_read;
wire [3:0] main_uart_tx_fifo_rdport_adr;
wire [9:0] main_uart_tx_fifo_rdport_dat_r;
wire main_uart_tx_fifo_rdport_re;
wire [4:0] main_uart_tx_fifo_level1;
wire [7:0] main_uart_tx_fifo_fifo_in_payload_data;
wire main_uart_tx_fifo_fifo_in_first;
wire main_uart_tx_fifo_fifo_in_last;
wire [7:0] main_uart_tx_fifo_fifo_out_payload_data;
wire main_uart_tx_fifo_fifo_out_first;
wire main_uart_tx_fifo_fifo_out_last;
wire main_uart_rx_fifo_sink_valid;
wire main_uart_rx_fifo_sink_ready;
wire main_uart_rx_fifo_sink_first;
wire main_uart_rx_fifo_sink_last;
wire [7:0] main_uart_rx_fifo_sink_payload_data;
wire main_uart_rx_fifo_source_valid;
wire main_uart_rx_fifo_source_ready;
wire main_uart_rx_fifo_source_first;
wire main_uart_rx_fifo_source_last;
wire [7:0] main_uart_rx_fifo_source_payload_data;
wire main_uart_rx_fifo_re;
reg  main_uart_rx_fifo_readable = 1'd0;
wire main_uart_rx_fifo_syncfifo_we;
wire main_uart_rx_fifo_syncfifo_writable;
wire main_uart_rx_fifo_syncfifo_re;
wire main_uart_rx_fifo_syncfifo_readable;
wire [9:0] main_uart_rx_fifo_syncfifo_din;
wire [9:0] main_uart_rx_fifo_syncfifo_dout;
reg  [4:0] main_uart_rx_fifo_level0 = 5'd0;
reg  main_uart_rx_fifo_replace = 1'd0;
reg  [3:0] main_uart_rx_fifo_produce = 4'd0;
reg  [3:0] main_uart_rx_fifo_consume = 4'd0;
reg  [3:0] main_uart_rx_fifo_wrport_adr = 4'd0;
wire [9:0] main_uart_rx_fifo_wrport_dat_r;
wire main_uart_rx_fifo_wrport_we;
wire [9:0] main_uart_rx_fifo_wrport_dat_w;
wire main_uart_rx_fifo_do_read;
wire [3:0] main_uart_rx_fifo_rdport_adr;
wire [9:0] main_uart_rx_fifo_rdport_dat_r;
wire main_uart_rx_fifo_rdport_re;
wire [4:0] main_uart_rx_fifo_level1;
wire [7:0] main_uart_rx_fifo_fifo_in_payload_data;
wire main_uart_rx_fifo_fifo_in_first;
wire main_uart_rx_fifo_fifo_in_last;
wire [7:0] main_uart_rx_fifo_fifo_out_payload_data;
wire main_uart_rx_fifo_fifo_out_first;
wire main_uart_rx_fifo_fifo_out_last;
reg  [31:0] main_timer_load_storage = 32'd0;
reg  main_timer_load_re = 1'd0;
reg  [31:0] main_timer_reload_storage = 32'd0;
reg  main_timer_reload_re = 1'd0;
reg  main_timer_en_storage = 1'd0;
reg  main_timer_en_re = 1'd0;
reg  main_timer_update_value_storage = 1'd0;
reg  main_timer_update_value_re = 1'd0;
reg  [31:0] main_timer_value_status = 32'd0;
wire main_timer_value_we;
reg  main_timer_value_re = 1'd0;
wire main_timer_irq;
wire main_timer_zero_status;
reg  main_timer_zero_pending = 1'd0;
wire main_timer_zero_trigger;
reg  main_timer_zero_clear = 1'd0;
reg  main_timer_zero_trigger_d = 1'd0;
wire main_timer_zero0;
wire main_timer_status_status;
wire main_timer_status_we;
reg  main_timer_status_re = 1'd0;
wire main_timer_zero1;
wire main_timer_pending_status;
wire main_timer_pending_we;
reg  main_timer_pending_re = 1'd0;
reg  main_timer_pending_r = 1'd0;
wire main_timer_zero2;
reg  main_timer_enable_storage = 1'd0;
reg  main_timer_enable_re = 1'd0;
reg  [31:0] main_timer_value = 32'd0;
wire sys_clk_1;
wire sys_rst;
wire por_clk;
reg  main_int_rst = 1'd1;
reg  [31:0] main_oe_storage = 32'd0;
reg  main_oe_re = 1'd0;
reg  [31:0] main_in_status = 32'd0;
wire main_in_we;
reg  main_in_re = 1'd0;
reg  [31:0] main_out_storage = 32'd0;
reg  main_out_re = 1'd0;
reg  [31:0] main_mode_storage = 32'd0;
reg  main_mode_re = 1'd0;
reg  [31:0] main_edge_storage = 32'd0;
reg  main_edge_re = 1'd0;
wire main_irq;
reg  main_in_pads_n_d0 = 1'd0;
wire main_eventsourceprocess0_status;
reg  main_eventsourceprocess0_pending = 1'd0;
reg  main_eventsourceprocess0_trigger = 1'd0;
reg  main_eventsourceprocess0_clear = 1'd0;
reg  main_eventsourceprocess0_trigger_d = 1'd0;
reg  main_in_pads_n_d1 = 1'd0;
wire main_eventsourceprocess1_status;
reg  main_eventsourceprocess1_pending = 1'd0;
reg  main_eventsourceprocess1_trigger = 1'd0;
reg  main_eventsourceprocess1_clear = 1'd0;
reg  main_eventsourceprocess1_trigger_d = 1'd0;
reg  main_in_pads_n_d2 = 1'd0;
wire main_eventsourceprocess2_status;
reg  main_eventsourceprocess2_pending = 1'd0;
reg  main_eventsourceprocess2_trigger = 1'd0;
reg  main_eventsourceprocess2_clear = 1'd0;
reg  main_eventsourceprocess2_trigger_d = 1'd0;
reg  main_in_pads_n_d3 = 1'd0;
wire main_eventsourceprocess3_status;
reg  main_eventsourceprocess3_pending = 1'd0;
reg  main_eventsourceprocess3_trigger = 1'd0;
reg  main_eventsourceprocess3_clear = 1'd0;
reg  main_eventsourceprocess3_trigger_d = 1'd0;
reg  main_in_pads_n_d4 = 1'd0;
wire main_eventsourceprocess4_status;
reg  main_eventsourceprocess4_pending = 1'd0;
reg  main_eventsourceprocess4_trigger = 1'd0;
reg  main_eventsourceprocess4_clear = 1'd0;
reg  main_eventsourceprocess4_trigger_d = 1'd0;
reg  main_in_pads_n_d5 = 1'd0;
wire main_eventsourceprocess5_status;
reg  main_eventsourceprocess5_pending = 1'd0;
reg  main_eventsourceprocess5_trigger = 1'd0;
reg  main_eventsourceprocess5_clear = 1'd0;
reg  main_eventsourceprocess5_trigger_d = 1'd0;
reg  main_in_pads_n_d6 = 1'd0;
wire main_eventsourceprocess6_status;
reg  main_eventsourceprocess6_pending = 1'd0;
reg  main_eventsourceprocess6_trigger = 1'd0;
reg  main_eventsourceprocess6_clear = 1'd0;
reg  main_eventsourceprocess6_trigger_d = 1'd0;
reg  main_in_pads_n_d7 = 1'd0;
wire main_eventsourceprocess7_status;
reg  main_eventsourceprocess7_pending = 1'd0;
reg  main_eventsourceprocess7_trigger = 1'd0;
reg  main_eventsourceprocess7_clear = 1'd0;
reg  main_eventsourceprocess7_trigger_d = 1'd0;
reg  main_in_pads_n_d8 = 1'd0;
wire main_eventsourceprocess8_status;
reg  main_eventsourceprocess8_pending = 1'd0;
reg  main_eventsourceprocess8_trigger = 1'd0;
reg  main_eventsourceprocess8_clear = 1'd0;
reg  main_eventsourceprocess8_trigger_d = 1'd0;
reg  main_in_pads_n_d9 = 1'd0;
wire main_eventsourceprocess9_status;
reg  main_eventsourceprocess9_pending = 1'd0;
reg  main_eventsourceprocess9_trigger = 1'd0;
reg  main_eventsourceprocess9_clear = 1'd0;
reg  main_eventsourceprocess9_trigger_d = 1'd0;
reg  main_in_pads_n_d10 = 1'd0;
wire main_eventsourceprocess10_status;
reg  main_eventsourceprocess10_pending = 1'd0;
reg  main_eventsourceprocess10_trigger = 1'd0;
reg  main_eventsourceprocess10_clear = 1'd0;
reg  main_eventsourceprocess10_trigger_d = 1'd0;
reg  main_in_pads_n_d11 = 1'd0;
wire main_eventsourceprocess11_status;
reg  main_eventsourceprocess11_pending = 1'd0;
reg  main_eventsourceprocess11_trigger = 1'd0;
reg  main_eventsourceprocess11_clear = 1'd0;
reg  main_eventsourceprocess11_trigger_d = 1'd0;
reg  main_in_pads_n_d12 = 1'd0;
wire main_eventsourceprocess12_status;
reg  main_eventsourceprocess12_pending = 1'd0;
reg  main_eventsourceprocess12_trigger = 1'd0;
reg  main_eventsourceprocess12_clear = 1'd0;
reg  main_eventsourceprocess12_trigger_d = 1'd0;
reg  main_in_pads_n_d13 = 1'd0;
wire main_eventsourceprocess13_status;
reg  main_eventsourceprocess13_pending = 1'd0;
reg  main_eventsourceprocess13_trigger = 1'd0;
reg  main_eventsourceprocess13_clear = 1'd0;
reg  main_eventsourceprocess13_trigger_d = 1'd0;
reg  main_in_pads_n_d14 = 1'd0;
wire main_eventsourceprocess14_status;
reg  main_eventsourceprocess14_pending = 1'd0;
reg  main_eventsourceprocess14_trigger = 1'd0;
reg  main_eventsourceprocess14_clear = 1'd0;
reg  main_eventsourceprocess14_trigger_d = 1'd0;
reg  main_in_pads_n_d15 = 1'd0;
wire main_eventsourceprocess15_status;
reg  main_eventsourceprocess15_pending = 1'd0;
reg  main_eventsourceprocess15_trigger = 1'd0;
reg  main_eventsourceprocess15_clear = 1'd0;
reg  main_eventsourceprocess15_trigger_d = 1'd0;
reg  main_in_pads_n_d16 = 1'd0;
wire main_eventsourceprocess16_status;
reg  main_eventsourceprocess16_pending = 1'd0;
reg  main_eventsourceprocess16_trigger = 1'd0;
reg  main_eventsourceprocess16_clear = 1'd0;
reg  main_eventsourceprocess16_trigger_d = 1'd0;
reg  main_in_pads_n_d17 = 1'd0;
wire main_eventsourceprocess17_status;
reg  main_eventsourceprocess17_pending = 1'd0;
reg  main_eventsourceprocess17_trigger = 1'd0;
reg  main_eventsourceprocess17_clear = 1'd0;
reg  main_eventsourceprocess17_trigger_d = 1'd0;
reg  main_in_pads_n_d18 = 1'd0;
wire main_eventsourceprocess18_status;
reg  main_eventsourceprocess18_pending = 1'd0;
reg  main_eventsourceprocess18_trigger = 1'd0;
reg  main_eventsourceprocess18_clear = 1'd0;
reg  main_eventsourceprocess18_trigger_d = 1'd0;
reg  main_in_pads_n_d19 = 1'd0;
wire main_eventsourceprocess19_status;
reg  main_eventsourceprocess19_pending = 1'd0;
reg  main_eventsourceprocess19_trigger = 1'd0;
reg  main_eventsourceprocess19_clear = 1'd0;
reg  main_eventsourceprocess19_trigger_d = 1'd0;
reg  main_in_pads_n_d20 = 1'd0;
wire main_eventsourceprocess20_status;
reg  main_eventsourceprocess20_pending = 1'd0;
reg  main_eventsourceprocess20_trigger = 1'd0;
reg  main_eventsourceprocess20_clear = 1'd0;
reg  main_eventsourceprocess20_trigger_d = 1'd0;
reg  main_in_pads_n_d21 = 1'd0;
wire main_eventsourceprocess21_status;
reg  main_eventsourceprocess21_pending = 1'd0;
reg  main_eventsourceprocess21_trigger = 1'd0;
reg  main_eventsourceprocess21_clear = 1'd0;
reg  main_eventsourceprocess21_trigger_d = 1'd0;
reg  main_in_pads_n_d22 = 1'd0;
wire main_eventsourceprocess22_status;
reg  main_eventsourceprocess22_pending = 1'd0;
reg  main_eventsourceprocess22_trigger = 1'd0;
reg  main_eventsourceprocess22_clear = 1'd0;
reg  main_eventsourceprocess22_trigger_d = 1'd0;
reg  main_in_pads_n_d23 = 1'd0;
wire main_eventsourceprocess23_status;
reg  main_eventsourceprocess23_pending = 1'd0;
reg  main_eventsourceprocess23_trigger = 1'd0;
reg  main_eventsourceprocess23_clear = 1'd0;
reg  main_eventsourceprocess23_trigger_d = 1'd0;
reg  main_in_pads_n_d24 = 1'd0;
wire main_eventsourceprocess24_status;
reg  main_eventsourceprocess24_pending = 1'd0;
reg  main_eventsourceprocess24_trigger = 1'd0;
reg  main_eventsourceprocess24_clear = 1'd0;
reg  main_eventsourceprocess24_trigger_d = 1'd0;
reg  main_in_pads_n_d25 = 1'd0;
wire main_eventsourceprocess25_status;
reg  main_eventsourceprocess25_pending = 1'd0;
reg  main_eventsourceprocess25_trigger = 1'd0;
reg  main_eventsourceprocess25_clear = 1'd0;
reg  main_eventsourceprocess25_trigger_d = 1'd0;
reg  main_in_pads_n_d26 = 1'd0;
wire main_eventsourceprocess26_status;
reg  main_eventsourceprocess26_pending = 1'd0;
reg  main_eventsourceprocess26_trigger = 1'd0;
reg  main_eventsourceprocess26_clear = 1'd0;
reg  main_eventsourceprocess26_trigger_d = 1'd0;
reg  main_in_pads_n_d27 = 1'd0;
wire main_eventsourceprocess27_status;
reg  main_eventsourceprocess27_pending = 1'd0;
reg  main_eventsourceprocess27_trigger = 1'd0;
reg  main_eventsourceprocess27_clear = 1'd0;
reg  main_eventsourceprocess27_trigger_d = 1'd0;
reg  main_in_pads_n_d28 = 1'd0;
wire main_eventsourceprocess28_status;
reg  main_eventsourceprocess28_pending = 1'd0;
reg  main_eventsourceprocess28_trigger = 1'd0;
reg  main_eventsourceprocess28_clear = 1'd0;
reg  main_eventsourceprocess28_trigger_d = 1'd0;
reg  main_in_pads_n_d29 = 1'd0;
wire main_eventsourceprocess29_status;
reg  main_eventsourceprocess29_pending = 1'd0;
reg  main_eventsourceprocess29_trigger = 1'd0;
reg  main_eventsourceprocess29_clear = 1'd0;
reg  main_eventsourceprocess29_trigger_d = 1'd0;
reg  main_in_pads_n_d30 = 1'd0;
wire main_eventsourceprocess30_status;
reg  main_eventsourceprocess30_pending = 1'd0;
reg  main_eventsourceprocess30_trigger = 1'd0;
reg  main_eventsourceprocess30_clear = 1'd0;
reg  main_eventsourceprocess30_trigger_d = 1'd0;
reg  main_in_pads_n_d31 = 1'd0;
wire main_eventsourceprocess31_status;
reg  main_eventsourceprocess31_pending = 1'd0;
reg  main_eventsourceprocess31_trigger = 1'd0;
reg  main_eventsourceprocess31_clear = 1'd0;
reg  main_eventsourceprocess31_trigger_d = 1'd0;
wire builder_i00;
wire builder_i10;
wire builder_i20;
wire builder_i30;
wire builder_i40;
wire builder_i50;
wire builder_i60;
wire builder_i70;
wire builder_i80;
wire builder_i90;
wire builder_i100;
wire builder_i110;
wire builder_i120;
wire builder_i130;
wire builder_i140;
wire builder_i150;
wire builder_i160;
wire builder_i170;
wire builder_i180;
wire builder_i190;
wire builder_i200;
wire builder_i210;
wire builder_i220;
wire builder_i230;
wire builder_i240;
wire builder_i250;
wire builder_i260;
wire builder_i270;
wire builder_i280;
wire builder_i290;
wire builder_i300;
wire builder_i310;
reg  [31:0] builder_status_status = 32'd0;
wire builder_status_we;
reg  builder_status_re = 1'd0;
wire builder_i01;
wire builder_i11;
wire builder_i21;
wire builder_i31;
wire builder_i41;
wire builder_i51;
wire builder_i61;
wire builder_i71;
wire builder_i81;
wire builder_i91;
wire builder_i101;
wire builder_i111;
wire builder_i121;
wire builder_i131;
wire builder_i141;
wire builder_i151;
wire builder_i161;
wire builder_i171;
wire builder_i181;
wire builder_i191;
wire builder_i201;
wire builder_i211;
wire builder_i221;
wire builder_i231;
wire builder_i241;
wire builder_i251;
wire builder_i261;
wire builder_i271;
wire builder_i281;
wire builder_i291;
wire builder_i301;
wire builder_i311;
reg  [31:0] builder_pending_status = 32'd0;
wire builder_pending_we;
reg  builder_pending_re = 1'd0;
reg  [31:0] builder_pending_r = 32'd0;
wire builder_i02;
wire builder_i12;
wire builder_i22;
wire builder_i32;
wire builder_i42;
wire builder_i52;
wire builder_i62;
wire builder_i72;
wire builder_i82;
wire builder_i92;
wire builder_i102;
wire builder_i112;
wire builder_i122;
wire builder_i132;
wire builder_i142;
wire builder_i152;
wire builder_i162;
wire builder_i172;
wire builder_i182;
wire builder_i192;
wire builder_i202;
wire builder_i212;
wire builder_i222;
wire builder_i232;
wire builder_i242;
wire builder_i252;
wire builder_i262;
wire builder_i272;
wire builder_i282;
wire builder_i292;
wire builder_i302;
wire builder_i312;
reg  [31:0] builder_enable_storage = 32'd0;
reg  builder_enable_re = 1'd0;
reg  [13:0] builder_simsoc_adr = 14'd0;
reg  builder_simsoc_we = 1'd0;
reg  [31:0] builder_simsoc_dat_w = 32'd0;
wire [31:0] builder_simsoc_dat_r;
wire [29:0] builder_simsoc_wishbone_adr;
wire [31:0] builder_simsoc_wishbone_dat_w;
reg  [31:0] builder_simsoc_wishbone_dat_r = 32'd0;
wire [3:0] builder_simsoc_wishbone_sel;
wire builder_simsoc_wishbone_cyc;
wire builder_simsoc_wishbone_stb;
reg  builder_simsoc_wishbone_ack = 1'd0;
wire builder_simsoc_wishbone_we;
wire [2:0] builder_simsoc_wishbone_cti;
wire [1:0] builder_simsoc_wishbone_bte;
reg  builder_simsoc_wishbone_err = 1'd0;
wire [29:0] builder_shared_adr;
wire [31:0] builder_shared_dat_w;
reg  [31:0] builder_shared_dat_r = 32'd0;
wire [3:0] builder_shared_sel;
wire builder_shared_cyc;
wire builder_shared_stb;
reg  builder_shared_ack = 1'd0;
wire builder_shared_we;
wire [2:0] builder_shared_cti;
wire [1:0] builder_shared_bte;
wire builder_shared_err;
wire builder_request;
wire builder_grant;
reg  [2:0] builder_slave_sel = 3'd0;
reg  [2:0] builder_slave_sel_r = 3'd0;
reg  builder_error = 1'd0;
wire builder_wait;
wire builder_done;
reg  [19:0] builder_count = 20'd1000000;
wire [13:0] builder_csr_bankarray_interface0_bank_bus_adr;
wire builder_csr_bankarray_interface0_bank_bus_we;
wire [31:0] builder_csr_bankarray_interface0_bank_bus_dat_w;
reg  [31:0] builder_csr_bankarray_interface0_bank_bus_dat_r = 32'd0;
reg  builder_csr_bankarray_csrbank0_reset0_re = 1'd0;
wire [1:0] builder_csr_bankarray_csrbank0_reset0_r;
reg  builder_csr_bankarray_csrbank0_reset0_we = 1'd0;
wire [1:0] builder_csr_bankarray_csrbank0_reset0_w;
reg  builder_csr_bankarray_csrbank0_scratch0_re = 1'd0;
wire [31:0] builder_csr_bankarray_csrbank0_scratch0_r;
reg  builder_csr_bankarray_csrbank0_scratch0_we = 1'd0;
wire [31:0] builder_csr_bankarray_csrbank0_scratch0_w;
reg  builder_csr_bankarray_csrbank0_bus_errors_re = 1'd0;
wire [31:0] builder_csr_bankarray_csrbank0_bus_errors_r;
reg  builder_csr_bankarray_csrbank0_bus_errors_we = 1'd0;
wire [31:0] builder_csr_bankarray_csrbank0_bus_errors_w;
wire builder_csr_bankarray_csrbank0_sel;
wire [13:0] builder_csr_bankarray_interface1_bank_bus_adr;
wire builder_csr_bankarray_interface1_bank_bus_we;
wire [31:0] builder_csr_bankarray_interface1_bank_bus_dat_w;
reg  [31:0] builder_csr_bankarray_interface1_bank_bus_dat_r = 32'd0;
reg  builder_csr_bankarray_csrbank1_oe0_re = 1'd0;
wire [31:0] builder_csr_bankarray_csrbank1_oe0_r;
reg  builder_csr_bankarray_csrbank1_oe0_we = 1'd0;
wire [31:0] builder_csr_bankarray_csrbank1_oe0_w;
reg  builder_csr_bankarray_csrbank1_in_re = 1'd0;
wire [31:0] builder_csr_bankarray_csrbank1_in_r;
reg  builder_csr_bankarray_csrbank1_in_we = 1'd0;
wire [31:0] builder_csr_bankarray_csrbank1_in_w;
reg  builder_csr_bankarray_csrbank1_out0_re = 1'd0;
wire [31:0] builder_csr_bankarray_csrbank1_out0_r;
reg  builder_csr_bankarray_csrbank1_out0_we = 1'd0;
wire [31:0] builder_csr_bankarray_csrbank1_out0_w;
reg  builder_csr_bankarray_csrbank1_mode0_re = 1'd0;
wire [31:0] builder_csr_bankarray_csrbank1_mode0_r;
reg  builder_csr_bankarray_csrbank1_mode0_we = 1'd0;
wire [31:0] builder_csr_bankarray_csrbank1_mode0_w;
reg  builder_csr_bankarray_csrbank1_edge0_re = 1'd0;
wire [31:0] builder_csr_bankarray_csrbank1_edge0_r;
reg  builder_csr_bankarray_csrbank1_edge0_we = 1'd0;
wire [31:0] builder_csr_bankarray_csrbank1_edge0_w;
reg  builder_csr_bankarray_csrbank1_ev_status_re = 1'd0;
wire [31:0] builder_csr_bankarray_csrbank1_ev_status_r;
reg  builder_csr_bankarray_csrbank1_ev_status_we = 1'd0;
wire [31:0] builder_csr_bankarray_csrbank1_ev_status_w;
reg  builder_csr_bankarray_csrbank1_ev_pending_re = 1'd0;
wire [31:0] builder_csr_bankarray_csrbank1_ev_pending_r;
reg  builder_csr_bankarray_csrbank1_ev_pending_we = 1'd0;
wire [31:0] builder_csr_bankarray_csrbank1_ev_pending_w;
reg  builder_csr_bankarray_csrbank1_ev_enable0_re = 1'd0;
wire [31:0] builder_csr_bankarray_csrbank1_ev_enable0_r;
reg  builder_csr_bankarray_csrbank1_ev_enable0_we = 1'd0;
wire [31:0] builder_csr_bankarray_csrbank1_ev_enable0_w;
wire builder_csr_bankarray_csrbank1_sel;
wire [13:0] builder_csr_bankarray_sram_bus_adr;
wire builder_csr_bankarray_sram_bus_we;
wire [31:0] builder_csr_bankarray_sram_bus_dat_w;
reg  [31:0] builder_csr_bankarray_sram_bus_dat_r = 32'd0;
wire [5:0] builder_csr_bankarray_adr;
wire [7:0] builder_csr_bankarray_dat_r;
wire builder_csr_bankarray_sel;
reg  builder_csr_bankarray_sel_r = 1'd0;
wire [13:0] builder_csr_bankarray_interface2_bank_bus_adr;
wire builder_csr_bankarray_interface2_bank_bus_we;
wire [31:0] builder_csr_bankarray_interface2_bank_bus_dat_w;
reg  [31:0] builder_csr_bankarray_interface2_bank_bus_dat_r = 32'd0;
reg  builder_csr_bankarray_csrbank2_load0_re = 1'd0;
wire [31:0] builder_csr_bankarray_csrbank2_load0_r;
reg  builder_csr_bankarray_csrbank2_load0_we = 1'd0;
wire [31:0] builder_csr_bankarray_csrbank2_load0_w;
reg  builder_csr_bankarray_csrbank2_reload0_re = 1'd0;
wire [31:0] builder_csr_bankarray_csrbank2_reload0_r;
reg  builder_csr_bankarray_csrbank2_reload0_we = 1'd0;
wire [31:0] builder_csr_bankarray_csrbank2_reload0_w;
reg  builder_csr_bankarray_csrbank2_en0_re = 1'd0;
wire builder_csr_bankarray_csrbank2_en0_r;
reg  builder_csr_bankarray_csrbank2_en0_we = 1'd0;
wire builder_csr_bankarray_csrbank2_en0_w;
reg  builder_csr_bankarray_csrbank2_update_value0_re = 1'd0;
wire builder_csr_bankarray_csrbank2_update_value0_r;
reg  builder_csr_bankarray_csrbank2_update_value0_we = 1'd0;
wire builder_csr_bankarray_csrbank2_update_value0_w;
reg  builder_csr_bankarray_csrbank2_value_re = 1'd0;
wire [31:0] builder_csr_bankarray_csrbank2_value_r;
reg  builder_csr_bankarray_csrbank2_value_we = 1'd0;
wire [31:0] builder_csr_bankarray_csrbank2_value_w;
reg  builder_csr_bankarray_csrbank2_ev_status_re = 1'd0;
wire builder_csr_bankarray_csrbank2_ev_status_r;
reg  builder_csr_bankarray_csrbank2_ev_status_we = 1'd0;
wire builder_csr_bankarray_csrbank2_ev_status_w;
reg  builder_csr_bankarray_csrbank2_ev_pending_re = 1'd0;
wire builder_csr_bankarray_csrbank2_ev_pending_r;
reg  builder_csr_bankarray_csrbank2_ev_pending_we = 1'd0;
wire builder_csr_bankarray_csrbank2_ev_pending_w;
reg  builder_csr_bankarray_csrbank2_ev_enable0_re = 1'd0;
wire builder_csr_bankarray_csrbank2_ev_enable0_r;
reg  builder_csr_bankarray_csrbank2_ev_enable0_we = 1'd0;
wire builder_csr_bankarray_csrbank2_ev_enable0_w;
wire builder_csr_bankarray_csrbank2_sel;
wire [13:0] builder_csr_bankarray_interface3_bank_bus_adr;
wire builder_csr_bankarray_interface3_bank_bus_we;
wire [31:0] builder_csr_bankarray_interface3_bank_bus_dat_w;
reg  [31:0] builder_csr_bankarray_interface3_bank_bus_dat_r = 32'd0;
reg  builder_csr_bankarray_csrbank3_txfull_re = 1'd0;
wire builder_csr_bankarray_csrbank3_txfull_r;
reg  builder_csr_bankarray_csrbank3_txfull_we = 1'd0;
wire builder_csr_bankarray_csrbank3_txfull_w;
reg  builder_csr_bankarray_csrbank3_rxempty_re = 1'd0;
wire builder_csr_bankarray_csrbank3_rxempty_r;
reg  builder_csr_bankarray_csrbank3_rxempty_we = 1'd0;
wire builder_csr_bankarray_csrbank3_rxempty_w;
reg  builder_csr_bankarray_csrbank3_ev_status_re = 1'd0;
wire [1:0] builder_csr_bankarray_csrbank3_ev_status_r;
reg  builder_csr_bankarray_csrbank3_ev_status_we = 1'd0;
wire [1:0] builder_csr_bankarray_csrbank3_ev_status_w;
reg  builder_csr_bankarray_csrbank3_ev_pending_re = 1'd0;
wire [1:0] builder_csr_bankarray_csrbank3_ev_pending_r;
reg  builder_csr_bankarray_csrbank3_ev_pending_we = 1'd0;
wire [1:0] builder_csr_bankarray_csrbank3_ev_pending_w;
reg  builder_csr_bankarray_csrbank3_ev_enable0_re = 1'd0;
wire [1:0] builder_csr_bankarray_csrbank3_ev_enable0_r;
reg  builder_csr_bankarray_csrbank3_ev_enable0_we = 1'd0;
wire [1:0] builder_csr_bankarray_csrbank3_ev_enable0_w;
reg  builder_csr_bankarray_csrbank3_txempty_re = 1'd0;
wire builder_csr_bankarray_csrbank3_txempty_r;
reg  builder_csr_bankarray_csrbank3_txempty_we = 1'd0;
wire builder_csr_bankarray_csrbank3_txempty_w;
reg  builder_csr_bankarray_csrbank3_rxfull_re = 1'd0;
wire builder_csr_bankarray_csrbank3_rxfull_r;
reg  builder_csr_bankarray_csrbank3_rxfull_we = 1'd0;
wire builder_csr_bankarray_csrbank3_rxfull_w;
wire builder_csr_bankarray_csrbank3_sel;
wire [13:0] builder_csr_interconnect_adr;
wire builder_csr_interconnect_we;
wire [31:0] builder_csr_interconnect_dat_w;
wire [31:0] builder_csr_interconnect_dat_r;
reg  builder_state = 1'd0;
reg  builder_next_state = 1'd0;
reg  [29:0] builder_array_muxed0 = 30'd0;
reg  [31:0] builder_array_muxed1 = 32'd0;
reg  [3:0] builder_array_muxed2 = 4'd0;
reg  builder_array_muxed3 = 1'd0;
reg  builder_array_muxed4 = 1'd0;
reg  builder_array_muxed5 = 1'd0;
reg  [2:0] builder_array_muxed6 = 3'd0;
reg  [1:0] builder_array_muxed7 = 2'd0;
reg  builder_multiregimpl0_regs0 = 1'd0;
reg  builder_multiregimpl0_regs1 = 1'd0;
reg  builder_multiregimpl1_regs0 = 1'd0;
reg  builder_multiregimpl1_regs1 = 1'd0;
reg  builder_multiregimpl2_regs0 = 1'd0;
reg  builder_multiregimpl2_regs1 = 1'd0;
reg  builder_multiregimpl3_regs0 = 1'd0;
reg  builder_multiregimpl3_regs1 = 1'd0;
reg  builder_multiregimpl4_regs0 = 1'd0;
reg  builder_multiregimpl4_regs1 = 1'd0;
reg  builder_multiregimpl5_regs0 = 1'd0;
reg  builder_multiregimpl5_regs1 = 1'd0;
reg  builder_multiregimpl6_regs0 = 1'd0;
reg  builder_multiregimpl6_regs1 = 1'd0;
reg  builder_multiregimpl7_regs0 = 1'd0;
reg  builder_multiregimpl7_regs1 = 1'd0;
reg  builder_multiregimpl8_regs0 = 1'd0;
reg  builder_multiregimpl8_regs1 = 1'd0;
reg  builder_multiregimpl9_regs0 = 1'd0;
reg  builder_multiregimpl9_regs1 = 1'd0;
reg  builder_multiregimpl10_regs0 = 1'd0;
reg  builder_multiregimpl10_regs1 = 1'd0;
reg  builder_multiregimpl11_regs0 = 1'd0;
reg  builder_multiregimpl11_regs1 = 1'd0;
reg  builder_multiregimpl12_regs0 = 1'd0;
reg  builder_multiregimpl12_regs1 = 1'd0;
reg  builder_multiregimpl13_regs0 = 1'd0;
reg  builder_multiregimpl13_regs1 = 1'd0;
reg  builder_multiregimpl14_regs0 = 1'd0;
reg  builder_multiregimpl14_regs1 = 1'd0;
reg  builder_multiregimpl15_regs0 = 1'd0;
reg  builder_multiregimpl15_regs1 = 1'd0;
reg  builder_multiregimpl16_regs0 = 1'd0;
reg  builder_multiregimpl16_regs1 = 1'd0;
reg  builder_multiregimpl17_regs0 = 1'd0;
reg  builder_multiregimpl17_regs1 = 1'd0;
reg  builder_multiregimpl18_regs0 = 1'd0;
reg  builder_multiregimpl18_regs1 = 1'd0;
reg  builder_multiregimpl19_regs0 = 1'd0;
reg  builder_multiregimpl19_regs1 = 1'd0;
reg  builder_multiregimpl20_regs0 = 1'd0;
reg  builder_multiregimpl20_regs1 = 1'd0;
reg  builder_multiregimpl21_regs0 = 1'd0;
reg  builder_multiregimpl21_regs1 = 1'd0;
reg  builder_multiregimpl22_regs0 = 1'd0;
reg  builder_multiregimpl22_regs1 = 1'd0;
reg  builder_multiregimpl23_regs0 = 1'd0;
reg  builder_multiregimpl23_regs1 = 1'd0;
reg  builder_multiregimpl24_regs0 = 1'd0;
reg  builder_multiregimpl24_regs1 = 1'd0;
reg  builder_multiregimpl25_regs0 = 1'd0;
reg  builder_multiregimpl25_regs1 = 1'd0;
reg  builder_multiregimpl26_regs0 = 1'd0;
reg  builder_multiregimpl26_regs1 = 1'd0;
reg  builder_multiregimpl27_regs0 = 1'd0;
reg  builder_multiregimpl27_regs1 = 1'd0;
reg  builder_multiregimpl28_regs0 = 1'd0;
reg  builder_multiregimpl28_regs1 = 1'd0;
reg  builder_multiregimpl29_regs0 = 1'd0;
reg  builder_multiregimpl29_regs1 = 1'd0;
reg  builder_multiregimpl30_regs0 = 1'd0;
reg  builder_multiregimpl30_regs1 = 1'd0;
reg  builder_multiregimpl31_regs0 = 1'd0;
reg  builder_multiregimpl31_regs1 = 1'd0;

//------------------------------------------------------------------------------
// Combinatorial Logic
//------------------------------------------------------------------------------

assign main_picorv32_reset = (main_soc_rst | main_cpu_rst);
assign sim_trace = 1'd1;
assign main_bus_error = builder_error;
always @(*) begin
	main_picorv32_interrupt <= 32'd0;
	main_picorv32_interrupt[2] <= main_irq;
	main_picorv32_interrupt[1] <= main_timer_irq;
	main_picorv32_interrupt[0] <= main_uart_irq;
end
assign main_bus_errors_status = main_bus_errors;
assign main_picorv32_idbus_adr = main_picorv32_mem_addr[31:2];
assign main_picorv32_idbus_dat_w = main_picorv32_mem_wdata;
assign main_picorv32_idbus_we = (main_picorv32_mem_wstrb != 1'd0);
assign main_picorv32_idbus_sel = main_picorv32_mem_wstrb;
assign main_picorv32_idbus_cyc = main_picorv32_mem_valid;
assign main_picorv32_idbus_stb = main_picorv32_mem_valid;
assign main_picorv32_idbus_cti = 1'd0;
assign main_picorv32_idbus_bte = 1'd0;
assign main_picorv32_mem_ready = main_picorv32_idbus_ack;
assign main_picorv32_mem_rdata = main_picorv32_idbus_dat_r;
assign main_simsoc_adr = main_simsoc_ram_bus_adr[12:0];
assign main_simsoc_ram_bus_dat_r = main_simsoc_dat_r;
always @(*) begin
	main_ram_we <= 4'd0;
	main_ram_we[0] <= (((main_ram_bus_ram_bus_cyc & main_ram_bus_ram_bus_stb) & main_ram_bus_ram_bus_we) & main_ram_bus_ram_bus_sel[0]);
	main_ram_we[1] <= (((main_ram_bus_ram_bus_cyc & main_ram_bus_ram_bus_stb) & main_ram_bus_ram_bus_we) & main_ram_bus_ram_bus_sel[1]);
	main_ram_we[2] <= (((main_ram_bus_ram_bus_cyc & main_ram_bus_ram_bus_stb) & main_ram_bus_ram_bus_we) & main_ram_bus_ram_bus_sel[2]);
	main_ram_we[3] <= (((main_ram_bus_ram_bus_cyc & main_ram_bus_ram_bus_stb) & main_ram_bus_ram_bus_we) & main_ram_bus_ram_bus_sel[3]);
end
assign main_ram_adr = main_ram_bus_ram_bus_adr[9:0];
assign main_ram_bus_ram_bus_dat_r = main_ram_dat_r;
assign main_ram_dat_w = main_ram_bus_ram_bus_dat_w;
assign serial_source_valid = main_sink_valid;
assign serial_source_data = main_sink_payload_data;
assign main_sink_ready = serial_source_ready;
assign main_source_valid = serial_sink_valid;
assign main_source_payload_data = serial_sink_data;
assign serial_sink_ready = main_source_ready;
assign main_uart_uart_sink_valid = main_source_valid;
assign main_source_ready = main_uart_uart_sink_ready;
assign main_uart_uart_sink_first = main_source_first;
assign main_uart_uart_sink_last = main_source_last;
assign main_uart_uart_sink_payload_data = main_source_payload_data;
assign main_sink_valid = main_uart_uart_source_valid;
assign main_uart_uart_source_ready = main_sink_ready;
assign main_sink_first = main_uart_uart_source_first;
assign main_sink_last = main_uart_uart_source_last;
assign main_sink_payload_data = main_uart_uart_source_payload_data;
assign main_uart_tx_fifo_sink_valid = main_uart_rxtx_re;
assign main_uart_tx_fifo_sink_payload_data = main_uart_rxtx_r;
assign main_uart_uart_source_valid = main_uart_tx_fifo_source_valid;
assign main_uart_tx_fifo_source_ready = main_uart_uart_source_ready;
assign main_uart_uart_source_first = main_uart_tx_fifo_source_first;
assign main_uart_uart_source_last = main_uart_tx_fifo_source_last;
assign main_uart_uart_source_payload_data = main_uart_tx_fifo_source_payload_data;
assign main_uart_txfull_status = (~main_uart_tx_fifo_sink_ready);
assign main_uart_txempty_status = (~main_uart_tx_fifo_source_valid);
assign main_uart_tx_trigger = main_uart_tx_fifo_sink_ready;
assign main_uart_rx_fifo_sink_valid = main_uart_uart_sink_valid;
assign main_uart_uart_sink_ready = main_uart_rx_fifo_sink_ready;
assign main_uart_rx_fifo_sink_first = main_uart_uart_sink_first;
assign main_uart_rx_fifo_sink_last = main_uart_uart_sink_last;
assign main_uart_rx_fifo_sink_payload_data = main_uart_uart_sink_payload_data;
assign main_uart_rxtx_w = main_uart_rx_fifo_source_payload_data;
assign main_uart_rx_fifo_source_ready = (main_uart_rx_clear | (1'd0 & main_uart_rxtx_we));
assign main_uart_rxempty_status = (~main_uart_rx_fifo_source_valid);
assign main_uart_rxfull_status = (~main_uart_rx_fifo_sink_ready);
assign main_uart_rx_trigger = main_uart_rx_fifo_source_valid;
assign main_uart_tx0 = main_uart_tx_status;
assign main_uart_tx1 = main_uart_tx_pending;
always @(*) begin
	main_uart_tx_clear <= 1'd0;
	if ((main_uart_pending_re & main_uart_pending_r[0])) begin
		main_uart_tx_clear <= 1'd1;
	end
end
assign main_uart_rx0 = main_uart_rx_status;
assign main_uart_rx1 = main_uart_rx_pending;
always @(*) begin
	main_uart_rx_clear <= 1'd0;
	if ((main_uart_pending_re & main_uart_pending_r[1])) begin
		main_uart_rx_clear <= 1'd1;
	end
end
assign main_uart_irq = ((main_uart_pending_status[0] & main_uart_enable_storage[0]) | (main_uart_pending_status[1] & main_uart_enable_storage[1]));
assign main_uart_tx_status = main_uart_tx_trigger;
assign main_uart_rx_status = main_uart_rx_trigger;
assign main_uart_tx_fifo_syncfifo_din = {main_uart_tx_fifo_fifo_in_last, main_uart_tx_fifo_fifo_in_first, main_uart_tx_fifo_fifo_in_payload_data};
assign {main_uart_tx_fifo_fifo_out_last, main_uart_tx_fifo_fifo_out_first, main_uart_tx_fifo_fifo_out_payload_data} = main_uart_tx_fifo_syncfifo_dout;
assign {main_uart_tx_fifo_fifo_out_last, main_uart_tx_fifo_fifo_out_first, main_uart_tx_fifo_fifo_out_payload_data} = main_uart_tx_fifo_syncfifo_dout;
assign {main_uart_tx_fifo_fifo_out_last, main_uart_tx_fifo_fifo_out_first, main_uart_tx_fifo_fifo_out_payload_data} = main_uart_tx_fifo_syncfifo_dout;
assign main_uart_tx_fifo_sink_ready = main_uart_tx_fifo_syncfifo_writable;
assign main_uart_tx_fifo_syncfifo_we = main_uart_tx_fifo_sink_valid;
assign main_uart_tx_fifo_fifo_in_first = main_uart_tx_fifo_sink_first;
assign main_uart_tx_fifo_fifo_in_last = main_uart_tx_fifo_sink_last;
assign main_uart_tx_fifo_fifo_in_payload_data = main_uart_tx_fifo_sink_payload_data;
assign main_uart_tx_fifo_source_valid = main_uart_tx_fifo_readable;
assign main_uart_tx_fifo_source_first = main_uart_tx_fifo_fifo_out_first;
assign main_uart_tx_fifo_source_last = main_uart_tx_fifo_fifo_out_last;
assign main_uart_tx_fifo_source_payload_data = main_uart_tx_fifo_fifo_out_payload_data;
assign main_uart_tx_fifo_re = main_uart_tx_fifo_source_ready;
assign main_uart_tx_fifo_syncfifo_re = (main_uart_tx_fifo_syncfifo_readable & ((~main_uart_tx_fifo_readable) | main_uart_tx_fifo_re));
assign main_uart_tx_fifo_level1 = (main_uart_tx_fifo_level0 + main_uart_tx_fifo_readable);
always @(*) begin
	main_uart_tx_fifo_wrport_adr <= 4'd0;
	if (main_uart_tx_fifo_replace) begin
		main_uart_tx_fifo_wrport_adr <= (main_uart_tx_fifo_produce - 1'd1);
	end else begin
		main_uart_tx_fifo_wrport_adr <= main_uart_tx_fifo_produce;
	end
end
assign main_uart_tx_fifo_wrport_dat_w = main_uart_tx_fifo_syncfifo_din;
assign main_uart_tx_fifo_wrport_we = (main_uart_tx_fifo_syncfifo_we & (main_uart_tx_fifo_syncfifo_writable | main_uart_tx_fifo_replace));
assign main_uart_tx_fifo_do_read = (main_uart_tx_fifo_syncfifo_readable & main_uart_tx_fifo_syncfifo_re);
assign main_uart_tx_fifo_rdport_adr = main_uart_tx_fifo_consume;
assign main_uart_tx_fifo_syncfifo_dout = main_uart_tx_fifo_rdport_dat_r;
assign main_uart_tx_fifo_rdport_re = main_uart_tx_fifo_do_read;
assign main_uart_tx_fifo_syncfifo_writable = (main_uart_tx_fifo_level0 != 5'd16);
assign main_uart_tx_fifo_syncfifo_readable = (main_uart_tx_fifo_level0 != 1'd0);
assign main_uart_rx_fifo_syncfifo_din = {main_uart_rx_fifo_fifo_in_last, main_uart_rx_fifo_fifo_in_first, main_uart_rx_fifo_fifo_in_payload_data};
assign {main_uart_rx_fifo_fifo_out_last, main_uart_rx_fifo_fifo_out_first, main_uart_rx_fifo_fifo_out_payload_data} = main_uart_rx_fifo_syncfifo_dout;
assign {main_uart_rx_fifo_fifo_out_last, main_uart_rx_fifo_fifo_out_first, main_uart_rx_fifo_fifo_out_payload_data} = main_uart_rx_fifo_syncfifo_dout;
assign {main_uart_rx_fifo_fifo_out_last, main_uart_rx_fifo_fifo_out_first, main_uart_rx_fifo_fifo_out_payload_data} = main_uart_rx_fifo_syncfifo_dout;
assign main_uart_rx_fifo_sink_ready = main_uart_rx_fifo_syncfifo_writable;
assign main_uart_rx_fifo_syncfifo_we = main_uart_rx_fifo_sink_valid;
assign main_uart_rx_fifo_fifo_in_first = main_uart_rx_fifo_sink_first;
assign main_uart_rx_fifo_fifo_in_last = main_uart_rx_fifo_sink_last;
assign main_uart_rx_fifo_fifo_in_payload_data = main_uart_rx_fifo_sink_payload_data;
assign main_uart_rx_fifo_source_valid = main_uart_rx_fifo_readable;
assign main_uart_rx_fifo_source_first = main_uart_rx_fifo_fifo_out_first;
assign main_uart_rx_fifo_source_last = main_uart_rx_fifo_fifo_out_last;
assign main_uart_rx_fifo_source_payload_data = main_uart_rx_fifo_fifo_out_payload_data;
assign main_uart_rx_fifo_re = main_uart_rx_fifo_source_ready;
assign main_uart_rx_fifo_syncfifo_re = (main_uart_rx_fifo_syncfifo_readable & ((~main_uart_rx_fifo_readable) | main_uart_rx_fifo_re));
assign main_uart_rx_fifo_level1 = (main_uart_rx_fifo_level0 + main_uart_rx_fifo_readable);
always @(*) begin
	main_uart_rx_fifo_wrport_adr <= 4'd0;
	if (main_uart_rx_fifo_replace) begin
		main_uart_rx_fifo_wrport_adr <= (main_uart_rx_fifo_produce - 1'd1);
	end else begin
		main_uart_rx_fifo_wrport_adr <= main_uart_rx_fifo_produce;
	end
end
assign main_uart_rx_fifo_wrport_dat_w = main_uart_rx_fifo_syncfifo_din;
assign main_uart_rx_fifo_wrport_we = (main_uart_rx_fifo_syncfifo_we & (main_uart_rx_fifo_syncfifo_writable | main_uart_rx_fifo_replace));
assign main_uart_rx_fifo_do_read = (main_uart_rx_fifo_syncfifo_readable & main_uart_rx_fifo_syncfifo_re);
assign main_uart_rx_fifo_rdport_adr = main_uart_rx_fifo_consume;
assign main_uart_rx_fifo_syncfifo_dout = main_uart_rx_fifo_rdport_dat_r;
assign main_uart_rx_fifo_rdport_re = main_uart_rx_fifo_do_read;
assign main_uart_rx_fifo_syncfifo_writable = (main_uart_rx_fifo_level0 != 5'd16);
assign main_uart_rx_fifo_syncfifo_readable = (main_uart_rx_fifo_level0 != 1'd0);
assign main_timer_zero_trigger = (main_timer_value == 1'd0);
assign main_timer_zero0 = main_timer_zero_status;
assign main_timer_zero1 = main_timer_zero_pending;
always @(*) begin
	main_timer_zero_clear <= 1'd0;
	if ((main_timer_pending_re & main_timer_pending_r)) begin
		main_timer_zero_clear <= 1'd1;
	end
end
assign main_timer_irq = (main_timer_pending_status & main_timer_enable_storage);
assign main_timer_zero_status = main_timer_zero_trigger;
assign sys_clk_1 = sys_clk;
assign por_clk = sys_clk;
assign sys_rst = main_int_rst;
always @(*) begin
	gpio_oe <= 32'd0;
	gpio_oe[0] <= main_oe_storage[0];
	gpio_oe[1] <= main_oe_storage[1];
	gpio_oe[2] <= main_oe_storage[2];
	gpio_oe[3] <= main_oe_storage[3];
	gpio_oe[4] <= main_oe_storage[4];
	gpio_oe[5] <= main_oe_storage[5];
	gpio_oe[6] <= main_oe_storage[6];
	gpio_oe[7] <= main_oe_storage[7];
	gpio_oe[8] <= main_oe_storage[8];
	gpio_oe[9] <= main_oe_storage[9];
	gpio_oe[10] <= main_oe_storage[10];
	gpio_oe[11] <= main_oe_storage[11];
	gpio_oe[12] <= main_oe_storage[12];
	gpio_oe[13] <= main_oe_storage[13];
	gpio_oe[14] <= main_oe_storage[14];
	gpio_oe[15] <= main_oe_storage[15];
	gpio_oe[16] <= main_oe_storage[16];
	gpio_oe[17] <= main_oe_storage[17];
	gpio_oe[18] <= main_oe_storage[18];
	gpio_oe[19] <= main_oe_storage[19];
	gpio_oe[20] <= main_oe_storage[20];
	gpio_oe[21] <= main_oe_storage[21];
	gpio_oe[22] <= main_oe_storage[22];
	gpio_oe[23] <= main_oe_storage[23];
	gpio_oe[24] <= main_oe_storage[24];
	gpio_oe[25] <= main_oe_storage[25];
	gpio_oe[26] <= main_oe_storage[26];
	gpio_oe[27] <= main_oe_storage[27];
	gpio_oe[28] <= main_oe_storage[28];
	gpio_oe[29] <= main_oe_storage[29];
	gpio_oe[30] <= main_oe_storage[30];
	gpio_oe[31] <= main_oe_storage[31];
end
always @(*) begin
	gpio_o <= 32'd0;
	gpio_o[0] <= main_out_storage[0];
	gpio_o[1] <= main_out_storage[1];
	gpio_o[2] <= main_out_storage[2];
	gpio_o[3] <= main_out_storage[3];
	gpio_o[4] <= main_out_storage[4];
	gpio_o[5] <= main_out_storage[5];
	gpio_o[6] <= main_out_storage[6];
	gpio_o[7] <= main_out_storage[7];
	gpio_o[8] <= main_out_storage[8];
	gpio_o[9] <= main_out_storage[9];
	gpio_o[10] <= main_out_storage[10];
	gpio_o[11] <= main_out_storage[11];
	gpio_o[12] <= main_out_storage[12];
	gpio_o[13] <= main_out_storage[13];
	gpio_o[14] <= main_out_storage[14];
	gpio_o[15] <= main_out_storage[15];
	gpio_o[16] <= main_out_storage[16];
	gpio_o[17] <= main_out_storage[17];
	gpio_o[18] <= main_out_storage[18];
	gpio_o[19] <= main_out_storage[19];
	gpio_o[20] <= main_out_storage[20];
	gpio_o[21] <= main_out_storage[21];
	gpio_o[22] <= main_out_storage[22];
	gpio_o[23] <= main_out_storage[23];
	gpio_o[24] <= main_out_storage[24];
	gpio_o[25] <= main_out_storage[25];
	gpio_o[26] <= main_out_storage[26];
	gpio_o[27] <= main_out_storage[27];
	gpio_o[28] <= main_out_storage[28];
	gpio_o[29] <= main_out_storage[29];
	gpio_o[30] <= main_out_storage[30];
	gpio_o[31] <= main_out_storage[31];
end
always @(*) begin
	main_eventsourceprocess0_trigger <= 1'd0;
	if (main_mode_storage[0]) begin
		main_eventsourceprocess0_trigger <= (main_in_status[0] ^ main_in_pads_n_d0);
	end else begin
		main_eventsourceprocess0_trigger <= (main_in_status[0] ^ main_edge_storage[0]);
	end
end
always @(*) begin
	main_eventsourceprocess1_trigger <= 1'd0;
	if (main_mode_storage[1]) begin
		main_eventsourceprocess1_trigger <= (main_in_status[1] ^ main_in_pads_n_d1);
	end else begin
		main_eventsourceprocess1_trigger <= (main_in_status[1] ^ main_edge_storage[1]);
	end
end
always @(*) begin
	main_eventsourceprocess2_trigger <= 1'd0;
	if (main_mode_storage[2]) begin
		main_eventsourceprocess2_trigger <= (main_in_status[2] ^ main_in_pads_n_d2);
	end else begin
		main_eventsourceprocess2_trigger <= (main_in_status[2] ^ main_edge_storage[2]);
	end
end
always @(*) begin
	main_eventsourceprocess3_trigger <= 1'd0;
	if (main_mode_storage[3]) begin
		main_eventsourceprocess3_trigger <= (main_in_status[3] ^ main_in_pads_n_d3);
	end else begin
		main_eventsourceprocess3_trigger <= (main_in_status[3] ^ main_edge_storage[3]);
	end
end
always @(*) begin
	main_eventsourceprocess4_trigger <= 1'd0;
	if (main_mode_storage[4]) begin
		main_eventsourceprocess4_trigger <= (main_in_status[4] ^ main_in_pads_n_d4);
	end else begin
		main_eventsourceprocess4_trigger <= (main_in_status[4] ^ main_edge_storage[4]);
	end
end
always @(*) begin
	main_eventsourceprocess5_trigger <= 1'd0;
	if (main_mode_storage[5]) begin
		main_eventsourceprocess5_trigger <= (main_in_status[5] ^ main_in_pads_n_d5);
	end else begin
		main_eventsourceprocess5_trigger <= (main_in_status[5] ^ main_edge_storage[5]);
	end
end
always @(*) begin
	main_eventsourceprocess6_trigger <= 1'd0;
	if (main_mode_storage[6]) begin
		main_eventsourceprocess6_trigger <= (main_in_status[6] ^ main_in_pads_n_d6);
	end else begin
		main_eventsourceprocess6_trigger <= (main_in_status[6] ^ main_edge_storage[6]);
	end
end
always @(*) begin
	main_eventsourceprocess7_trigger <= 1'd0;
	if (main_mode_storage[7]) begin
		main_eventsourceprocess7_trigger <= (main_in_status[7] ^ main_in_pads_n_d7);
	end else begin
		main_eventsourceprocess7_trigger <= (main_in_status[7] ^ main_edge_storage[7]);
	end
end
always @(*) begin
	main_eventsourceprocess8_trigger <= 1'd0;
	if (main_mode_storage[8]) begin
		main_eventsourceprocess8_trigger <= (main_in_status[8] ^ main_in_pads_n_d8);
	end else begin
		main_eventsourceprocess8_trigger <= (main_in_status[8] ^ main_edge_storage[8]);
	end
end
always @(*) begin
	main_eventsourceprocess9_trigger <= 1'd0;
	if (main_mode_storage[9]) begin
		main_eventsourceprocess9_trigger <= (main_in_status[9] ^ main_in_pads_n_d9);
	end else begin
		main_eventsourceprocess9_trigger <= (main_in_status[9] ^ main_edge_storage[9]);
	end
end
always @(*) begin
	main_eventsourceprocess10_trigger <= 1'd0;
	if (main_mode_storage[10]) begin
		main_eventsourceprocess10_trigger <= (main_in_status[10] ^ main_in_pads_n_d10);
	end else begin
		main_eventsourceprocess10_trigger <= (main_in_status[10] ^ main_edge_storage[10]);
	end
end
always @(*) begin
	main_eventsourceprocess11_trigger <= 1'd0;
	if (main_mode_storage[11]) begin
		main_eventsourceprocess11_trigger <= (main_in_status[11] ^ main_in_pads_n_d11);
	end else begin
		main_eventsourceprocess11_trigger <= (main_in_status[11] ^ main_edge_storage[11]);
	end
end
always @(*) begin
	main_eventsourceprocess12_trigger <= 1'd0;
	if (main_mode_storage[12]) begin
		main_eventsourceprocess12_trigger <= (main_in_status[12] ^ main_in_pads_n_d12);
	end else begin
		main_eventsourceprocess12_trigger <= (main_in_status[12] ^ main_edge_storage[12]);
	end
end
always @(*) begin
	main_eventsourceprocess13_trigger <= 1'd0;
	if (main_mode_storage[13]) begin
		main_eventsourceprocess13_trigger <= (main_in_status[13] ^ main_in_pads_n_d13);
	end else begin
		main_eventsourceprocess13_trigger <= (main_in_status[13] ^ main_edge_storage[13]);
	end
end
always @(*) begin
	main_eventsourceprocess14_trigger <= 1'd0;
	if (main_mode_storage[14]) begin
		main_eventsourceprocess14_trigger <= (main_in_status[14] ^ main_in_pads_n_d14);
	end else begin
		main_eventsourceprocess14_trigger <= (main_in_status[14] ^ main_edge_storage[14]);
	end
end
always @(*) begin
	main_eventsourceprocess15_trigger <= 1'd0;
	if (main_mode_storage[15]) begin
		main_eventsourceprocess15_trigger <= (main_in_status[15] ^ main_in_pads_n_d15);
	end else begin
		main_eventsourceprocess15_trigger <= (main_in_status[15] ^ main_edge_storage[15]);
	end
end
always @(*) begin
	main_eventsourceprocess16_trigger <= 1'd0;
	if (main_mode_storage[16]) begin
		main_eventsourceprocess16_trigger <= (main_in_status[16] ^ main_in_pads_n_d16);
	end else begin
		main_eventsourceprocess16_trigger <= (main_in_status[16] ^ main_edge_storage[16]);
	end
end
always @(*) begin
	main_eventsourceprocess17_trigger <= 1'd0;
	if (main_mode_storage[17]) begin
		main_eventsourceprocess17_trigger <= (main_in_status[17] ^ main_in_pads_n_d17);
	end else begin
		main_eventsourceprocess17_trigger <= (main_in_status[17] ^ main_edge_storage[17]);
	end
end
always @(*) begin
	main_eventsourceprocess18_trigger <= 1'd0;
	if (main_mode_storage[18]) begin
		main_eventsourceprocess18_trigger <= (main_in_status[18] ^ main_in_pads_n_d18);
	end else begin
		main_eventsourceprocess18_trigger <= (main_in_status[18] ^ main_edge_storage[18]);
	end
end
always @(*) begin
	main_eventsourceprocess19_trigger <= 1'd0;
	if (main_mode_storage[19]) begin
		main_eventsourceprocess19_trigger <= (main_in_status[19] ^ main_in_pads_n_d19);
	end else begin
		main_eventsourceprocess19_trigger <= (main_in_status[19] ^ main_edge_storage[19]);
	end
end
always @(*) begin
	main_eventsourceprocess20_trigger <= 1'd0;
	if (main_mode_storage[20]) begin
		main_eventsourceprocess20_trigger <= (main_in_status[20] ^ main_in_pads_n_d20);
	end else begin
		main_eventsourceprocess20_trigger <= (main_in_status[20] ^ main_edge_storage[20]);
	end
end
always @(*) begin
	main_eventsourceprocess21_trigger <= 1'd0;
	if (main_mode_storage[21]) begin
		main_eventsourceprocess21_trigger <= (main_in_status[21] ^ main_in_pads_n_d21);
	end else begin
		main_eventsourceprocess21_trigger <= (main_in_status[21] ^ main_edge_storage[21]);
	end
end
always @(*) begin
	main_eventsourceprocess22_trigger <= 1'd0;
	if (main_mode_storage[22]) begin
		main_eventsourceprocess22_trigger <= (main_in_status[22] ^ main_in_pads_n_d22);
	end else begin
		main_eventsourceprocess22_trigger <= (main_in_status[22] ^ main_edge_storage[22]);
	end
end
always @(*) begin
	main_eventsourceprocess23_trigger <= 1'd0;
	if (main_mode_storage[23]) begin
		main_eventsourceprocess23_trigger <= (main_in_status[23] ^ main_in_pads_n_d23);
	end else begin
		main_eventsourceprocess23_trigger <= (main_in_status[23] ^ main_edge_storage[23]);
	end
end
always @(*) begin
	main_eventsourceprocess24_trigger <= 1'd0;
	if (main_mode_storage[24]) begin
		main_eventsourceprocess24_trigger <= (main_in_status[24] ^ main_in_pads_n_d24);
	end else begin
		main_eventsourceprocess24_trigger <= (main_in_status[24] ^ main_edge_storage[24]);
	end
end
always @(*) begin
	main_eventsourceprocess25_trigger <= 1'd0;
	if (main_mode_storage[25]) begin
		main_eventsourceprocess25_trigger <= (main_in_status[25] ^ main_in_pads_n_d25);
	end else begin
		main_eventsourceprocess25_trigger <= (main_in_status[25] ^ main_edge_storage[25]);
	end
end
always @(*) begin
	main_eventsourceprocess26_trigger <= 1'd0;
	if (main_mode_storage[26]) begin
		main_eventsourceprocess26_trigger <= (main_in_status[26] ^ main_in_pads_n_d26);
	end else begin
		main_eventsourceprocess26_trigger <= (main_in_status[26] ^ main_edge_storage[26]);
	end
end
always @(*) begin
	main_eventsourceprocess27_trigger <= 1'd0;
	if (main_mode_storage[27]) begin
		main_eventsourceprocess27_trigger <= (main_in_status[27] ^ main_in_pads_n_d27);
	end else begin
		main_eventsourceprocess27_trigger <= (main_in_status[27] ^ main_edge_storage[27]);
	end
end
always @(*) begin
	main_eventsourceprocess28_trigger <= 1'd0;
	if (main_mode_storage[28]) begin
		main_eventsourceprocess28_trigger <= (main_in_status[28] ^ main_in_pads_n_d28);
	end else begin
		main_eventsourceprocess28_trigger <= (main_in_status[28] ^ main_edge_storage[28]);
	end
end
always @(*) begin
	main_eventsourceprocess29_trigger <= 1'd0;
	if (main_mode_storage[29]) begin
		main_eventsourceprocess29_trigger <= (main_in_status[29] ^ main_in_pads_n_d29);
	end else begin
		main_eventsourceprocess29_trigger <= (main_in_status[29] ^ main_edge_storage[29]);
	end
end
always @(*) begin
	main_eventsourceprocess30_trigger <= 1'd0;
	if (main_mode_storage[30]) begin
		main_eventsourceprocess30_trigger <= (main_in_status[30] ^ main_in_pads_n_d30);
	end else begin
		main_eventsourceprocess30_trigger <= (main_in_status[30] ^ main_edge_storage[30]);
	end
end
always @(*) begin
	main_eventsourceprocess31_trigger <= 1'd0;
	if (main_mode_storage[31]) begin
		main_eventsourceprocess31_trigger <= (main_in_status[31] ^ main_in_pads_n_d31);
	end else begin
		main_eventsourceprocess31_trigger <= (main_in_status[31] ^ main_edge_storage[31]);
	end
end
assign builder_i00 = main_eventsourceprocess0_status;
assign builder_i01 = main_eventsourceprocess0_pending;
always @(*) begin
	main_eventsourceprocess0_clear <= 1'd0;
	if ((builder_pending_re & builder_pending_r[0])) begin
		main_eventsourceprocess0_clear <= 1'd1;
	end
end
assign builder_i10 = main_eventsourceprocess1_status;
assign builder_i11 = main_eventsourceprocess1_pending;
always @(*) begin
	main_eventsourceprocess1_clear <= 1'd0;
	if ((builder_pending_re & builder_pending_r[1])) begin
		main_eventsourceprocess1_clear <= 1'd1;
	end
end
assign builder_i20 = main_eventsourceprocess2_status;
assign builder_i21 = main_eventsourceprocess2_pending;
always @(*) begin
	main_eventsourceprocess2_clear <= 1'd0;
	if ((builder_pending_re & builder_pending_r[2])) begin
		main_eventsourceprocess2_clear <= 1'd1;
	end
end
assign builder_i30 = main_eventsourceprocess3_status;
assign builder_i31 = main_eventsourceprocess3_pending;
always @(*) begin
	main_eventsourceprocess3_clear <= 1'd0;
	if ((builder_pending_re & builder_pending_r[3])) begin
		main_eventsourceprocess3_clear <= 1'd1;
	end
end
assign builder_i40 = main_eventsourceprocess4_status;
assign builder_i41 = main_eventsourceprocess4_pending;
always @(*) begin
	main_eventsourceprocess4_clear <= 1'd0;
	if ((builder_pending_re & builder_pending_r[4])) begin
		main_eventsourceprocess4_clear <= 1'd1;
	end
end
assign builder_i50 = main_eventsourceprocess5_status;
assign builder_i51 = main_eventsourceprocess5_pending;
always @(*) begin
	main_eventsourceprocess5_clear <= 1'd0;
	if ((builder_pending_re & builder_pending_r[5])) begin
		main_eventsourceprocess5_clear <= 1'd1;
	end
end
assign builder_i60 = main_eventsourceprocess6_status;
assign builder_i61 = main_eventsourceprocess6_pending;
always @(*) begin
	main_eventsourceprocess6_clear <= 1'd0;
	if ((builder_pending_re & builder_pending_r[6])) begin
		main_eventsourceprocess6_clear <= 1'd1;
	end
end
assign builder_i70 = main_eventsourceprocess7_status;
assign builder_i71 = main_eventsourceprocess7_pending;
always @(*) begin
	main_eventsourceprocess7_clear <= 1'd0;
	if ((builder_pending_re & builder_pending_r[7])) begin
		main_eventsourceprocess7_clear <= 1'd1;
	end
end
assign builder_i80 = main_eventsourceprocess8_status;
assign builder_i81 = main_eventsourceprocess8_pending;
always @(*) begin
	main_eventsourceprocess8_clear <= 1'd0;
	if ((builder_pending_re & builder_pending_r[8])) begin
		main_eventsourceprocess8_clear <= 1'd1;
	end
end
assign builder_i90 = main_eventsourceprocess9_status;
assign builder_i91 = main_eventsourceprocess9_pending;
always @(*) begin
	main_eventsourceprocess9_clear <= 1'd0;
	if ((builder_pending_re & builder_pending_r[9])) begin
		main_eventsourceprocess9_clear <= 1'd1;
	end
end
assign builder_i100 = main_eventsourceprocess10_status;
assign builder_i101 = main_eventsourceprocess10_pending;
always @(*) begin
	main_eventsourceprocess10_clear <= 1'd0;
	if ((builder_pending_re & builder_pending_r[10])) begin
		main_eventsourceprocess10_clear <= 1'd1;
	end
end
assign builder_i110 = main_eventsourceprocess11_status;
assign builder_i111 = main_eventsourceprocess11_pending;
always @(*) begin
	main_eventsourceprocess11_clear <= 1'd0;
	if ((builder_pending_re & builder_pending_r[11])) begin
		main_eventsourceprocess11_clear <= 1'd1;
	end
end
assign builder_i120 = main_eventsourceprocess12_status;
assign builder_i121 = main_eventsourceprocess12_pending;
always @(*) begin
	main_eventsourceprocess12_clear <= 1'd0;
	if ((builder_pending_re & builder_pending_r[12])) begin
		main_eventsourceprocess12_clear <= 1'd1;
	end
end
assign builder_i130 = main_eventsourceprocess13_status;
assign builder_i131 = main_eventsourceprocess13_pending;
always @(*) begin
	main_eventsourceprocess13_clear <= 1'd0;
	if ((builder_pending_re & builder_pending_r[13])) begin
		main_eventsourceprocess13_clear <= 1'd1;
	end
end
assign builder_i140 = main_eventsourceprocess14_status;
assign builder_i141 = main_eventsourceprocess14_pending;
always @(*) begin
	main_eventsourceprocess14_clear <= 1'd0;
	if ((builder_pending_re & builder_pending_r[14])) begin
		main_eventsourceprocess14_clear <= 1'd1;
	end
end
assign builder_i150 = main_eventsourceprocess15_status;
assign builder_i151 = main_eventsourceprocess15_pending;
always @(*) begin
	main_eventsourceprocess15_clear <= 1'd0;
	if ((builder_pending_re & builder_pending_r[15])) begin
		main_eventsourceprocess15_clear <= 1'd1;
	end
end
assign builder_i160 = main_eventsourceprocess16_status;
assign builder_i161 = main_eventsourceprocess16_pending;
always @(*) begin
	main_eventsourceprocess16_clear <= 1'd0;
	if ((builder_pending_re & builder_pending_r[16])) begin
		main_eventsourceprocess16_clear <= 1'd1;
	end
end
assign builder_i170 = main_eventsourceprocess17_status;
assign builder_i171 = main_eventsourceprocess17_pending;
always @(*) begin
	main_eventsourceprocess17_clear <= 1'd0;
	if ((builder_pending_re & builder_pending_r[17])) begin
		main_eventsourceprocess17_clear <= 1'd1;
	end
end
assign builder_i180 = main_eventsourceprocess18_status;
assign builder_i181 = main_eventsourceprocess18_pending;
always @(*) begin
	main_eventsourceprocess18_clear <= 1'd0;
	if ((builder_pending_re & builder_pending_r[18])) begin
		main_eventsourceprocess18_clear <= 1'd1;
	end
end
assign builder_i190 = main_eventsourceprocess19_status;
assign builder_i191 = main_eventsourceprocess19_pending;
always @(*) begin
	main_eventsourceprocess19_clear <= 1'd0;
	if ((builder_pending_re & builder_pending_r[19])) begin
		main_eventsourceprocess19_clear <= 1'd1;
	end
end
assign builder_i200 = main_eventsourceprocess20_status;
assign builder_i201 = main_eventsourceprocess20_pending;
always @(*) begin
	main_eventsourceprocess20_clear <= 1'd0;
	if ((builder_pending_re & builder_pending_r[20])) begin
		main_eventsourceprocess20_clear <= 1'd1;
	end
end
assign builder_i210 = main_eventsourceprocess21_status;
assign builder_i211 = main_eventsourceprocess21_pending;
always @(*) begin
	main_eventsourceprocess21_clear <= 1'd0;
	if ((builder_pending_re & builder_pending_r[21])) begin
		main_eventsourceprocess21_clear <= 1'd1;
	end
end
assign builder_i220 = main_eventsourceprocess22_status;
assign builder_i221 = main_eventsourceprocess22_pending;
always @(*) begin
	main_eventsourceprocess22_clear <= 1'd0;
	if ((builder_pending_re & builder_pending_r[22])) begin
		main_eventsourceprocess22_clear <= 1'd1;
	end
end
assign builder_i230 = main_eventsourceprocess23_status;
assign builder_i231 = main_eventsourceprocess23_pending;
always @(*) begin
	main_eventsourceprocess23_clear <= 1'd0;
	if ((builder_pending_re & builder_pending_r[23])) begin
		main_eventsourceprocess23_clear <= 1'd1;
	end
end
assign builder_i240 = main_eventsourceprocess24_status;
assign builder_i241 = main_eventsourceprocess24_pending;
always @(*) begin
	main_eventsourceprocess24_clear <= 1'd0;
	if ((builder_pending_re & builder_pending_r[24])) begin
		main_eventsourceprocess24_clear <= 1'd1;
	end
end
assign builder_i250 = main_eventsourceprocess25_status;
assign builder_i251 = main_eventsourceprocess25_pending;
always @(*) begin
	main_eventsourceprocess25_clear <= 1'd0;
	if ((builder_pending_re & builder_pending_r[25])) begin
		main_eventsourceprocess25_clear <= 1'd1;
	end
end
assign builder_i260 = main_eventsourceprocess26_status;
assign builder_i261 = main_eventsourceprocess26_pending;
always @(*) begin
	main_eventsourceprocess26_clear <= 1'd0;
	if ((builder_pending_re & builder_pending_r[26])) begin
		main_eventsourceprocess26_clear <= 1'd1;
	end
end
assign builder_i270 = main_eventsourceprocess27_status;
assign builder_i271 = main_eventsourceprocess27_pending;
always @(*) begin
	main_eventsourceprocess27_clear <= 1'd0;
	if ((builder_pending_re & builder_pending_r[27])) begin
		main_eventsourceprocess27_clear <= 1'd1;
	end
end
assign builder_i280 = main_eventsourceprocess28_status;
assign builder_i281 = main_eventsourceprocess28_pending;
always @(*) begin
	main_eventsourceprocess28_clear <= 1'd0;
	if ((builder_pending_re & builder_pending_r[28])) begin
		main_eventsourceprocess28_clear <= 1'd1;
	end
end
assign builder_i290 = main_eventsourceprocess29_status;
assign builder_i291 = main_eventsourceprocess29_pending;
always @(*) begin
	main_eventsourceprocess29_clear <= 1'd0;
	if ((builder_pending_re & builder_pending_r[29])) begin
		main_eventsourceprocess29_clear <= 1'd1;
	end
end
assign builder_i300 = main_eventsourceprocess30_status;
assign builder_i301 = main_eventsourceprocess30_pending;
always @(*) begin
	main_eventsourceprocess30_clear <= 1'd0;
	if ((builder_pending_re & builder_pending_r[30])) begin
		main_eventsourceprocess30_clear <= 1'd1;
	end
end
assign builder_i310 = main_eventsourceprocess31_status;
assign builder_i311 = main_eventsourceprocess31_pending;
always @(*) begin
	main_eventsourceprocess31_clear <= 1'd0;
	if ((builder_pending_re & builder_pending_r[31])) begin
		main_eventsourceprocess31_clear <= 1'd1;
	end
end
assign main_irq = ((((((((((((((((((((((((((((((((builder_pending_status[0] & builder_enable_storage[0]) | (builder_pending_status[1] & builder_enable_storage[1])) | (builder_pending_status[2] & builder_enable_storage[2])) | (builder_pending_status[3] & builder_enable_storage[3])) | (builder_pending_status[4] & builder_enable_storage[4])) | (builder_pending_status[5] & builder_enable_storage[5])) | (builder_pending_status[6] & builder_enable_storage[6])) | (builder_pending_status[7] & builder_enable_storage[7])) | (builder_pending_status[8] & builder_enable_storage[8])) | (builder_pending_status[9] & builder_enable_storage[9])) | (builder_pending_status[10] & builder_enable_storage[10])) | (builder_pending_status[11] & builder_enable_storage[11])) | (builder_pending_status[12] & builder_enable_storage[12])) | (builder_pending_status[13] & builder_enable_storage[13])) | (builder_pending_status[14] & builder_enable_storage[14])) | (builder_pending_status[15] & builder_enable_storage[15])) | (builder_pending_status[16] & builder_enable_storage[16])) | (builder_pending_status[17] & builder_enable_storage[17])) | (builder_pending_status[18] & builder_enable_storage[18])) | (builder_pending_status[19] & builder_enable_storage[19])) | (builder_pending_status[20] & builder_enable_storage[20])) | (builder_pending_status[21] & builder_enable_storage[21])) | (builder_pending_status[22] & builder_enable_storage[22])) | (builder_pending_status[23] & builder_enable_storage[23])) | (builder_pending_status[24] & builder_enable_storage[24])) | (builder_pending_status[25] & builder_enable_storage[25])) | (builder_pending_status[26] & builder_enable_storage[26])) | (builder_pending_status[27] & builder_enable_storage[27])) | (builder_pending_status[28] & builder_enable_storage[28])) | (builder_pending_status[29] & builder_enable_storage[29])) | (builder_pending_status[30] & builder_enable_storage[30])) | (builder_pending_status[31] & builder_enable_storage[31]));
assign main_eventsourceprocess0_status = main_eventsourceprocess0_trigger;
assign main_eventsourceprocess1_status = main_eventsourceprocess1_trigger;
assign main_eventsourceprocess2_status = main_eventsourceprocess2_trigger;
assign main_eventsourceprocess3_status = main_eventsourceprocess3_trigger;
assign main_eventsourceprocess4_status = main_eventsourceprocess4_trigger;
assign main_eventsourceprocess5_status = main_eventsourceprocess5_trigger;
assign main_eventsourceprocess6_status = main_eventsourceprocess6_trigger;
assign main_eventsourceprocess7_status = main_eventsourceprocess7_trigger;
assign main_eventsourceprocess8_status = main_eventsourceprocess8_trigger;
assign main_eventsourceprocess9_status = main_eventsourceprocess9_trigger;
assign main_eventsourceprocess10_status = main_eventsourceprocess10_trigger;
assign main_eventsourceprocess11_status = main_eventsourceprocess11_trigger;
assign main_eventsourceprocess12_status = main_eventsourceprocess12_trigger;
assign main_eventsourceprocess13_status = main_eventsourceprocess13_trigger;
assign main_eventsourceprocess14_status = main_eventsourceprocess14_trigger;
assign main_eventsourceprocess15_status = main_eventsourceprocess15_trigger;
assign main_eventsourceprocess16_status = main_eventsourceprocess16_trigger;
assign main_eventsourceprocess17_status = main_eventsourceprocess17_trigger;
assign main_eventsourceprocess18_status = main_eventsourceprocess18_trigger;
assign main_eventsourceprocess19_status = main_eventsourceprocess19_trigger;
assign main_eventsourceprocess20_status = main_eventsourceprocess20_trigger;
assign main_eventsourceprocess21_status = main_eventsourceprocess21_trigger;
assign main_eventsourceprocess22_status = main_eventsourceprocess22_trigger;
assign main_eventsourceprocess23_status = main_eventsourceprocess23_trigger;
assign main_eventsourceprocess24_status = main_eventsourceprocess24_trigger;
assign main_eventsourceprocess25_status = main_eventsourceprocess25_trigger;
assign main_eventsourceprocess26_status = main_eventsourceprocess26_trigger;
assign main_eventsourceprocess27_status = main_eventsourceprocess27_trigger;
assign main_eventsourceprocess28_status = main_eventsourceprocess28_trigger;
assign main_eventsourceprocess29_status = main_eventsourceprocess29_trigger;
assign main_eventsourceprocess30_status = main_eventsourceprocess30_trigger;
assign main_eventsourceprocess31_status = main_eventsourceprocess31_trigger;
always @(*) begin
	builder_next_state <= 1'd0;
	builder_next_state <= builder_state;
	case (builder_state)
		1'd1: begin
			builder_next_state <= 1'd0;
		end
		default: begin
			if ((builder_simsoc_wishbone_cyc & builder_simsoc_wishbone_stb)) begin
				builder_next_state <= 1'd1;
			end
		end
	endcase
end
always @(*) begin
	builder_simsoc_wishbone_dat_r <= 32'd0;
	case (builder_state)
		1'd1: begin
			builder_simsoc_wishbone_dat_r <= builder_simsoc_dat_r;
		end
		default: begin
		end
	endcase
end
always @(*) begin
	builder_simsoc_wishbone_ack <= 1'd0;
	case (builder_state)
		1'd1: begin
			builder_simsoc_wishbone_ack <= 1'd1;
		end
		default: begin
		end
	endcase
end
always @(*) begin
	builder_simsoc_adr <= 14'd0;
	case (builder_state)
		1'd1: begin
		end
		default: begin
			if ((builder_simsoc_wishbone_cyc & builder_simsoc_wishbone_stb)) begin
				builder_simsoc_adr <= builder_simsoc_wishbone_adr;
			end
		end
	endcase
end
always @(*) begin
	builder_simsoc_we <= 1'd0;
	case (builder_state)
		1'd1: begin
		end
		default: begin
			if ((builder_simsoc_wishbone_cyc & builder_simsoc_wishbone_stb)) begin
				builder_simsoc_we <= (builder_simsoc_wishbone_we & (builder_simsoc_wishbone_sel != 1'd0));
			end
		end
	endcase
end
always @(*) begin
	builder_simsoc_dat_w <= 32'd0;
	case (builder_state)
		1'd1: begin
		end
		default: begin
			builder_simsoc_dat_w <= builder_simsoc_wishbone_dat_w;
		end
	endcase
end
assign builder_shared_adr = builder_array_muxed0;
assign builder_shared_dat_w = builder_array_muxed1;
assign builder_shared_sel = builder_array_muxed2;
assign builder_shared_cyc = builder_array_muxed3;
assign builder_shared_stb = builder_array_muxed4;
assign builder_shared_we = builder_array_muxed5;
assign builder_shared_cti = builder_array_muxed6;
assign builder_shared_bte = builder_array_muxed7;
assign main_picorv32_idbus_dat_r = builder_shared_dat_r;
assign main_picorv32_idbus_ack = (builder_shared_ack & (builder_grant == 1'd0));
assign main_picorv32_idbus_err = (builder_shared_err & (builder_grant == 1'd0));
assign builder_request = {main_picorv32_idbus_cyc};
assign builder_grant = 1'd0;
always @(*) begin
	builder_slave_sel <= 3'd0;
	builder_slave_sel[0] <= (builder_shared_adr[29:13] == 1'd0);
	builder_slave_sel[1] <= (builder_shared_adr[29:10] == 13'd4096);
	builder_slave_sel[2] <= (builder_shared_adr[29:14] == 16'd33280);
end
assign main_simsoc_ram_bus_adr = builder_shared_adr;
assign main_simsoc_ram_bus_dat_w = builder_shared_dat_w;
assign main_simsoc_ram_bus_sel = builder_shared_sel;
assign main_simsoc_ram_bus_stb = builder_shared_stb;
assign main_simsoc_ram_bus_we = builder_shared_we;
assign main_simsoc_ram_bus_cti = builder_shared_cti;
assign main_simsoc_ram_bus_bte = builder_shared_bte;
assign main_ram_bus_ram_bus_adr = builder_shared_adr;
assign main_ram_bus_ram_bus_dat_w = builder_shared_dat_w;
assign main_ram_bus_ram_bus_sel = builder_shared_sel;
assign main_ram_bus_ram_bus_stb = builder_shared_stb;
assign main_ram_bus_ram_bus_we = builder_shared_we;
assign main_ram_bus_ram_bus_cti = builder_shared_cti;
assign main_ram_bus_ram_bus_bte = builder_shared_bte;
assign builder_simsoc_wishbone_adr = builder_shared_adr;
assign builder_simsoc_wishbone_dat_w = builder_shared_dat_w;
assign builder_simsoc_wishbone_sel = builder_shared_sel;
assign builder_simsoc_wishbone_stb = builder_shared_stb;
assign builder_simsoc_wishbone_we = builder_shared_we;
assign builder_simsoc_wishbone_cti = builder_shared_cti;
assign builder_simsoc_wishbone_bte = builder_shared_bte;
assign main_simsoc_ram_bus_cyc = (builder_shared_cyc & builder_slave_sel[0]);
assign main_ram_bus_ram_bus_cyc = (builder_shared_cyc & builder_slave_sel[1]);
assign builder_simsoc_wishbone_cyc = (builder_shared_cyc & builder_slave_sel[2]);
always @(*) begin
	builder_shared_ack <= 1'd0;
	builder_shared_ack <= ((main_simsoc_ram_bus_ack | main_ram_bus_ram_bus_ack) | builder_simsoc_wishbone_ack);
	if (builder_done) begin
		builder_shared_ack <= 1'd1;
	end
end
assign builder_shared_err = ((main_simsoc_ram_bus_err | main_ram_bus_ram_bus_err) | builder_simsoc_wishbone_err);
always @(*) begin
	builder_shared_dat_r <= 32'd0;
	builder_shared_dat_r <= ((({32{builder_slave_sel_r[0]}} & main_simsoc_ram_bus_dat_r) | ({32{builder_slave_sel_r[1]}} & main_ram_bus_ram_bus_dat_r)) | ({32{builder_slave_sel_r[2]}} & builder_simsoc_wishbone_dat_r));
	if (builder_done) begin
		builder_shared_dat_r <= 32'd4294967295;
	end
end
assign builder_wait = ((builder_shared_stb & builder_shared_cyc) & (~builder_shared_ack));
always @(*) begin
	builder_error <= 1'd0;
	if (builder_done) begin
		builder_error <= 1'd1;
	end
end
assign builder_done = (builder_count == 1'd0);
assign builder_csr_bankarray_csrbank0_sel = (builder_csr_bankarray_interface0_bank_bus_adr[13:9] == 1'd0);
assign builder_csr_bankarray_csrbank0_reset0_r = builder_csr_bankarray_interface0_bank_bus_dat_w[1:0];
always @(*) begin
	builder_csr_bankarray_csrbank0_reset0_re <= 1'd0;
	if ((builder_csr_bankarray_csrbank0_sel & (builder_csr_bankarray_interface0_bank_bus_adr[8:0] == 1'd0))) begin
		builder_csr_bankarray_csrbank0_reset0_re <= builder_csr_bankarray_interface0_bank_bus_we;
	end
end
always @(*) begin
	builder_csr_bankarray_csrbank0_reset0_we <= 1'd0;
	if ((builder_csr_bankarray_csrbank0_sel & (builder_csr_bankarray_interface0_bank_bus_adr[8:0] == 1'd0))) begin
		builder_csr_bankarray_csrbank0_reset0_we <= (~builder_csr_bankarray_interface0_bank_bus_we);
	end
end
assign builder_csr_bankarray_csrbank0_scratch0_r = builder_csr_bankarray_interface0_bank_bus_dat_w[31:0];
always @(*) begin
	builder_csr_bankarray_csrbank0_scratch0_we <= 1'd0;
	if ((builder_csr_bankarray_csrbank0_sel & (builder_csr_bankarray_interface0_bank_bus_adr[8:0] == 1'd1))) begin
		builder_csr_bankarray_csrbank0_scratch0_we <= (~builder_csr_bankarray_interface0_bank_bus_we);
	end
end
always @(*) begin
	builder_csr_bankarray_csrbank0_scratch0_re <= 1'd0;
	if ((builder_csr_bankarray_csrbank0_sel & (builder_csr_bankarray_interface0_bank_bus_adr[8:0] == 1'd1))) begin
		builder_csr_bankarray_csrbank0_scratch0_re <= builder_csr_bankarray_interface0_bank_bus_we;
	end
end
assign builder_csr_bankarray_csrbank0_bus_errors_r = builder_csr_bankarray_interface0_bank_bus_dat_w[31:0];
always @(*) begin
	builder_csr_bankarray_csrbank0_bus_errors_re <= 1'd0;
	if ((builder_csr_bankarray_csrbank0_sel & (builder_csr_bankarray_interface0_bank_bus_adr[8:0] == 2'd2))) begin
		builder_csr_bankarray_csrbank0_bus_errors_re <= builder_csr_bankarray_interface0_bank_bus_we;
	end
end
always @(*) begin
	builder_csr_bankarray_csrbank0_bus_errors_we <= 1'd0;
	if ((builder_csr_bankarray_csrbank0_sel & (builder_csr_bankarray_interface0_bank_bus_adr[8:0] == 2'd2))) begin
		builder_csr_bankarray_csrbank0_bus_errors_we <= (~builder_csr_bankarray_interface0_bank_bus_we);
	end
end
always @(*) begin
	main_soc_rst <= 1'd0;
	if (main_reset_re) begin
		main_soc_rst <= main_reset_storage[0];
	end
end
assign main_cpu_rst = main_reset_storage[1];
assign builder_csr_bankarray_csrbank0_reset0_w = main_reset_storage[1:0];
assign builder_csr_bankarray_csrbank0_scratch0_w = main_scratch_storage[31:0];
assign builder_csr_bankarray_csrbank0_bus_errors_w = main_bus_errors_status[31:0];
assign main_bus_errors_we = builder_csr_bankarray_csrbank0_bus_errors_we;
assign builder_csr_bankarray_csrbank1_sel = (builder_csr_bankarray_interface1_bank_bus_adr[13:9] == 1'd1);
assign builder_csr_bankarray_csrbank1_oe0_r = builder_csr_bankarray_interface1_bank_bus_dat_w[31:0];
always @(*) begin
	builder_csr_bankarray_csrbank1_oe0_we <= 1'd0;
	if ((builder_csr_bankarray_csrbank1_sel & (builder_csr_bankarray_interface1_bank_bus_adr[8:0] == 1'd0))) begin
		builder_csr_bankarray_csrbank1_oe0_we <= (~builder_csr_bankarray_interface1_bank_bus_we);
	end
end
always @(*) begin
	builder_csr_bankarray_csrbank1_oe0_re <= 1'd0;
	if ((builder_csr_bankarray_csrbank1_sel & (builder_csr_bankarray_interface1_bank_bus_adr[8:0] == 1'd0))) begin
		builder_csr_bankarray_csrbank1_oe0_re <= builder_csr_bankarray_interface1_bank_bus_we;
	end
end
assign builder_csr_bankarray_csrbank1_in_r = builder_csr_bankarray_interface1_bank_bus_dat_w[31:0];
always @(*) begin
	builder_csr_bankarray_csrbank1_in_re <= 1'd0;
	if ((builder_csr_bankarray_csrbank1_sel & (builder_csr_bankarray_interface1_bank_bus_adr[8:0] == 1'd1))) begin
		builder_csr_bankarray_csrbank1_in_re <= builder_csr_bankarray_interface1_bank_bus_we;
	end
end
always @(*) begin
	builder_csr_bankarray_csrbank1_in_we <= 1'd0;
	if ((builder_csr_bankarray_csrbank1_sel & (builder_csr_bankarray_interface1_bank_bus_adr[8:0] == 1'd1))) begin
		builder_csr_bankarray_csrbank1_in_we <= (~builder_csr_bankarray_interface1_bank_bus_we);
	end
end
assign builder_csr_bankarray_csrbank1_out0_r = builder_csr_bankarray_interface1_bank_bus_dat_w[31:0];
always @(*) begin
	builder_csr_bankarray_csrbank1_out0_we <= 1'd0;
	if ((builder_csr_bankarray_csrbank1_sel & (builder_csr_bankarray_interface1_bank_bus_adr[8:0] == 2'd2))) begin
		builder_csr_bankarray_csrbank1_out0_we <= (~builder_csr_bankarray_interface1_bank_bus_we);
	end
end
always @(*) begin
	builder_csr_bankarray_csrbank1_out0_re <= 1'd0;
	if ((builder_csr_bankarray_csrbank1_sel & (builder_csr_bankarray_interface1_bank_bus_adr[8:0] == 2'd2))) begin
		builder_csr_bankarray_csrbank1_out0_re <= builder_csr_bankarray_interface1_bank_bus_we;
	end
end
assign builder_csr_bankarray_csrbank1_mode0_r = builder_csr_bankarray_interface1_bank_bus_dat_w[31:0];
always @(*) begin
	builder_csr_bankarray_csrbank1_mode0_we <= 1'd0;
	if ((builder_csr_bankarray_csrbank1_sel & (builder_csr_bankarray_interface1_bank_bus_adr[8:0] == 2'd3))) begin
		builder_csr_bankarray_csrbank1_mode0_we <= (~builder_csr_bankarray_interface1_bank_bus_we);
	end
end
always @(*) begin
	builder_csr_bankarray_csrbank1_mode0_re <= 1'd0;
	if ((builder_csr_bankarray_csrbank1_sel & (builder_csr_bankarray_interface1_bank_bus_adr[8:0] == 2'd3))) begin
		builder_csr_bankarray_csrbank1_mode0_re <= builder_csr_bankarray_interface1_bank_bus_we;
	end
end
assign builder_csr_bankarray_csrbank1_edge0_r = builder_csr_bankarray_interface1_bank_bus_dat_w[31:0];
always @(*) begin
	builder_csr_bankarray_csrbank1_edge0_re <= 1'd0;
	if ((builder_csr_bankarray_csrbank1_sel & (builder_csr_bankarray_interface1_bank_bus_adr[8:0] == 3'd4))) begin
		builder_csr_bankarray_csrbank1_edge0_re <= builder_csr_bankarray_interface1_bank_bus_we;
	end
end
always @(*) begin
	builder_csr_bankarray_csrbank1_edge0_we <= 1'd0;
	if ((builder_csr_bankarray_csrbank1_sel & (builder_csr_bankarray_interface1_bank_bus_adr[8:0] == 3'd4))) begin
		builder_csr_bankarray_csrbank1_edge0_we <= (~builder_csr_bankarray_interface1_bank_bus_we);
	end
end
assign builder_csr_bankarray_csrbank1_ev_status_r = builder_csr_bankarray_interface1_bank_bus_dat_w[31:0];
always @(*) begin
	builder_csr_bankarray_csrbank1_ev_status_we <= 1'd0;
	if ((builder_csr_bankarray_csrbank1_sel & (builder_csr_bankarray_interface1_bank_bus_adr[8:0] == 3'd5))) begin
		builder_csr_bankarray_csrbank1_ev_status_we <= (~builder_csr_bankarray_interface1_bank_bus_we);
	end
end
always @(*) begin
	builder_csr_bankarray_csrbank1_ev_status_re <= 1'd0;
	if ((builder_csr_bankarray_csrbank1_sel & (builder_csr_bankarray_interface1_bank_bus_adr[8:0] == 3'd5))) begin
		builder_csr_bankarray_csrbank1_ev_status_re <= builder_csr_bankarray_interface1_bank_bus_we;
	end
end
assign builder_csr_bankarray_csrbank1_ev_pending_r = builder_csr_bankarray_interface1_bank_bus_dat_w[31:0];
always @(*) begin
	builder_csr_bankarray_csrbank1_ev_pending_we <= 1'd0;
	if ((builder_csr_bankarray_csrbank1_sel & (builder_csr_bankarray_interface1_bank_bus_adr[8:0] == 3'd6))) begin
		builder_csr_bankarray_csrbank1_ev_pending_we <= (~builder_csr_bankarray_interface1_bank_bus_we);
	end
end
always @(*) begin
	builder_csr_bankarray_csrbank1_ev_pending_re <= 1'd0;
	if ((builder_csr_bankarray_csrbank1_sel & (builder_csr_bankarray_interface1_bank_bus_adr[8:0] == 3'd6))) begin
		builder_csr_bankarray_csrbank1_ev_pending_re <= builder_csr_bankarray_interface1_bank_bus_we;
	end
end
assign builder_csr_bankarray_csrbank1_ev_enable0_r = builder_csr_bankarray_interface1_bank_bus_dat_w[31:0];
always @(*) begin
	builder_csr_bankarray_csrbank1_ev_enable0_re <= 1'd0;
	if ((builder_csr_bankarray_csrbank1_sel & (builder_csr_bankarray_interface1_bank_bus_adr[8:0] == 3'd7))) begin
		builder_csr_bankarray_csrbank1_ev_enable0_re <= builder_csr_bankarray_interface1_bank_bus_we;
	end
end
always @(*) begin
	builder_csr_bankarray_csrbank1_ev_enable0_we <= 1'd0;
	if ((builder_csr_bankarray_csrbank1_sel & (builder_csr_bankarray_interface1_bank_bus_adr[8:0] == 3'd7))) begin
		builder_csr_bankarray_csrbank1_ev_enable0_we <= (~builder_csr_bankarray_interface1_bank_bus_we);
	end
end
assign builder_csr_bankarray_csrbank1_oe0_w = main_oe_storage[31:0];
assign builder_csr_bankarray_csrbank1_in_w = main_in_status[31:0];
assign main_in_we = builder_csr_bankarray_csrbank1_in_we;
assign builder_csr_bankarray_csrbank1_out0_w = main_out_storage[31:0];
assign builder_csr_bankarray_csrbank1_mode0_w = main_mode_storage[31:0];
assign builder_csr_bankarray_csrbank1_edge0_w = main_edge_storage[31:0];
always @(*) begin
	builder_status_status <= 32'd0;
	builder_status_status[0] <= builder_i00;
	builder_status_status[1] <= builder_i10;
	builder_status_status[2] <= builder_i20;
	builder_status_status[3] <= builder_i30;
	builder_status_status[4] <= builder_i40;
	builder_status_status[5] <= builder_i50;
	builder_status_status[6] <= builder_i60;
	builder_status_status[7] <= builder_i70;
	builder_status_status[8] <= builder_i80;
	builder_status_status[9] <= builder_i90;
	builder_status_status[10] <= builder_i100;
	builder_status_status[11] <= builder_i110;
	builder_status_status[12] <= builder_i120;
	builder_status_status[13] <= builder_i130;
	builder_status_status[14] <= builder_i140;
	builder_status_status[15] <= builder_i150;
	builder_status_status[16] <= builder_i160;
	builder_status_status[17] <= builder_i170;
	builder_status_status[18] <= builder_i180;
	builder_status_status[19] <= builder_i190;
	builder_status_status[20] <= builder_i200;
	builder_status_status[21] <= builder_i210;
	builder_status_status[22] <= builder_i220;
	builder_status_status[23] <= builder_i230;
	builder_status_status[24] <= builder_i240;
	builder_status_status[25] <= builder_i250;
	builder_status_status[26] <= builder_i260;
	builder_status_status[27] <= builder_i270;
	builder_status_status[28] <= builder_i280;
	builder_status_status[29] <= builder_i290;
	builder_status_status[30] <= builder_i300;
	builder_status_status[31] <= builder_i310;
end
assign builder_csr_bankarray_csrbank1_ev_status_w = builder_status_status[31:0];
assign builder_status_we = builder_csr_bankarray_csrbank1_ev_status_we;
always @(*) begin
	builder_pending_status <= 32'd0;
	builder_pending_status[0] <= builder_i01;
	builder_pending_status[1] <= builder_i11;
	builder_pending_status[2] <= builder_i21;
	builder_pending_status[3] <= builder_i31;
	builder_pending_status[4] <= builder_i41;
	builder_pending_status[5] <= builder_i51;
	builder_pending_status[6] <= builder_i61;
	builder_pending_status[7] <= builder_i71;
	builder_pending_status[8] <= builder_i81;
	builder_pending_status[9] <= builder_i91;
	builder_pending_status[10] <= builder_i101;
	builder_pending_status[11] <= builder_i111;
	builder_pending_status[12] <= builder_i121;
	builder_pending_status[13] <= builder_i131;
	builder_pending_status[14] <= builder_i141;
	builder_pending_status[15] <= builder_i151;
	builder_pending_status[16] <= builder_i161;
	builder_pending_status[17] <= builder_i171;
	builder_pending_status[18] <= builder_i181;
	builder_pending_status[19] <= builder_i191;
	builder_pending_status[20] <= builder_i201;
	builder_pending_status[21] <= builder_i211;
	builder_pending_status[22] <= builder_i221;
	builder_pending_status[23] <= builder_i231;
	builder_pending_status[24] <= builder_i241;
	builder_pending_status[25] <= builder_i251;
	builder_pending_status[26] <= builder_i261;
	builder_pending_status[27] <= builder_i271;
	builder_pending_status[28] <= builder_i281;
	builder_pending_status[29] <= builder_i291;
	builder_pending_status[30] <= builder_i301;
	builder_pending_status[31] <= builder_i311;
end
assign builder_csr_bankarray_csrbank1_ev_pending_w = builder_pending_status[31:0];
assign builder_pending_we = builder_csr_bankarray_csrbank1_ev_pending_we;
assign builder_i02 = builder_enable_storage[0];
assign builder_i12 = builder_enable_storage[1];
assign builder_i22 = builder_enable_storage[2];
assign builder_i32 = builder_enable_storage[3];
assign builder_i42 = builder_enable_storage[4];
assign builder_i52 = builder_enable_storage[5];
assign builder_i62 = builder_enable_storage[6];
assign builder_i72 = builder_enable_storage[7];
assign builder_i82 = builder_enable_storage[8];
assign builder_i92 = builder_enable_storage[9];
assign builder_i102 = builder_enable_storage[10];
assign builder_i112 = builder_enable_storage[11];
assign builder_i122 = builder_enable_storage[12];
assign builder_i132 = builder_enable_storage[13];
assign builder_i142 = builder_enable_storage[14];
assign builder_i152 = builder_enable_storage[15];
assign builder_i162 = builder_enable_storage[16];
assign builder_i172 = builder_enable_storage[17];
assign builder_i182 = builder_enable_storage[18];
assign builder_i192 = builder_enable_storage[19];
assign builder_i202 = builder_enable_storage[20];
assign builder_i212 = builder_enable_storage[21];
assign builder_i222 = builder_enable_storage[22];
assign builder_i232 = builder_enable_storage[23];
assign builder_i242 = builder_enable_storage[24];
assign builder_i252 = builder_enable_storage[25];
assign builder_i262 = builder_enable_storage[26];
assign builder_i272 = builder_enable_storage[27];
assign builder_i282 = builder_enable_storage[28];
assign builder_i292 = builder_enable_storage[29];
assign builder_i302 = builder_enable_storage[30];
assign builder_i312 = builder_enable_storage[31];
assign builder_csr_bankarray_csrbank1_ev_enable0_w = builder_enable_storage[31:0];
assign builder_csr_bankarray_sel = (builder_csr_bankarray_sram_bus_adr[13:9] == 2'd2);
always @(*) begin
	builder_csr_bankarray_sram_bus_dat_r <= 32'd0;
	if (builder_csr_bankarray_sel_r) begin
		builder_csr_bankarray_sram_bus_dat_r <= builder_csr_bankarray_dat_r;
	end
end
assign builder_csr_bankarray_adr = builder_csr_bankarray_sram_bus_adr[5:0];
assign builder_csr_bankarray_csrbank2_sel = (builder_csr_bankarray_interface2_bank_bus_adr[13:9] == 2'd3);
assign builder_csr_bankarray_csrbank2_load0_r = builder_csr_bankarray_interface2_bank_bus_dat_w[31:0];
always @(*) begin
	builder_csr_bankarray_csrbank2_load0_re <= 1'd0;
	if ((builder_csr_bankarray_csrbank2_sel & (builder_csr_bankarray_interface2_bank_bus_adr[8:0] == 1'd0))) begin
		builder_csr_bankarray_csrbank2_load0_re <= builder_csr_bankarray_interface2_bank_bus_we;
	end
end
always @(*) begin
	builder_csr_bankarray_csrbank2_load0_we <= 1'd0;
	if ((builder_csr_bankarray_csrbank2_sel & (builder_csr_bankarray_interface2_bank_bus_adr[8:0] == 1'd0))) begin
		builder_csr_bankarray_csrbank2_load0_we <= (~builder_csr_bankarray_interface2_bank_bus_we);
	end
end
assign builder_csr_bankarray_csrbank2_reload0_r = builder_csr_bankarray_interface2_bank_bus_dat_w[31:0];
always @(*) begin
	builder_csr_bankarray_csrbank2_reload0_we <= 1'd0;
	if ((builder_csr_bankarray_csrbank2_sel & (builder_csr_bankarray_interface2_bank_bus_adr[8:0] == 1'd1))) begin
		builder_csr_bankarray_csrbank2_reload0_we <= (~builder_csr_bankarray_interface2_bank_bus_we);
	end
end
always @(*) begin
	builder_csr_bankarray_csrbank2_reload0_re <= 1'd0;
	if ((builder_csr_bankarray_csrbank2_sel & (builder_csr_bankarray_interface2_bank_bus_adr[8:0] == 1'd1))) begin
		builder_csr_bankarray_csrbank2_reload0_re <= builder_csr_bankarray_interface2_bank_bus_we;
	end
end
assign builder_csr_bankarray_csrbank2_en0_r = builder_csr_bankarray_interface2_bank_bus_dat_w[0];
always @(*) begin
	builder_csr_bankarray_csrbank2_en0_re <= 1'd0;
	if ((builder_csr_bankarray_csrbank2_sel & (builder_csr_bankarray_interface2_bank_bus_adr[8:0] == 2'd2))) begin
		builder_csr_bankarray_csrbank2_en0_re <= builder_csr_bankarray_interface2_bank_bus_we;
	end
end
always @(*) begin
	builder_csr_bankarray_csrbank2_en0_we <= 1'd0;
	if ((builder_csr_bankarray_csrbank2_sel & (builder_csr_bankarray_interface2_bank_bus_adr[8:0] == 2'd2))) begin
		builder_csr_bankarray_csrbank2_en0_we <= (~builder_csr_bankarray_interface2_bank_bus_we);
	end
end
assign builder_csr_bankarray_csrbank2_update_value0_r = builder_csr_bankarray_interface2_bank_bus_dat_w[0];
always @(*) begin
	builder_csr_bankarray_csrbank2_update_value0_re <= 1'd0;
	if ((builder_csr_bankarray_csrbank2_sel & (builder_csr_bankarray_interface2_bank_bus_adr[8:0] == 2'd3))) begin
		builder_csr_bankarray_csrbank2_update_value0_re <= builder_csr_bankarray_interface2_bank_bus_we;
	end
end
always @(*) begin
	builder_csr_bankarray_csrbank2_update_value0_we <= 1'd0;
	if ((builder_csr_bankarray_csrbank2_sel & (builder_csr_bankarray_interface2_bank_bus_adr[8:0] == 2'd3))) begin
		builder_csr_bankarray_csrbank2_update_value0_we <= (~builder_csr_bankarray_interface2_bank_bus_we);
	end
end
assign builder_csr_bankarray_csrbank2_value_r = builder_csr_bankarray_interface2_bank_bus_dat_w[31:0];
always @(*) begin
	builder_csr_bankarray_csrbank2_value_we <= 1'd0;
	if ((builder_csr_bankarray_csrbank2_sel & (builder_csr_bankarray_interface2_bank_bus_adr[8:0] == 3'd4))) begin
		builder_csr_bankarray_csrbank2_value_we <= (~builder_csr_bankarray_interface2_bank_bus_we);
	end
end
always @(*) begin
	builder_csr_bankarray_csrbank2_value_re <= 1'd0;
	if ((builder_csr_bankarray_csrbank2_sel & (builder_csr_bankarray_interface2_bank_bus_adr[8:0] == 3'd4))) begin
		builder_csr_bankarray_csrbank2_value_re <= builder_csr_bankarray_interface2_bank_bus_we;
	end
end
assign builder_csr_bankarray_csrbank2_ev_status_r = builder_csr_bankarray_interface2_bank_bus_dat_w[0];
always @(*) begin
	builder_csr_bankarray_csrbank2_ev_status_re <= 1'd0;
	if ((builder_csr_bankarray_csrbank2_sel & (builder_csr_bankarray_interface2_bank_bus_adr[8:0] == 3'd5))) begin
		builder_csr_bankarray_csrbank2_ev_status_re <= builder_csr_bankarray_interface2_bank_bus_we;
	end
end
always @(*) begin
	builder_csr_bankarray_csrbank2_ev_status_we <= 1'd0;
	if ((builder_csr_bankarray_csrbank2_sel & (builder_csr_bankarray_interface2_bank_bus_adr[8:0] == 3'd5))) begin
		builder_csr_bankarray_csrbank2_ev_status_we <= (~builder_csr_bankarray_interface2_bank_bus_we);
	end
end
assign builder_csr_bankarray_csrbank2_ev_pending_r = builder_csr_bankarray_interface2_bank_bus_dat_w[0];
always @(*) begin
	builder_csr_bankarray_csrbank2_ev_pending_re <= 1'd0;
	if ((builder_csr_bankarray_csrbank2_sel & (builder_csr_bankarray_interface2_bank_bus_adr[8:0] == 3'd6))) begin
		builder_csr_bankarray_csrbank2_ev_pending_re <= builder_csr_bankarray_interface2_bank_bus_we;
	end
end
always @(*) begin
	builder_csr_bankarray_csrbank2_ev_pending_we <= 1'd0;
	if ((builder_csr_bankarray_csrbank2_sel & (builder_csr_bankarray_interface2_bank_bus_adr[8:0] == 3'd6))) begin
		builder_csr_bankarray_csrbank2_ev_pending_we <= (~builder_csr_bankarray_interface2_bank_bus_we);
	end
end
assign builder_csr_bankarray_csrbank2_ev_enable0_r = builder_csr_bankarray_interface2_bank_bus_dat_w[0];
always @(*) begin
	builder_csr_bankarray_csrbank2_ev_enable0_we <= 1'd0;
	if ((builder_csr_bankarray_csrbank2_sel & (builder_csr_bankarray_interface2_bank_bus_adr[8:0] == 3'd7))) begin
		builder_csr_bankarray_csrbank2_ev_enable0_we <= (~builder_csr_bankarray_interface2_bank_bus_we);
	end
end
always @(*) begin
	builder_csr_bankarray_csrbank2_ev_enable0_re <= 1'd0;
	if ((builder_csr_bankarray_csrbank2_sel & (builder_csr_bankarray_interface2_bank_bus_adr[8:0] == 3'd7))) begin
		builder_csr_bankarray_csrbank2_ev_enable0_re <= builder_csr_bankarray_interface2_bank_bus_we;
	end
end
assign builder_csr_bankarray_csrbank2_load0_w = main_timer_load_storage[31:0];
assign builder_csr_bankarray_csrbank2_reload0_w = main_timer_reload_storage[31:0];
assign builder_csr_bankarray_csrbank2_en0_w = main_timer_en_storage;
assign builder_csr_bankarray_csrbank2_update_value0_w = main_timer_update_value_storage;
assign builder_csr_bankarray_csrbank2_value_w = main_timer_value_status[31:0];
assign main_timer_value_we = builder_csr_bankarray_csrbank2_value_we;
assign main_timer_status_status = main_timer_zero0;
assign builder_csr_bankarray_csrbank2_ev_status_w = main_timer_status_status;
assign main_timer_status_we = builder_csr_bankarray_csrbank2_ev_status_we;
assign main_timer_pending_status = main_timer_zero1;
assign builder_csr_bankarray_csrbank2_ev_pending_w = main_timer_pending_status;
assign main_timer_pending_we = builder_csr_bankarray_csrbank2_ev_pending_we;
assign main_timer_zero2 = main_timer_enable_storage;
assign builder_csr_bankarray_csrbank2_ev_enable0_w = main_timer_enable_storage;
assign builder_csr_bankarray_csrbank3_sel = (builder_csr_bankarray_interface3_bank_bus_adr[13:9] == 3'd4);
assign main_uart_rxtx_r = builder_csr_bankarray_interface3_bank_bus_dat_w[7:0];
always @(*) begin
	main_uart_rxtx_we <= 1'd0;
	if ((builder_csr_bankarray_csrbank3_sel & (builder_csr_bankarray_interface3_bank_bus_adr[8:0] == 1'd0))) begin
		main_uart_rxtx_we <= (~builder_csr_bankarray_interface3_bank_bus_we);
	end
end
always @(*) begin
	main_uart_rxtx_re <= 1'd0;
	if ((builder_csr_bankarray_csrbank3_sel & (builder_csr_bankarray_interface3_bank_bus_adr[8:0] == 1'd0))) begin
		main_uart_rxtx_re <= builder_csr_bankarray_interface3_bank_bus_we;
	end
end
assign builder_csr_bankarray_csrbank3_txfull_r = builder_csr_bankarray_interface3_bank_bus_dat_w[0];
always @(*) begin
	builder_csr_bankarray_csrbank3_txfull_we <= 1'd0;
	if ((builder_csr_bankarray_csrbank3_sel & (builder_csr_bankarray_interface3_bank_bus_adr[8:0] == 1'd1))) begin
		builder_csr_bankarray_csrbank3_txfull_we <= (~builder_csr_bankarray_interface3_bank_bus_we);
	end
end
always @(*) begin
	builder_csr_bankarray_csrbank3_txfull_re <= 1'd0;
	if ((builder_csr_bankarray_csrbank3_sel & (builder_csr_bankarray_interface3_bank_bus_adr[8:0] == 1'd1))) begin
		builder_csr_bankarray_csrbank3_txfull_re <= builder_csr_bankarray_interface3_bank_bus_we;
	end
end
assign builder_csr_bankarray_csrbank3_rxempty_r = builder_csr_bankarray_interface3_bank_bus_dat_w[0];
always @(*) begin
	builder_csr_bankarray_csrbank3_rxempty_re <= 1'd0;
	if ((builder_csr_bankarray_csrbank3_sel & (builder_csr_bankarray_interface3_bank_bus_adr[8:0] == 2'd2))) begin
		builder_csr_bankarray_csrbank3_rxempty_re <= builder_csr_bankarray_interface3_bank_bus_we;
	end
end
always @(*) begin
	builder_csr_bankarray_csrbank3_rxempty_we <= 1'd0;
	if ((builder_csr_bankarray_csrbank3_sel & (builder_csr_bankarray_interface3_bank_bus_adr[8:0] == 2'd2))) begin
		builder_csr_bankarray_csrbank3_rxempty_we <= (~builder_csr_bankarray_interface3_bank_bus_we);
	end
end
assign builder_csr_bankarray_csrbank3_ev_status_r = builder_csr_bankarray_interface3_bank_bus_dat_w[1:0];
always @(*) begin
	builder_csr_bankarray_csrbank3_ev_status_re <= 1'd0;
	if ((builder_csr_bankarray_csrbank3_sel & (builder_csr_bankarray_interface3_bank_bus_adr[8:0] == 2'd3))) begin
		builder_csr_bankarray_csrbank3_ev_status_re <= builder_csr_bankarray_interface3_bank_bus_we;
	end
end
always @(*) begin
	builder_csr_bankarray_csrbank3_ev_status_we <= 1'd0;
	if ((builder_csr_bankarray_csrbank3_sel & (builder_csr_bankarray_interface3_bank_bus_adr[8:0] == 2'd3))) begin
		builder_csr_bankarray_csrbank3_ev_status_we <= (~builder_csr_bankarray_interface3_bank_bus_we);
	end
end
assign builder_csr_bankarray_csrbank3_ev_pending_r = builder_csr_bankarray_interface3_bank_bus_dat_w[1:0];
always @(*) begin
	builder_csr_bankarray_csrbank3_ev_pending_we <= 1'd0;
	if ((builder_csr_bankarray_csrbank3_sel & (builder_csr_bankarray_interface3_bank_bus_adr[8:0] == 3'd4))) begin
		builder_csr_bankarray_csrbank3_ev_pending_we <= (~builder_csr_bankarray_interface3_bank_bus_we);
	end
end
always @(*) begin
	builder_csr_bankarray_csrbank3_ev_pending_re <= 1'd0;
	if ((builder_csr_bankarray_csrbank3_sel & (builder_csr_bankarray_interface3_bank_bus_adr[8:0] == 3'd4))) begin
		builder_csr_bankarray_csrbank3_ev_pending_re <= builder_csr_bankarray_interface3_bank_bus_we;
	end
end
assign builder_csr_bankarray_csrbank3_ev_enable0_r = builder_csr_bankarray_interface3_bank_bus_dat_w[1:0];
always @(*) begin
	builder_csr_bankarray_csrbank3_ev_enable0_re <= 1'd0;
	if ((builder_csr_bankarray_csrbank3_sel & (builder_csr_bankarray_interface3_bank_bus_adr[8:0] == 3'd5))) begin
		builder_csr_bankarray_csrbank3_ev_enable0_re <= builder_csr_bankarray_interface3_bank_bus_we;
	end
end
always @(*) begin
	builder_csr_bankarray_csrbank3_ev_enable0_we <= 1'd0;
	if ((builder_csr_bankarray_csrbank3_sel & (builder_csr_bankarray_interface3_bank_bus_adr[8:0] == 3'd5))) begin
		builder_csr_bankarray_csrbank3_ev_enable0_we <= (~builder_csr_bankarray_interface3_bank_bus_we);
	end
end
assign builder_csr_bankarray_csrbank3_txempty_r = builder_csr_bankarray_interface3_bank_bus_dat_w[0];
always @(*) begin
	builder_csr_bankarray_csrbank3_txempty_re <= 1'd0;
	if ((builder_csr_bankarray_csrbank3_sel & (builder_csr_bankarray_interface3_bank_bus_adr[8:0] == 3'd6))) begin
		builder_csr_bankarray_csrbank3_txempty_re <= builder_csr_bankarray_interface3_bank_bus_we;
	end
end
always @(*) begin
	builder_csr_bankarray_csrbank3_txempty_we <= 1'd0;
	if ((builder_csr_bankarray_csrbank3_sel & (builder_csr_bankarray_interface3_bank_bus_adr[8:0] == 3'd6))) begin
		builder_csr_bankarray_csrbank3_txempty_we <= (~builder_csr_bankarray_interface3_bank_bus_we);
	end
end
assign builder_csr_bankarray_csrbank3_rxfull_r = builder_csr_bankarray_interface3_bank_bus_dat_w[0];
always @(*) begin
	builder_csr_bankarray_csrbank3_rxfull_we <= 1'd0;
	if ((builder_csr_bankarray_csrbank3_sel & (builder_csr_bankarray_interface3_bank_bus_adr[8:0] == 3'd7))) begin
		builder_csr_bankarray_csrbank3_rxfull_we <= (~builder_csr_bankarray_interface3_bank_bus_we);
	end
end
always @(*) begin
	builder_csr_bankarray_csrbank3_rxfull_re <= 1'd0;
	if ((builder_csr_bankarray_csrbank3_sel & (builder_csr_bankarray_interface3_bank_bus_adr[8:0] == 3'd7))) begin
		builder_csr_bankarray_csrbank3_rxfull_re <= builder_csr_bankarray_interface3_bank_bus_we;
	end
end
assign builder_csr_bankarray_csrbank3_txfull_w = main_uart_txfull_status;
assign main_uart_txfull_we = builder_csr_bankarray_csrbank3_txfull_we;
assign builder_csr_bankarray_csrbank3_rxempty_w = main_uart_rxempty_status;
assign main_uart_rxempty_we = builder_csr_bankarray_csrbank3_rxempty_we;
always @(*) begin
	main_uart_status_status <= 2'd0;
	main_uart_status_status[0] <= main_uart_tx0;
	main_uart_status_status[1] <= main_uart_rx0;
end
assign builder_csr_bankarray_csrbank3_ev_status_w = main_uart_status_status[1:0];
assign main_uart_status_we = builder_csr_bankarray_csrbank3_ev_status_we;
always @(*) begin
	main_uart_pending_status <= 2'd0;
	main_uart_pending_status[0] <= main_uart_tx1;
	main_uart_pending_status[1] <= main_uart_rx1;
end
assign builder_csr_bankarray_csrbank3_ev_pending_w = main_uart_pending_status[1:0];
assign main_uart_pending_we = builder_csr_bankarray_csrbank3_ev_pending_we;
assign main_uart_tx2 = main_uart_enable_storage[0];
assign main_uart_rx2 = main_uart_enable_storage[1];
assign builder_csr_bankarray_csrbank3_ev_enable0_w = main_uart_enable_storage[1:0];
assign builder_csr_bankarray_csrbank3_txempty_w = main_uart_txempty_status;
assign main_uart_txempty_we = builder_csr_bankarray_csrbank3_txempty_we;
assign builder_csr_bankarray_csrbank3_rxfull_w = main_uart_rxfull_status;
assign main_uart_rxfull_we = builder_csr_bankarray_csrbank3_rxfull_we;
assign builder_csr_interconnect_adr = builder_simsoc_adr;
assign builder_csr_interconnect_we = builder_simsoc_we;
assign builder_csr_interconnect_dat_w = builder_simsoc_dat_w;
assign builder_simsoc_dat_r = builder_csr_interconnect_dat_r;
assign builder_csr_bankarray_interface0_bank_bus_adr = builder_csr_interconnect_adr;
assign builder_csr_bankarray_interface1_bank_bus_adr = builder_csr_interconnect_adr;
assign builder_csr_bankarray_interface2_bank_bus_adr = builder_csr_interconnect_adr;
assign builder_csr_bankarray_interface3_bank_bus_adr = builder_csr_interconnect_adr;
assign builder_csr_bankarray_sram_bus_adr = builder_csr_interconnect_adr;
assign builder_csr_bankarray_interface0_bank_bus_we = builder_csr_interconnect_we;
assign builder_csr_bankarray_interface1_bank_bus_we = builder_csr_interconnect_we;
assign builder_csr_bankarray_interface2_bank_bus_we = builder_csr_interconnect_we;
assign builder_csr_bankarray_interface3_bank_bus_we = builder_csr_interconnect_we;
assign builder_csr_bankarray_sram_bus_we = builder_csr_interconnect_we;
assign builder_csr_bankarray_interface0_bank_bus_dat_w = builder_csr_interconnect_dat_w;
assign builder_csr_bankarray_interface1_bank_bus_dat_w = builder_csr_interconnect_dat_w;
assign builder_csr_bankarray_interface2_bank_bus_dat_w = builder_csr_interconnect_dat_w;
assign builder_csr_bankarray_interface3_bank_bus_dat_w = builder_csr_interconnect_dat_w;
assign builder_csr_bankarray_sram_bus_dat_w = builder_csr_interconnect_dat_w;
assign builder_csr_interconnect_dat_r = ((((builder_csr_bankarray_interface0_bank_bus_dat_r | builder_csr_bankarray_interface1_bank_bus_dat_r) | builder_csr_bankarray_interface2_bank_bus_dat_r) | builder_csr_bankarray_interface3_bank_bus_dat_r) | builder_csr_bankarray_sram_bus_dat_r);
always @(*) begin
	builder_array_muxed0 <= 30'd0;
	case (builder_grant)
		default: begin
			builder_array_muxed0 <= main_picorv32_idbus_adr;
		end
	endcase
end
always @(*) begin
	builder_array_muxed1 <= 32'd0;
	case (builder_grant)
		default: begin
			builder_array_muxed1 <= main_picorv32_idbus_dat_w;
		end
	endcase
end
always @(*) begin
	builder_array_muxed2 <= 4'd0;
	case (builder_grant)
		default: begin
			builder_array_muxed2 <= main_picorv32_idbus_sel;
		end
	endcase
end
always @(*) begin
	builder_array_muxed3 <= 1'd0;
	case (builder_grant)
		default: begin
			builder_array_muxed3 <= main_picorv32_idbus_cyc;
		end
	endcase
end
always @(*) begin
	builder_array_muxed4 <= 1'd0;
	case (builder_grant)
		default: begin
			builder_array_muxed4 <= main_picorv32_idbus_stb;
		end
	endcase
end
always @(*) begin
	builder_array_muxed5 <= 1'd0;
	case (builder_grant)
		default: begin
			builder_array_muxed5 <= main_picorv32_idbus_we;
		end
	endcase
end
always @(*) begin
	builder_array_muxed6 <= 3'd0;
	case (builder_grant)
		default: begin
			builder_array_muxed6 <= main_picorv32_idbus_cti;
		end
	endcase
end
always @(*) begin
	builder_array_muxed7 <= 2'd0;
	case (builder_grant)
		default: begin
			builder_array_muxed7 <= main_picorv32_idbus_bte;
		end
	endcase
end
always @(*) begin
	main_in_status <= 32'd0;
	main_in_status[0] <= builder_multiregimpl0_regs1;
	main_in_status[1] <= builder_multiregimpl1_regs1;
	main_in_status[2] <= builder_multiregimpl2_regs1;
	main_in_status[3] <= builder_multiregimpl3_regs1;
	main_in_status[4] <= builder_multiregimpl4_regs1;
	main_in_status[5] <= builder_multiregimpl5_regs1;
	main_in_status[6] <= builder_multiregimpl6_regs1;
	main_in_status[7] <= builder_multiregimpl7_regs1;
	main_in_status[8] <= builder_multiregimpl8_regs1;
	main_in_status[9] <= builder_multiregimpl9_regs1;
	main_in_status[10] <= builder_multiregimpl10_regs1;
	main_in_status[11] <= builder_multiregimpl11_regs1;
	main_in_status[12] <= builder_multiregimpl12_regs1;
	main_in_status[13] <= builder_multiregimpl13_regs1;
	main_in_status[14] <= builder_multiregimpl14_regs1;
	main_in_status[15] <= builder_multiregimpl15_regs1;
	main_in_status[16] <= builder_multiregimpl16_regs1;
	main_in_status[17] <= builder_multiregimpl17_regs1;
	main_in_status[18] <= builder_multiregimpl18_regs1;
	main_in_status[19] <= builder_multiregimpl19_regs1;
	main_in_status[20] <= builder_multiregimpl20_regs1;
	main_in_status[21] <= builder_multiregimpl21_regs1;
	main_in_status[22] <= builder_multiregimpl22_regs1;
	main_in_status[23] <= builder_multiregimpl23_regs1;
	main_in_status[24] <= builder_multiregimpl24_regs1;
	main_in_status[25] <= builder_multiregimpl25_regs1;
	main_in_status[26] <= builder_multiregimpl26_regs1;
	main_in_status[27] <= builder_multiregimpl27_regs1;
	main_in_status[28] <= builder_multiregimpl28_regs1;
	main_in_status[29] <= builder_multiregimpl29_regs1;
	main_in_status[30] <= builder_multiregimpl30_regs1;
	main_in_status[31] <= builder_multiregimpl31_regs1;
end


//------------------------------------------------------------------------------
// Synchronous Logic
//------------------------------------------------------------------------------

always @(posedge por_clk) begin
	main_int_rst <= 1'd0;
end

always @(posedge sys_clk_1) begin
	if ((main_bus_errors != 32'd4294967295)) begin
		if (main_bus_error) begin
			main_bus_errors <= (main_bus_errors + 1'd1);
		end
	end
	main_simsoc_ram_bus_ack <= 1'd0;
	if (((main_simsoc_ram_bus_cyc & main_simsoc_ram_bus_stb) & (~main_simsoc_ram_bus_ack))) begin
		main_simsoc_ram_bus_ack <= 1'd1;
	end
	main_ram_bus_ram_bus_ack <= 1'd0;
	if (((main_ram_bus_ram_bus_cyc & main_ram_bus_ram_bus_stb) & (~main_ram_bus_ram_bus_ack))) begin
		main_ram_bus_ram_bus_ack <= 1'd1;
	end
	if (main_uart_tx_clear) begin
		main_uart_tx_pending <= 1'd0;
	end
	main_uart_tx_trigger_d <= main_uart_tx_trigger;
	if ((main_uart_tx_trigger & (~main_uart_tx_trigger_d))) begin
		main_uart_tx_pending <= 1'd1;
	end
	if (main_uart_rx_clear) begin
		main_uart_rx_pending <= 1'd0;
	end
	main_uart_rx_trigger_d <= main_uart_rx_trigger;
	if ((main_uart_rx_trigger & (~main_uart_rx_trigger_d))) begin
		main_uart_rx_pending <= 1'd1;
	end
	if (main_uart_tx_fifo_syncfifo_re) begin
		main_uart_tx_fifo_readable <= 1'd1;
	end else begin
		if (main_uart_tx_fifo_re) begin
			main_uart_tx_fifo_readable <= 1'd0;
		end
	end
	if (((main_uart_tx_fifo_syncfifo_we & main_uart_tx_fifo_syncfifo_writable) & (~main_uart_tx_fifo_replace))) begin
		main_uart_tx_fifo_produce <= (main_uart_tx_fifo_produce + 1'd1);
	end
	if (main_uart_tx_fifo_do_read) begin
		main_uart_tx_fifo_consume <= (main_uart_tx_fifo_consume + 1'd1);
	end
	if (((main_uart_tx_fifo_syncfifo_we & main_uart_tx_fifo_syncfifo_writable) & (~main_uart_tx_fifo_replace))) begin
		if ((~main_uart_tx_fifo_do_read)) begin
			main_uart_tx_fifo_level0 <= (main_uart_tx_fifo_level0 + 1'd1);
		end
	end else begin
		if (main_uart_tx_fifo_do_read) begin
			main_uart_tx_fifo_level0 <= (main_uart_tx_fifo_level0 - 1'd1);
		end
	end
	if (main_uart_rx_fifo_syncfifo_re) begin
		main_uart_rx_fifo_readable <= 1'd1;
	end else begin
		if (main_uart_rx_fifo_re) begin
			main_uart_rx_fifo_readable <= 1'd0;
		end
	end
	if (((main_uart_rx_fifo_syncfifo_we & main_uart_rx_fifo_syncfifo_writable) & (~main_uart_rx_fifo_replace))) begin
		main_uart_rx_fifo_produce <= (main_uart_rx_fifo_produce + 1'd1);
	end
	if (main_uart_rx_fifo_do_read) begin
		main_uart_rx_fifo_consume <= (main_uart_rx_fifo_consume + 1'd1);
	end
	if (((main_uart_rx_fifo_syncfifo_we & main_uart_rx_fifo_syncfifo_writable) & (~main_uart_rx_fifo_replace))) begin
		if ((~main_uart_rx_fifo_do_read)) begin
			main_uart_rx_fifo_level0 <= (main_uart_rx_fifo_level0 + 1'd1);
		end
	end else begin
		if (main_uart_rx_fifo_do_read) begin
			main_uart_rx_fifo_level0 <= (main_uart_rx_fifo_level0 - 1'd1);
		end
	end
	if (main_timer_en_storage) begin
		if ((main_timer_value == 1'd0)) begin
			main_timer_value <= main_timer_reload_storage;
		end else begin
			main_timer_value <= (main_timer_value - 1'd1);
		end
	end else begin
		main_timer_value <= main_timer_load_storage;
	end
	if (main_timer_update_value_re) begin
		main_timer_value_status <= main_timer_value;
	end
	if (main_timer_zero_clear) begin
		main_timer_zero_pending <= 1'd0;
	end
	main_timer_zero_trigger_d <= main_timer_zero_trigger;
	if ((main_timer_zero_trigger & (~main_timer_zero_trigger_d))) begin
		main_timer_zero_pending <= 1'd1;
	end
	main_in_pads_n_d0 <= main_in_status[0];
	main_in_pads_n_d1 <= main_in_status[1];
	main_in_pads_n_d2 <= main_in_status[2];
	main_in_pads_n_d3 <= main_in_status[3];
	main_in_pads_n_d4 <= main_in_status[4];
	main_in_pads_n_d5 <= main_in_status[5];
	main_in_pads_n_d6 <= main_in_status[6];
	main_in_pads_n_d7 <= main_in_status[7];
	main_in_pads_n_d8 <= main_in_status[8];
	main_in_pads_n_d9 <= main_in_status[9];
	main_in_pads_n_d10 <= main_in_status[10];
	main_in_pads_n_d11 <= main_in_status[11];
	main_in_pads_n_d12 <= main_in_status[12];
	main_in_pads_n_d13 <= main_in_status[13];
	main_in_pads_n_d14 <= main_in_status[14];
	main_in_pads_n_d15 <= main_in_status[15];
	main_in_pads_n_d16 <= main_in_status[16];
	main_in_pads_n_d17 <= main_in_status[17];
	main_in_pads_n_d18 <= main_in_status[18];
	main_in_pads_n_d19 <= main_in_status[19];
	main_in_pads_n_d20 <= main_in_status[20];
	main_in_pads_n_d21 <= main_in_status[21];
	main_in_pads_n_d22 <= main_in_status[22];
	main_in_pads_n_d23 <= main_in_status[23];
	main_in_pads_n_d24 <= main_in_status[24];
	main_in_pads_n_d25 <= main_in_status[25];
	main_in_pads_n_d26 <= main_in_status[26];
	main_in_pads_n_d27 <= main_in_status[27];
	main_in_pads_n_d28 <= main_in_status[28];
	main_in_pads_n_d29 <= main_in_status[29];
	main_in_pads_n_d30 <= main_in_status[30];
	main_in_pads_n_d31 <= main_in_status[31];
	if (main_eventsourceprocess0_clear) begin
		main_eventsourceprocess0_pending <= 1'd0;
	end
	main_eventsourceprocess0_trigger_d <= main_eventsourceprocess0_trigger;
	if ((main_eventsourceprocess0_trigger & (~main_eventsourceprocess0_trigger_d))) begin
		main_eventsourceprocess0_pending <= 1'd1;
	end
	if (main_eventsourceprocess1_clear) begin
		main_eventsourceprocess1_pending <= 1'd0;
	end
	main_eventsourceprocess1_trigger_d <= main_eventsourceprocess1_trigger;
	if ((main_eventsourceprocess1_trigger & (~main_eventsourceprocess1_trigger_d))) begin
		main_eventsourceprocess1_pending <= 1'd1;
	end
	if (main_eventsourceprocess2_clear) begin
		main_eventsourceprocess2_pending <= 1'd0;
	end
	main_eventsourceprocess2_trigger_d <= main_eventsourceprocess2_trigger;
	if ((main_eventsourceprocess2_trigger & (~main_eventsourceprocess2_trigger_d))) begin
		main_eventsourceprocess2_pending <= 1'd1;
	end
	if (main_eventsourceprocess3_clear) begin
		main_eventsourceprocess3_pending <= 1'd0;
	end
	main_eventsourceprocess3_trigger_d <= main_eventsourceprocess3_trigger;
	if ((main_eventsourceprocess3_trigger & (~main_eventsourceprocess3_trigger_d))) begin
		main_eventsourceprocess3_pending <= 1'd1;
	end
	if (main_eventsourceprocess4_clear) begin
		main_eventsourceprocess4_pending <= 1'd0;
	end
	main_eventsourceprocess4_trigger_d <= main_eventsourceprocess4_trigger;
	if ((main_eventsourceprocess4_trigger & (~main_eventsourceprocess4_trigger_d))) begin
		main_eventsourceprocess4_pending <= 1'd1;
	end
	if (main_eventsourceprocess5_clear) begin
		main_eventsourceprocess5_pending <= 1'd0;
	end
	main_eventsourceprocess5_trigger_d <= main_eventsourceprocess5_trigger;
	if ((main_eventsourceprocess5_trigger & (~main_eventsourceprocess5_trigger_d))) begin
		main_eventsourceprocess5_pending <= 1'd1;
	end
	if (main_eventsourceprocess6_clear) begin
		main_eventsourceprocess6_pending <= 1'd0;
	end
	main_eventsourceprocess6_trigger_d <= main_eventsourceprocess6_trigger;
	if ((main_eventsourceprocess6_trigger & (~main_eventsourceprocess6_trigger_d))) begin
		main_eventsourceprocess6_pending <= 1'd1;
	end
	if (main_eventsourceprocess7_clear) begin
		main_eventsourceprocess7_pending <= 1'd0;
	end
	main_eventsourceprocess7_trigger_d <= main_eventsourceprocess7_trigger;
	if ((main_eventsourceprocess7_trigger & (~main_eventsourceprocess7_trigger_d))) begin
		main_eventsourceprocess7_pending <= 1'd1;
	end
	if (main_eventsourceprocess8_clear) begin
		main_eventsourceprocess8_pending <= 1'd0;
	end
	main_eventsourceprocess8_trigger_d <= main_eventsourceprocess8_trigger;
	if ((main_eventsourceprocess8_trigger & (~main_eventsourceprocess8_trigger_d))) begin
		main_eventsourceprocess8_pending <= 1'd1;
	end
	if (main_eventsourceprocess9_clear) begin
		main_eventsourceprocess9_pending <= 1'd0;
	end
	main_eventsourceprocess9_trigger_d <= main_eventsourceprocess9_trigger;
	if ((main_eventsourceprocess9_trigger & (~main_eventsourceprocess9_trigger_d))) begin
		main_eventsourceprocess9_pending <= 1'd1;
	end
	if (main_eventsourceprocess10_clear) begin
		main_eventsourceprocess10_pending <= 1'd0;
	end
	main_eventsourceprocess10_trigger_d <= main_eventsourceprocess10_trigger;
	if ((main_eventsourceprocess10_trigger & (~main_eventsourceprocess10_trigger_d))) begin
		main_eventsourceprocess10_pending <= 1'd1;
	end
	if (main_eventsourceprocess11_clear) begin
		main_eventsourceprocess11_pending <= 1'd0;
	end
	main_eventsourceprocess11_trigger_d <= main_eventsourceprocess11_trigger;
	if ((main_eventsourceprocess11_trigger & (~main_eventsourceprocess11_trigger_d))) begin
		main_eventsourceprocess11_pending <= 1'd1;
	end
	if (main_eventsourceprocess12_clear) begin
		main_eventsourceprocess12_pending <= 1'd0;
	end
	main_eventsourceprocess12_trigger_d <= main_eventsourceprocess12_trigger;
	if ((main_eventsourceprocess12_trigger & (~main_eventsourceprocess12_trigger_d))) begin
		main_eventsourceprocess12_pending <= 1'd1;
	end
	if (main_eventsourceprocess13_clear) begin
		main_eventsourceprocess13_pending <= 1'd0;
	end
	main_eventsourceprocess13_trigger_d <= main_eventsourceprocess13_trigger;
	if ((main_eventsourceprocess13_trigger & (~main_eventsourceprocess13_trigger_d))) begin
		main_eventsourceprocess13_pending <= 1'd1;
	end
	if (main_eventsourceprocess14_clear) begin
		main_eventsourceprocess14_pending <= 1'd0;
	end
	main_eventsourceprocess14_trigger_d <= main_eventsourceprocess14_trigger;
	if ((main_eventsourceprocess14_trigger & (~main_eventsourceprocess14_trigger_d))) begin
		main_eventsourceprocess14_pending <= 1'd1;
	end
	if (main_eventsourceprocess15_clear) begin
		main_eventsourceprocess15_pending <= 1'd0;
	end
	main_eventsourceprocess15_trigger_d <= main_eventsourceprocess15_trigger;
	if ((main_eventsourceprocess15_trigger & (~main_eventsourceprocess15_trigger_d))) begin
		main_eventsourceprocess15_pending <= 1'd1;
	end
	if (main_eventsourceprocess16_clear) begin
		main_eventsourceprocess16_pending <= 1'd0;
	end
	main_eventsourceprocess16_trigger_d <= main_eventsourceprocess16_trigger;
	if ((main_eventsourceprocess16_trigger & (~main_eventsourceprocess16_trigger_d))) begin
		main_eventsourceprocess16_pending <= 1'd1;
	end
	if (main_eventsourceprocess17_clear) begin
		main_eventsourceprocess17_pending <= 1'd0;
	end
	main_eventsourceprocess17_trigger_d <= main_eventsourceprocess17_trigger;
	if ((main_eventsourceprocess17_trigger & (~main_eventsourceprocess17_trigger_d))) begin
		main_eventsourceprocess17_pending <= 1'd1;
	end
	if (main_eventsourceprocess18_clear) begin
		main_eventsourceprocess18_pending <= 1'd0;
	end
	main_eventsourceprocess18_trigger_d <= main_eventsourceprocess18_trigger;
	if ((main_eventsourceprocess18_trigger & (~main_eventsourceprocess18_trigger_d))) begin
		main_eventsourceprocess18_pending <= 1'd1;
	end
	if (main_eventsourceprocess19_clear) begin
		main_eventsourceprocess19_pending <= 1'd0;
	end
	main_eventsourceprocess19_trigger_d <= main_eventsourceprocess19_trigger;
	if ((main_eventsourceprocess19_trigger & (~main_eventsourceprocess19_trigger_d))) begin
		main_eventsourceprocess19_pending <= 1'd1;
	end
	if (main_eventsourceprocess20_clear) begin
		main_eventsourceprocess20_pending <= 1'd0;
	end
	main_eventsourceprocess20_trigger_d <= main_eventsourceprocess20_trigger;
	if ((main_eventsourceprocess20_trigger & (~main_eventsourceprocess20_trigger_d))) begin
		main_eventsourceprocess20_pending <= 1'd1;
	end
	if (main_eventsourceprocess21_clear) begin
		main_eventsourceprocess21_pending <= 1'd0;
	end
	main_eventsourceprocess21_trigger_d <= main_eventsourceprocess21_trigger;
	if ((main_eventsourceprocess21_trigger & (~main_eventsourceprocess21_trigger_d))) begin
		main_eventsourceprocess21_pending <= 1'd1;
	end
	if (main_eventsourceprocess22_clear) begin
		main_eventsourceprocess22_pending <= 1'd0;
	end
	main_eventsourceprocess22_trigger_d <= main_eventsourceprocess22_trigger;
	if ((main_eventsourceprocess22_trigger & (~main_eventsourceprocess22_trigger_d))) begin
		main_eventsourceprocess22_pending <= 1'd1;
	end
	if (main_eventsourceprocess23_clear) begin
		main_eventsourceprocess23_pending <= 1'd0;
	end
	main_eventsourceprocess23_trigger_d <= main_eventsourceprocess23_trigger;
	if ((main_eventsourceprocess23_trigger & (~main_eventsourceprocess23_trigger_d))) begin
		main_eventsourceprocess23_pending <= 1'd1;
	end
	if (main_eventsourceprocess24_clear) begin
		main_eventsourceprocess24_pending <= 1'd0;
	end
	main_eventsourceprocess24_trigger_d <= main_eventsourceprocess24_trigger;
	if ((main_eventsourceprocess24_trigger & (~main_eventsourceprocess24_trigger_d))) begin
		main_eventsourceprocess24_pending <= 1'd1;
	end
	if (main_eventsourceprocess25_clear) begin
		main_eventsourceprocess25_pending <= 1'd0;
	end
	main_eventsourceprocess25_trigger_d <= main_eventsourceprocess25_trigger;
	if ((main_eventsourceprocess25_trigger & (~main_eventsourceprocess25_trigger_d))) begin
		main_eventsourceprocess25_pending <= 1'd1;
	end
	if (main_eventsourceprocess26_clear) begin
		main_eventsourceprocess26_pending <= 1'd0;
	end
	main_eventsourceprocess26_trigger_d <= main_eventsourceprocess26_trigger;
	if ((main_eventsourceprocess26_trigger & (~main_eventsourceprocess26_trigger_d))) begin
		main_eventsourceprocess26_pending <= 1'd1;
	end
	if (main_eventsourceprocess27_clear) begin
		main_eventsourceprocess27_pending <= 1'd0;
	end
	main_eventsourceprocess27_trigger_d <= main_eventsourceprocess27_trigger;
	if ((main_eventsourceprocess27_trigger & (~main_eventsourceprocess27_trigger_d))) begin
		main_eventsourceprocess27_pending <= 1'd1;
	end
	if (main_eventsourceprocess28_clear) begin
		main_eventsourceprocess28_pending <= 1'd0;
	end
	main_eventsourceprocess28_trigger_d <= main_eventsourceprocess28_trigger;
	if ((main_eventsourceprocess28_trigger & (~main_eventsourceprocess28_trigger_d))) begin
		main_eventsourceprocess28_pending <= 1'd1;
	end
	if (main_eventsourceprocess29_clear) begin
		main_eventsourceprocess29_pending <= 1'd0;
	end
	main_eventsourceprocess29_trigger_d <= main_eventsourceprocess29_trigger;
	if ((main_eventsourceprocess29_trigger & (~main_eventsourceprocess29_trigger_d))) begin
		main_eventsourceprocess29_pending <= 1'd1;
	end
	if (main_eventsourceprocess30_clear) begin
		main_eventsourceprocess30_pending <= 1'd0;
	end
	main_eventsourceprocess30_trigger_d <= main_eventsourceprocess30_trigger;
	if ((main_eventsourceprocess30_trigger & (~main_eventsourceprocess30_trigger_d))) begin
		main_eventsourceprocess30_pending <= 1'd1;
	end
	if (main_eventsourceprocess31_clear) begin
		main_eventsourceprocess31_pending <= 1'd0;
	end
	main_eventsourceprocess31_trigger_d <= main_eventsourceprocess31_trigger;
	if ((main_eventsourceprocess31_trigger & (~main_eventsourceprocess31_trigger_d))) begin
		main_eventsourceprocess31_pending <= 1'd1;
	end
	builder_state <= builder_next_state;
	builder_slave_sel_r <= builder_slave_sel;
	if (builder_wait) begin
		if ((~builder_done)) begin
			builder_count <= (builder_count - 1'd1);
		end
	end else begin
		builder_count <= 20'd1000000;
	end
	builder_csr_bankarray_interface0_bank_bus_dat_r <= 1'd0;
	if (builder_csr_bankarray_csrbank0_sel) begin
		case (builder_csr_bankarray_interface0_bank_bus_adr[8:0])
			1'd0: begin
				builder_csr_bankarray_interface0_bank_bus_dat_r <= builder_csr_bankarray_csrbank0_reset0_w;
			end
			1'd1: begin
				builder_csr_bankarray_interface0_bank_bus_dat_r <= builder_csr_bankarray_csrbank0_scratch0_w;
			end
			2'd2: begin
				builder_csr_bankarray_interface0_bank_bus_dat_r <= builder_csr_bankarray_csrbank0_bus_errors_w;
			end
		endcase
	end
	if (builder_csr_bankarray_csrbank0_reset0_re) begin
		main_reset_storage[1:0] <= builder_csr_bankarray_csrbank0_reset0_r;
	end
	main_reset_re <= builder_csr_bankarray_csrbank0_reset0_re;
	if (builder_csr_bankarray_csrbank0_scratch0_re) begin
		main_scratch_storage[31:0] <= builder_csr_bankarray_csrbank0_scratch0_r;
	end
	main_scratch_re <= builder_csr_bankarray_csrbank0_scratch0_re;
	main_bus_errors_re <= builder_csr_bankarray_csrbank0_bus_errors_re;
	builder_csr_bankarray_interface1_bank_bus_dat_r <= 1'd0;
	if (builder_csr_bankarray_csrbank1_sel) begin
		case (builder_csr_bankarray_interface1_bank_bus_adr[8:0])
			1'd0: begin
				builder_csr_bankarray_interface1_bank_bus_dat_r <= builder_csr_bankarray_csrbank1_oe0_w;
			end
			1'd1: begin
				builder_csr_bankarray_interface1_bank_bus_dat_r <= builder_csr_bankarray_csrbank1_in_w;
			end
			2'd2: begin
				builder_csr_bankarray_interface1_bank_bus_dat_r <= builder_csr_bankarray_csrbank1_out0_w;
			end
			2'd3: begin
				builder_csr_bankarray_interface1_bank_bus_dat_r <= builder_csr_bankarray_csrbank1_mode0_w;
			end
			3'd4: begin
				builder_csr_bankarray_interface1_bank_bus_dat_r <= builder_csr_bankarray_csrbank1_edge0_w;
			end
			3'd5: begin
				builder_csr_bankarray_interface1_bank_bus_dat_r <= builder_csr_bankarray_csrbank1_ev_status_w;
			end
			3'd6: begin
				builder_csr_bankarray_interface1_bank_bus_dat_r <= builder_csr_bankarray_csrbank1_ev_pending_w;
			end
			3'd7: begin
				builder_csr_bankarray_interface1_bank_bus_dat_r <= builder_csr_bankarray_csrbank1_ev_enable0_w;
			end
		endcase
	end
	if (builder_csr_bankarray_csrbank1_oe0_re) begin
		main_oe_storage[31:0] <= builder_csr_bankarray_csrbank1_oe0_r;
	end
	main_oe_re <= builder_csr_bankarray_csrbank1_oe0_re;
	main_in_re <= builder_csr_bankarray_csrbank1_in_re;
	if (builder_csr_bankarray_csrbank1_out0_re) begin
		main_out_storage[31:0] <= builder_csr_bankarray_csrbank1_out0_r;
	end
	main_out_re <= builder_csr_bankarray_csrbank1_out0_re;
	if (builder_csr_bankarray_csrbank1_mode0_re) begin
		main_mode_storage[31:0] <= builder_csr_bankarray_csrbank1_mode0_r;
	end
	main_mode_re <= builder_csr_bankarray_csrbank1_mode0_re;
	if (builder_csr_bankarray_csrbank1_edge0_re) begin
		main_edge_storage[31:0] <= builder_csr_bankarray_csrbank1_edge0_r;
	end
	main_edge_re <= builder_csr_bankarray_csrbank1_edge0_re;
	builder_status_re <= builder_csr_bankarray_csrbank1_ev_status_re;
	if (builder_csr_bankarray_csrbank1_ev_pending_re) begin
		builder_pending_r[31:0] <= builder_csr_bankarray_csrbank1_ev_pending_r;
	end
	builder_pending_re <= builder_csr_bankarray_csrbank1_ev_pending_re;
	if (builder_csr_bankarray_csrbank1_ev_enable0_re) begin
		builder_enable_storage[31:0] <= builder_csr_bankarray_csrbank1_ev_enable0_r;
	end
	builder_enable_re <= builder_csr_bankarray_csrbank1_ev_enable0_re;
	builder_csr_bankarray_sel_r <= builder_csr_bankarray_sel;
	builder_csr_bankarray_interface2_bank_bus_dat_r <= 1'd0;
	if (builder_csr_bankarray_csrbank2_sel) begin
		case (builder_csr_bankarray_interface2_bank_bus_adr[8:0])
			1'd0: begin
				builder_csr_bankarray_interface2_bank_bus_dat_r <= builder_csr_bankarray_csrbank2_load0_w;
			end
			1'd1: begin
				builder_csr_bankarray_interface2_bank_bus_dat_r <= builder_csr_bankarray_csrbank2_reload0_w;
			end
			2'd2: begin
				builder_csr_bankarray_interface2_bank_bus_dat_r <= builder_csr_bankarray_csrbank2_en0_w;
			end
			2'd3: begin
				builder_csr_bankarray_interface2_bank_bus_dat_r <= builder_csr_bankarray_csrbank2_update_value0_w;
			end
			3'd4: begin
				builder_csr_bankarray_interface2_bank_bus_dat_r <= builder_csr_bankarray_csrbank2_value_w;
			end
			3'd5: begin
				builder_csr_bankarray_interface2_bank_bus_dat_r <= builder_csr_bankarray_csrbank2_ev_status_w;
			end
			3'd6: begin
				builder_csr_bankarray_interface2_bank_bus_dat_r <= builder_csr_bankarray_csrbank2_ev_pending_w;
			end
			3'd7: begin
				builder_csr_bankarray_interface2_bank_bus_dat_r <= builder_csr_bankarray_csrbank2_ev_enable0_w;
			end
		endcase
	end
	if (builder_csr_bankarray_csrbank2_load0_re) begin
		main_timer_load_storage[31:0] <= builder_csr_bankarray_csrbank2_load0_r;
	end
	main_timer_load_re <= builder_csr_bankarray_csrbank2_load0_re;
	if (builder_csr_bankarray_csrbank2_reload0_re) begin
		main_timer_reload_storage[31:0] <= builder_csr_bankarray_csrbank2_reload0_r;
	end
	main_timer_reload_re <= builder_csr_bankarray_csrbank2_reload0_re;
	if (builder_csr_bankarray_csrbank2_en0_re) begin
		main_timer_en_storage <= builder_csr_bankarray_csrbank2_en0_r;
	end
	main_timer_en_re <= builder_csr_bankarray_csrbank2_en0_re;
	if (builder_csr_bankarray_csrbank2_update_value0_re) begin
		main_timer_update_value_storage <= builder_csr_bankarray_csrbank2_update_value0_r;
	end
	main_timer_update_value_re <= builder_csr_bankarray_csrbank2_update_value0_re;
	main_timer_value_re <= builder_csr_bankarray_csrbank2_value_re;
	main_timer_status_re <= builder_csr_bankarray_csrbank2_ev_status_re;
	if (builder_csr_bankarray_csrbank2_ev_pending_re) begin
		main_timer_pending_r <= builder_csr_bankarray_csrbank2_ev_pending_r;
	end
	main_timer_pending_re <= builder_csr_bankarray_csrbank2_ev_pending_re;
	if (builder_csr_bankarray_csrbank2_ev_enable0_re) begin
		main_timer_enable_storage <= builder_csr_bankarray_csrbank2_ev_enable0_r;
	end
	main_timer_enable_re <= builder_csr_bankarray_csrbank2_ev_enable0_re;
	builder_csr_bankarray_interface3_bank_bus_dat_r <= 1'd0;
	if (builder_csr_bankarray_csrbank3_sel) begin
		case (builder_csr_bankarray_interface3_bank_bus_adr[8:0])
			1'd0: begin
				builder_csr_bankarray_interface3_bank_bus_dat_r <= main_uart_rxtx_w;
			end
			1'd1: begin
				builder_csr_bankarray_interface3_bank_bus_dat_r <= builder_csr_bankarray_csrbank3_txfull_w;
			end
			2'd2: begin
				builder_csr_bankarray_interface3_bank_bus_dat_r <= builder_csr_bankarray_csrbank3_rxempty_w;
			end
			2'd3: begin
				builder_csr_bankarray_interface3_bank_bus_dat_r <= builder_csr_bankarray_csrbank3_ev_status_w;
			end
			3'd4: begin
				builder_csr_bankarray_interface3_bank_bus_dat_r <= builder_csr_bankarray_csrbank3_ev_pending_w;
			end
			3'd5: begin
				builder_csr_bankarray_interface3_bank_bus_dat_r <= builder_csr_bankarray_csrbank3_ev_enable0_w;
			end
			3'd6: begin
				builder_csr_bankarray_interface3_bank_bus_dat_r <= builder_csr_bankarray_csrbank3_txempty_w;
			end
			3'd7: begin
				builder_csr_bankarray_interface3_bank_bus_dat_r <= builder_csr_bankarray_csrbank3_rxfull_w;
			end
		endcase
	end
	main_uart_txfull_re <= builder_csr_bankarray_csrbank3_txfull_re;
	main_uart_rxempty_re <= builder_csr_bankarray_csrbank3_rxempty_re;
	main_uart_status_re <= builder_csr_bankarray_csrbank3_ev_status_re;
	if (builder_csr_bankarray_csrbank3_ev_pending_re) begin
		main_uart_pending_r[1:0] <= builder_csr_bankarray_csrbank3_ev_pending_r;
	end
	main_uart_pending_re <= builder_csr_bankarray_csrbank3_ev_pending_re;
	if (builder_csr_bankarray_csrbank3_ev_enable0_re) begin
		main_uart_enable_storage[1:0] <= builder_csr_bankarray_csrbank3_ev_enable0_r;
	end
	main_uart_enable_re <= builder_csr_bankarray_csrbank3_ev_enable0_re;
	main_uart_txempty_re <= builder_csr_bankarray_csrbank3_txempty_re;
	main_uart_rxfull_re <= builder_csr_bankarray_csrbank3_rxfull_re;
	if (sys_rst) begin
		main_reset_storage <= 2'd0;
		main_reset_re <= 1'd0;
		main_scratch_storage <= 32'd305419896;
		main_scratch_re <= 1'd0;
		main_bus_errors_re <= 1'd0;
		main_bus_errors <= 32'd0;
		main_simsoc_ram_bus_ack <= 1'd0;
		main_ram_bus_ram_bus_ack <= 1'd0;
		main_uart_txfull_re <= 1'd0;
		main_uart_rxempty_re <= 1'd0;
		main_uart_tx_pending <= 1'd0;
		main_uart_tx_trigger_d <= 1'd0;
		main_uart_rx_pending <= 1'd0;
		main_uart_rx_trigger_d <= 1'd0;
		main_uart_status_re <= 1'd0;
		main_uart_pending_re <= 1'd0;
		main_uart_pending_r <= 2'd0;
		main_uart_enable_storage <= 2'd0;
		main_uart_enable_re <= 1'd0;
		main_uart_txempty_re <= 1'd0;
		main_uart_rxfull_re <= 1'd0;
		main_uart_tx_fifo_readable <= 1'd0;
		main_uart_tx_fifo_level0 <= 5'd0;
		main_uart_tx_fifo_produce <= 4'd0;
		main_uart_tx_fifo_consume <= 4'd0;
		main_uart_rx_fifo_readable <= 1'd0;
		main_uart_rx_fifo_level0 <= 5'd0;
		main_uart_rx_fifo_produce <= 4'd0;
		main_uart_rx_fifo_consume <= 4'd0;
		main_timer_load_storage <= 32'd0;
		main_timer_load_re <= 1'd0;
		main_timer_reload_storage <= 32'd0;
		main_timer_reload_re <= 1'd0;
		main_timer_en_storage <= 1'd0;
		main_timer_en_re <= 1'd0;
		main_timer_update_value_storage <= 1'd0;
		main_timer_update_value_re <= 1'd0;
		main_timer_value_status <= 32'd0;
		main_timer_value_re <= 1'd0;
		main_timer_zero_pending <= 1'd0;
		main_timer_zero_trigger_d <= 1'd0;
		main_timer_status_re <= 1'd0;
		main_timer_pending_re <= 1'd0;
		main_timer_pending_r <= 1'd0;
		main_timer_enable_storage <= 1'd0;
		main_timer_enable_re <= 1'd0;
		main_timer_value <= 32'd0;
		main_oe_storage <= 32'd0;
		main_oe_re <= 1'd0;
		main_in_re <= 1'd0;
		main_out_storage <= 32'd0;
		main_out_re <= 1'd0;
		main_mode_storage <= 32'd0;
		main_mode_re <= 1'd0;
		main_edge_storage <= 32'd0;
		main_edge_re <= 1'd0;
		main_in_pads_n_d0 <= 1'd0;
		main_eventsourceprocess0_pending <= 1'd0;
		main_eventsourceprocess0_trigger_d <= 1'd0;
		main_in_pads_n_d1 <= 1'd0;
		main_eventsourceprocess1_pending <= 1'd0;
		main_eventsourceprocess1_trigger_d <= 1'd0;
		main_in_pads_n_d2 <= 1'd0;
		main_eventsourceprocess2_pending <= 1'd0;
		main_eventsourceprocess2_trigger_d <= 1'd0;
		main_in_pads_n_d3 <= 1'd0;
		main_eventsourceprocess3_pending <= 1'd0;
		main_eventsourceprocess3_trigger_d <= 1'd0;
		main_in_pads_n_d4 <= 1'd0;
		main_eventsourceprocess4_pending <= 1'd0;
		main_eventsourceprocess4_trigger_d <= 1'd0;
		main_in_pads_n_d5 <= 1'd0;
		main_eventsourceprocess5_pending <= 1'd0;
		main_eventsourceprocess5_trigger_d <= 1'd0;
		main_in_pads_n_d6 <= 1'd0;
		main_eventsourceprocess6_pending <= 1'd0;
		main_eventsourceprocess6_trigger_d <= 1'd0;
		main_in_pads_n_d7 <= 1'd0;
		main_eventsourceprocess7_pending <= 1'd0;
		main_eventsourceprocess7_trigger_d <= 1'd0;
		main_in_pads_n_d8 <= 1'd0;
		main_eventsourceprocess8_pending <= 1'd0;
		main_eventsourceprocess8_trigger_d <= 1'd0;
		main_in_pads_n_d9 <= 1'd0;
		main_eventsourceprocess9_pending <= 1'd0;
		main_eventsourceprocess9_trigger_d <= 1'd0;
		main_in_pads_n_d10 <= 1'd0;
		main_eventsourceprocess10_pending <= 1'd0;
		main_eventsourceprocess10_trigger_d <= 1'd0;
		main_in_pads_n_d11 <= 1'd0;
		main_eventsourceprocess11_pending <= 1'd0;
		main_eventsourceprocess11_trigger_d <= 1'd0;
		main_in_pads_n_d12 <= 1'd0;
		main_eventsourceprocess12_pending <= 1'd0;
		main_eventsourceprocess12_trigger_d <= 1'd0;
		main_in_pads_n_d13 <= 1'd0;
		main_eventsourceprocess13_pending <= 1'd0;
		main_eventsourceprocess13_trigger_d <= 1'd0;
		main_in_pads_n_d14 <= 1'd0;
		main_eventsourceprocess14_pending <= 1'd0;
		main_eventsourceprocess14_trigger_d <= 1'd0;
		main_in_pads_n_d15 <= 1'd0;
		main_eventsourceprocess15_pending <= 1'd0;
		main_eventsourceprocess15_trigger_d <= 1'd0;
		main_in_pads_n_d16 <= 1'd0;
		main_eventsourceprocess16_pending <= 1'd0;
		main_eventsourceprocess16_trigger_d <= 1'd0;
		main_in_pads_n_d17 <= 1'd0;
		main_eventsourceprocess17_pending <= 1'd0;
		main_eventsourceprocess17_trigger_d <= 1'd0;
		main_in_pads_n_d18 <= 1'd0;
		main_eventsourceprocess18_pending <= 1'd0;
		main_eventsourceprocess18_trigger_d <= 1'd0;
		main_in_pads_n_d19 <= 1'd0;
		main_eventsourceprocess19_pending <= 1'd0;
		main_eventsourceprocess19_trigger_d <= 1'd0;
		main_in_pads_n_d20 <= 1'd0;
		main_eventsourceprocess20_pending <= 1'd0;
		main_eventsourceprocess20_trigger_d <= 1'd0;
		main_in_pads_n_d21 <= 1'd0;
		main_eventsourceprocess21_pending <= 1'd0;
		main_eventsourceprocess21_trigger_d <= 1'd0;
		main_in_pads_n_d22 <= 1'd0;
		main_eventsourceprocess22_pending <= 1'd0;
		main_eventsourceprocess22_trigger_d <= 1'd0;
		main_in_pads_n_d23 <= 1'd0;
		main_eventsourceprocess23_pending <= 1'd0;
		main_eventsourceprocess23_trigger_d <= 1'd0;
		main_in_pads_n_d24 <= 1'd0;
		main_eventsourceprocess24_pending <= 1'd0;
		main_eventsourceprocess24_trigger_d <= 1'd0;
		main_in_pads_n_d25 <= 1'd0;
		main_eventsourceprocess25_pending <= 1'd0;
		main_eventsourceprocess25_trigger_d <= 1'd0;
		main_in_pads_n_d26 <= 1'd0;
		main_eventsourceprocess26_pending <= 1'd0;
		main_eventsourceprocess26_trigger_d <= 1'd0;
		main_in_pads_n_d27 <= 1'd0;
		main_eventsourceprocess27_pending <= 1'd0;
		main_eventsourceprocess27_trigger_d <= 1'd0;
		main_in_pads_n_d28 <= 1'd0;
		main_eventsourceprocess28_pending <= 1'd0;
		main_eventsourceprocess28_trigger_d <= 1'd0;
		main_in_pads_n_d29 <= 1'd0;
		main_eventsourceprocess29_pending <= 1'd0;
		main_eventsourceprocess29_trigger_d <= 1'd0;
		main_in_pads_n_d30 <= 1'd0;
		main_eventsourceprocess30_pending <= 1'd0;
		main_eventsourceprocess30_trigger_d <= 1'd0;
		main_in_pads_n_d31 <= 1'd0;
		main_eventsourceprocess31_pending <= 1'd0;
		main_eventsourceprocess31_trigger_d <= 1'd0;
		builder_status_re <= 1'd0;
		builder_pending_re <= 1'd0;
		builder_pending_r <= 32'd0;
		builder_enable_storage <= 32'd0;
		builder_enable_re <= 1'd0;
		builder_slave_sel_r <= 3'd0;
		builder_count <= 20'd1000000;
		builder_csr_bankarray_sel_r <= 1'd0;
		builder_state <= 1'd0;
	end
	builder_multiregimpl0_regs0 <= gpio_i[0];
	builder_multiregimpl0_regs1 <= builder_multiregimpl0_regs0;
	builder_multiregimpl1_regs0 <= gpio_i[1];
	builder_multiregimpl1_regs1 <= builder_multiregimpl1_regs0;
	builder_multiregimpl2_regs0 <= gpio_i[2];
	builder_multiregimpl2_regs1 <= builder_multiregimpl2_regs0;
	builder_multiregimpl3_regs0 <= gpio_i[3];
	builder_multiregimpl3_regs1 <= builder_multiregimpl3_regs0;
	builder_multiregimpl4_regs0 <= gpio_i[4];
	builder_multiregimpl4_regs1 <= builder_multiregimpl4_regs0;
	builder_multiregimpl5_regs0 <= gpio_i[5];
	builder_multiregimpl5_regs1 <= builder_multiregimpl5_regs0;
	builder_multiregimpl6_regs0 <= gpio_i[6];
	builder_multiregimpl6_regs1 <= builder_multiregimpl6_regs0;
	builder_multiregimpl7_regs0 <= gpio_i[7];
	builder_multiregimpl7_regs1 <= builder_multiregimpl7_regs0;
	builder_multiregimpl8_regs0 <= gpio_i[8];
	builder_multiregimpl8_regs1 <= builder_multiregimpl8_regs0;
	builder_multiregimpl9_regs0 <= gpio_i[9];
	builder_multiregimpl9_regs1 <= builder_multiregimpl9_regs0;
	builder_multiregimpl10_regs0 <= gpio_i[10];
	builder_multiregimpl10_regs1 <= builder_multiregimpl10_regs0;
	builder_multiregimpl11_regs0 <= gpio_i[11];
	builder_multiregimpl11_regs1 <= builder_multiregimpl11_regs0;
	builder_multiregimpl12_regs0 <= gpio_i[12];
	builder_multiregimpl12_regs1 <= builder_multiregimpl12_regs0;
	builder_multiregimpl13_regs0 <= gpio_i[13];
	builder_multiregimpl13_regs1 <= builder_multiregimpl13_regs0;
	builder_multiregimpl14_regs0 <= gpio_i[14];
	builder_multiregimpl14_regs1 <= builder_multiregimpl14_regs0;
	builder_multiregimpl15_regs0 <= gpio_i[15];
	builder_multiregimpl15_regs1 <= builder_multiregimpl15_regs0;
	builder_multiregimpl16_regs0 <= gpio_i[16];
	builder_multiregimpl16_regs1 <= builder_multiregimpl16_regs0;
	builder_multiregimpl17_regs0 <= gpio_i[17];
	builder_multiregimpl17_regs1 <= builder_multiregimpl17_regs0;
	builder_multiregimpl18_regs0 <= gpio_i[18];
	builder_multiregimpl18_regs1 <= builder_multiregimpl18_regs0;
	builder_multiregimpl19_regs0 <= gpio_i[19];
	builder_multiregimpl19_regs1 <= builder_multiregimpl19_regs0;
	builder_multiregimpl20_regs0 <= gpio_i[20];
	builder_multiregimpl20_regs1 <= builder_multiregimpl20_regs0;
	builder_multiregimpl21_regs0 <= gpio_i[21];
	builder_multiregimpl21_regs1 <= builder_multiregimpl21_regs0;
	builder_multiregimpl22_regs0 <= gpio_i[22];
	builder_multiregimpl22_regs1 <= builder_multiregimpl22_regs0;
	builder_multiregimpl23_regs0 <= gpio_i[23];
	builder_multiregimpl23_regs1 <= builder_multiregimpl23_regs0;
	builder_multiregimpl24_regs0 <= gpio_i[24];
	builder_multiregimpl24_regs1 <= builder_multiregimpl24_regs0;
	builder_multiregimpl25_regs0 <= gpio_i[25];
	builder_multiregimpl25_regs1 <= builder_multiregimpl25_regs0;
	builder_multiregimpl26_regs0 <= gpio_i[26];
	builder_multiregimpl26_regs1 <= builder_multiregimpl26_regs0;
	builder_multiregimpl27_regs0 <= gpio_i[27];
	builder_multiregimpl27_regs1 <= builder_multiregimpl27_regs0;
	builder_multiregimpl28_regs0 <= gpio_i[28];
	builder_multiregimpl28_regs1 <= builder_multiregimpl28_regs0;
	builder_multiregimpl29_regs0 <= gpio_i[29];
	builder_multiregimpl29_regs1 <= builder_multiregimpl29_regs0;
	builder_multiregimpl30_regs0 <= gpio_i[30];
	builder_multiregimpl30_regs1 <= builder_multiregimpl30_regs0;
	builder_multiregimpl31_regs0 <= gpio_i[31];
	builder_multiregimpl31_regs1 <= builder_multiregimpl31_regs0;
end


//------------------------------------------------------------------------------
// Specialized Logic
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
// Memory mem: 5392-words x 32-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: ---- | 
reg [31:0] mem[0:5391];
initial begin
	$readmemh("mem.init", mem);
end
reg [31:0] mem_dat0;
always @(posedge sys_clk_1) begin
	mem_dat0 <= mem[main_simsoc_adr];
end
assign main_simsoc_dat_r = mem_dat0;


//------------------------------------------------------------------------------
// Memory mem_1: 875-words x 32-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [31:0] mem_1[0:874];
initial begin
	$readmemh("mem_1.init", mem_1);
end
reg [9:0] mem_1_adr0;
always @(posedge sys_clk_1) begin
	if (main_ram_we[0])
		mem_1[main_ram_adr][7:0] <= main_ram_dat_w[7:0];
	if (main_ram_we[1])
		mem_1[main_ram_adr][15:8] <= main_ram_dat_w[15:8];
	if (main_ram_we[2])
		mem_1[main_ram_adr][23:16] <= main_ram_dat_w[23:16];
	if (main_ram_we[3])
		mem_1[main_ram_adr][31:24] <= main_ram_dat_w[31:24];
	mem_1_adr0 <= main_ram_adr;
end
assign main_ram_dat_r = mem_1[mem_1_adr0];


//------------------------------------------------------------------------------
// Memory mem_2: 37-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: ---- | 
reg [7:0] mem_2[0:36];
initial begin
	$readmemh("mem_2.init", mem_2);
end
reg [5:0] mem_2_adr0;
always @(posedge sys_clk_1) begin
	mem_2_adr0 <= builder_csr_bankarray_adr;
end
assign builder_csr_bankarray_dat_r = mem_2[mem_2_adr0];


//------------------------------------------------------------------------------
// Memory storage: 16-words x 10-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 10 
// Port 1 | Read: Sync  | Write: ---- | 
reg [9:0] storage[0:15];
reg [9:0] storage_dat0;
reg [9:0] storage_dat1;
always @(posedge sys_clk_1) begin
	if (main_uart_tx_fifo_wrport_we)
		storage[main_uart_tx_fifo_wrport_adr] <= main_uart_tx_fifo_wrport_dat_w;
	storage_dat0 <= storage[main_uart_tx_fifo_wrport_adr];
end
always @(posedge sys_clk_1) begin
	if (main_uart_tx_fifo_rdport_re)
		storage_dat1 <= storage[main_uart_tx_fifo_rdport_adr];
end
assign main_uart_tx_fifo_wrport_dat_r = storage_dat0;
assign main_uart_tx_fifo_rdport_dat_r = storage_dat1;


//------------------------------------------------------------------------------
// Memory storage_1: 16-words x 10-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 10 
// Port 1 | Read: Sync  | Write: ---- | 
reg [9:0] storage_1[0:15];
reg [9:0] storage_1_dat0;
reg [9:0] storage_1_dat1;
always @(posedge sys_clk_1) begin
	if (main_uart_rx_fifo_wrport_we)
		storage_1[main_uart_rx_fifo_wrport_adr] <= main_uart_rx_fifo_wrport_dat_w;
	storage_1_dat0 <= storage_1[main_uart_rx_fifo_wrport_adr];
end
always @(posedge sys_clk_1) begin
	if (main_uart_rx_fifo_rdport_re)
		storage_1_dat1 <= storage_1[main_uart_rx_fifo_rdport_adr];
end
assign main_uart_rx_fifo_wrport_dat_r = storage_1_dat0;
assign main_uart_rx_fifo_rdport_dat_r = storage_1_dat1;


picorv32 #(
	.CATCH_ILLINSN(1'd1),
	.CATCH_MISALIGN(1'd1),
	.ENABLE_COUNTERS(1'd1),
	.ENABLE_COUNTERS64(1'd1),
	.ENABLE_DIV(1'd1),
	.ENABLE_FAST_MUL(1'd0),
	.ENABLE_IRQ(1'd1),
	.ENABLE_IRQ_QREGS(1'd1),
	.ENABLE_IRQ_TIMER(1'd1),
	.ENABLE_MUL(1'd1),
	.ENABLE_PCPI(1'd0),
	.ENABLE_REGS_16_31(1'd1),
	.ENABLE_REGS_DUALPORT(1'd1),
	.ENABLE_TRACE(1'd0),
	.LATCHED_IRQ(32'd4294967295),
	.LATCHED_MEM_RDATA(1'd0),
	.MASKED_IRQ(1'd0),
	.PROGADDR_IRQ(5'd16),
	.PROGADDR_RESET(1'd0),
	.STACKADDR(32'd4294967295),
	.TWO_CYCLE_ALU(1'd0),
	.TWO_CYCLE_COMPARE(1'd0),
	.TWO_STAGE_SHIFT(1'd1)
) picorv32 (
	.clk(sys_clk_1),
	.irq(main_picorv32_interrupt),
	.mem_rdata(main_picorv32_mem_rdata),
	.mem_ready(main_picorv32_mem_ready),
	.pcpi_rd(1'd0),
	.pcpi_ready(1'd0),
	.pcpi_wait(1'd0),
	.pcpi_wr(1'd0),
	.resetn((~(sys_rst | main_picorv32_reset))),
	.eoi(main_picorv329),
	.mem_addr(main_picorv32_mem_addr),
	.mem_instr(main_picorv32_mem_instr),
	.mem_la_addr(main_picorv322),
	.mem_la_read(main_picorv320),
	.mem_la_wdata(main_picorv323),
	.mem_la_write(main_picorv321),
	.mem_la_wstrb(main_picorv324),
	.mem_valid(main_picorv32_mem_valid),
	.mem_wdata(main_picorv32_mem_wdata),
	.mem_wstrb(main_picorv32_mem_wstrb),
	.pcpi_insn(main_picorv326),
	.pcpi_rs1(main_picorv327),
	.pcpi_rs2(main_picorv328),
	.pcpi_valid(main_picorv325),
	.trap(main_picorv32_trap)
);

endmodule

// -----------------------------------------------------------------------------
//  Auto-Generated by LiteX on 2022-02-03 15:11:03.
//------------------------------------------------------------------------------
