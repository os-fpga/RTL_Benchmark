=== Generated schedule for mkBRAMFeeder ===

Method schedule
---------------
Method: ppcMessageInput_put
Ready signal: ppcMesgQ.i_notFull && ppcMesgQ.notFull
Conflict-free: bramInitiatorWires_bramCLK,
	       bramInitiatorWires_bramRST,
	       bramInitiatorWires_bramAddr,
	       bramInitiatorWires_bramDout,
	       bramInitiatorWires_bramDin,
	       bramInitiatorWires_bramWEN,
	       bramInitiatorWires_bramEN
Sequenced before (restricted): ppcMessageOutput_get
Conflicts: ppcMessageInput_put
 
Method: ppcMessageOutput_get
Ready signal: ppcInstQ.notEmpty && ppcInstQ.i_notEmpty
Conflict-free: bramInitiatorWires_bramCLK,
	       bramInitiatorWires_bramRST,
	       bramInitiatorWires_bramAddr,
	       bramInitiatorWires_bramDout,
	       bramInitiatorWires_bramDin,
	       bramInitiatorWires_bramWEN,
	       bramInitiatorWires_bramEN
Sequenced after (restricted): ppcMessageInput_put
Conflicts: ppcMessageOutput_get
 
Method: bramInitiatorWires_bramCLK
Ready signal: True
Conflict-free: ppcMessageInput_put,
	       ppcMessageOutput_get,
	       bramInitiatorWires_bramCLK,
	       bramInitiatorWires_bramRST,
	       bramInitiatorWires_bramAddr,
	       bramInitiatorWires_bramDout,
	       bramInitiatorWires_bramDin,
	       bramInitiatorWires_bramWEN,
	       bramInitiatorWires_bramEN
 
Method: bramInitiatorWires_bramRST
Ready signal: True
Conflict-free: ppcMessageInput_put,
	       ppcMessageOutput_get,
	       bramInitiatorWires_bramCLK,
	       bramInitiatorWires_bramRST,
	       bramInitiatorWires_bramAddr,
	       bramInitiatorWires_bramDout,
	       bramInitiatorWires_bramDin,
	       bramInitiatorWires_bramWEN,
	       bramInitiatorWires_bramEN
 
Method: bramInitiatorWires_bramAddr
Ready signal: True
Conflict-free: ppcMessageInput_put,
	       ppcMessageOutput_get,
	       bramInitiatorWires_bramCLK,
	       bramInitiatorWires_bramRST,
	       bramInitiatorWires_bramAddr,
	       bramInitiatorWires_bramDout,
	       bramInitiatorWires_bramDin,
	       bramInitiatorWires_bramWEN,
	       bramInitiatorWires_bramEN
 
Method: bramInitiatorWires_bramDout
Ready signal: True
Conflict-free: ppcMessageInput_put,
	       ppcMessageOutput_get,
	       bramInitiatorWires_bramCLK,
	       bramInitiatorWires_bramRST,
	       bramInitiatorWires_bramAddr,
	       bramInitiatorWires_bramDout,
	       bramInitiatorWires_bramDin,
	       bramInitiatorWires_bramWEN,
	       bramInitiatorWires_bramEN
 
Method: bramInitiatorWires_bramDin
Ready signal: True
Conflict-free: ppcMessageInput_put,
	       ppcMessageOutput_get,
	       bramInitiatorWires_bramCLK,
	       bramInitiatorWires_bramRST,
	       bramInitiatorWires_bramAddr,
	       bramInitiatorWires_bramDout,
	       bramInitiatorWires_bramDin,
	       bramInitiatorWires_bramWEN,
	       bramInitiatorWires_bramEN
 
Method: bramInitiatorWires_bramWEN
Ready signal: True
Conflict-free: ppcMessageInput_put,
	       ppcMessageOutput_get,
	       bramInitiatorWires_bramCLK,
	       bramInitiatorWires_bramRST,
	       bramInitiatorWires_bramAddr,
	       bramInitiatorWires_bramDout,
	       bramInitiatorWires_bramDin,
	       bramInitiatorWires_bramWEN,
	       bramInitiatorWires_bramEN
 
Method: bramInitiatorWires_bramEN
Ready signal: True
Conflict-free: ppcMessageInput_put,
	       ppcMessageOutput_get,
	       bramInitiatorWires_bramCLK,
	       bramInitiatorWires_bramRST,
	       bramInitiatorWires_bramAddr,
	       bramInitiatorWires_bramDout,
	       bramInitiatorWires_bramDin,
	       bramInitiatorWires_bramWEN,
	       bramInitiatorWires_bramEN
 
Rule schedule
-------------
Rule: inStartPush
Predicate: state == 4'd7
Blocking rules: (none)
 
Rule: inStartWrite
Predicate: bramInit_bramFlat.RDY_read_resp && ppcMesgQ.i_notEmpty &&
	   (state == 4'd6)
Blocking rules: ppcMessageInput_put
 
Rule: inStartCheckWrite
Predicate: bramInit_bramFlat.RDY_read_req && (state == 4'd5)
Blocking rules: (none)
 
Rule: inStartTake
Predicate: bramInit_bramFlat.RDY_read_resp && ppcInstQ.i_notFull &&
	   (state == 4'd4)
Blocking rules: ppcMessageInput_put
 
Rule: inStartRead
Predicate: bramInit_bramFlat.RDY_read_resp &&
	   bramInit_bramFlat.RDY_read_req &&
	   (state == 4'd3)
Blocking rules: (none)
 
Rule: inStartCheckRead
Predicate: bramInit_bramFlat.RDY_read_req && (state == 4'd2)
Blocking rules: (none)
 
Rule: inStartIdle
Predicate: state == 4'd1
Blocking rules: (none)
 
Rule: beat
Predicate: (! (heartbeat == 30'd1073741823)) || ppcMesgQ.i_notFull
Blocking rules: ppcMessageInput_put
 
Logical execution order: bramInitiatorWires_bramEN,
			 bramInitiatorWires_bramWEN,
			 bramInitiatorWires_bramDin,
			 bramInitiatorWires_bramDout,
			 bramInitiatorWires_bramAddr,
			 bramInitiatorWires_bramRST,
			 bramInitiatorWires_bramCLK,
			 inStartRead,
			 inStartIdle,
			 ppcMessageInput_put,
			 inStartPush,
			 inStartWrite,
			 ppcMessageOutput_get,
			 inStartCheckWrite,
			 inStartTake,
			 inStartCheckRead,
			 beat

============================================
