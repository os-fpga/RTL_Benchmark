=== Generated schedule for mkLevel1MergerInstance ===

Method schedule
---------------
Method: inStream_getTokInfo
Ready signal: True
Conflict-free: inStream_getTokInfo,
	       inStream_putDeqTok,
	       inStream_putRecord,
	       getRecord
 
Method: inStream_putDeqTok
Ready signal: True
Conflict-free: inStream_getTokInfo, inStream_putRecord, getRecord
Conflicts: inStream_putDeqTok
 
Method: inStream_putRecord
Ready signal: True
Conflict-free: inStream_getTokInfo, inStream_putDeqTok, getRecord
Conflicts: inStream_putRecord
 
Method: getRecord
Ready signal: res_outQ.i_notEmpty
Conflict-free: inStream_getTokInfo, inStream_putDeqTok, inStream_putRecord
Conflicts: getRecord
 
Rule schedule
-------------
Rule: res_processPutRecord
Predicate: ((((! res_enqIdx.whas) || (! res_enqIdx.wget[1]))
	     ? _
	     : (! res_enqIdx.wget[0]))
	    ? res_inQ.i_notFull
	    : ((((! res_enqIdx.whas) || (! res_enqIdx.wget[1]))
		? ! _
		: (! res_enqIdx.wget[0])) ||
	       res_inQ_1.i_notFull)) &&
	   res_enqIdx.whas && res_enqIdx.wget[1]
Blocking rules: (none)
 
Rule: res_compares
Predicate: res_inQ.i_notEmpty && res_outQ.i_notFull && res_inQ_1.i_notEmpty
Blocking rules: (none)
 
Rule: res_freeReg_updateReg
Predicate: True
Blocking rules: (none)
 
Logical execution order: getRecord,
			 inStream_putRecord,
			 inStream_putDeqTok,
			 inStream_getTokInfo,
			 res_compares,
			 res_processPutRecord,
			 res_freeReg_updateReg

======================================================
