/* Generated by Yosys 0.16+65 (git sha1 051517d61, gcc 9.1.0 -fPIC -Os) */

module des_top(decrypt, clk, desIn, key, roundSel, desOut);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  wire _192_;
  wire _193_;
  wire _194_;
  wire _195_;
  wire _196_;
  wire _197_;
  wire _198_;
  wire _199_;
  wire _200_;
  wire _201_;
  wire _202_;
  wire _203_;
  wire _204_;
  wire _205_;
  wire _206_;
  wire _207_;
  wire _208_;
  wire _209_;
  wire _210_;
  wire _211_;
  wire _212_;
  wire _213_;
  wire _214_;
  wire _215_;
  wire _216_;
  wire _217_;
  wire _218_;
  wire _219_;
  wire _220_;
  wire _221_;
  wire _222_;
  wire _223_;
  wire _224_;
  wire _225_;
  wire _226_;
  wire _227_;
  wire _228_;
  wire _229_;
  wire _230_;
  wire _231_;
  wire _232_;
  wire _233_;
  wire _234_;
  wire _235_;
  wire _236_;
  wire _237_;
  wire _238_;
  wire _239_;
  wire _240_;
  wire _241_;
  wire _242_;
  wire _243_;
  wire _244_;
  wire _245_;
  wire _246_;
  wire _247_;
  wire _248_;
  wire _249_;
  wire _250_;
  wire _251_;
  wire _252_;
  wire _253_;
  wire _254_;
  wire _255_;
  wire _256_;
  wire _257_;
  wire _258_;
  wire _259_;
  wire _260_;
  wire _261_;
  wire _262_;
  wire _263_;
  wire _264_;
  wire _265_;
  wire _266_;
  wire _267_;
  wire _268_;
  wire _269_;
  wire _270_;
  wire _271_;
  wire _272_;
  wire _273_;
  wire _274_;
  wire _275_;
  wire _276_;
  wire _277_;
  wire _278_;
  wire _279_;
  wire _280_;
  wire _281_;
  wire _282_;
  wire _283_;
  wire _284_;
  wire _285_;
  wire _286_;
  wire _287_;
  wire _288_;
  wire _289_;
  wire _290_;
  wire _291_;
  wire _292_;
  wire _293_;
  wire _294_;
  wire _295_;
  wire _296_;
  wire _297_;
  wire _298_;
  wire _299_;
  wire _300_;
  wire _301_;
  wire _302_;
  wire _303_;
  wire _304_;
  wire _305_;
  wire _306_;
  wire _307_;
  wire _308_;
  wire _309_;
  wire _310_;
  wire _311_;
  wire _312_;
  wire _313_;
  wire _314_;
  wire _315_;
  wire _316_;
  wire _317_;
  wire _318_;
  wire _319_;
  wire _320_;
  wire _321_;
  wire _322_;
  wire _323_;
  wire _324_;
  wire _325_;
  wire _326_;
  wire _327_;
  wire _328_;
  wire _329_;
  wire _330_;
  wire _331_;
  wire _332_;
  wire _333_;
  wire _334_;
  wire _335_;
  wire _336_;
  wire _337_;
  wire _338_;
  wire _339_;
  wire _340_;
  wire _341_;
  wire _342_;
  wire _343_;
  wire _344_;
  wire _345_;
  wire _346_;
  wire _347_;
  wire _348_;
  wire _349_;
  wire _350_;
  wire _351_;
  wire _352_;
  wire _353_;
  wire _354_;
  wire _355_;
  wire _356_;
  wire _357_;
  wire _358_;
  wire _359_;
  wire _360_;
  wire _361_;
  wire _362_;
  wire _363_;
  wire _364_;
  wire _365_;
  wire _366_;
  wire _367_;
  wire _368_;
  wire _369_;
  wire _370_;
  wire _371_;
  wire _372_;
  wire _373_;
  wire _374_;
  wire _375_;
  wire _376_;
  wire _377_;
  wire _378_;
  wire _379_;
  wire _380_;
  wire _381_;
  wire _382_;
  wire _383_;
  wire _384_;
  wire _385_;
  wire _386_;
  wire _387_;
  wire _388_;
  input clk;
  wire clk;
  input decrypt;
  wire decrypt;
  input [63:0] desIn;
  wire [63:0] desIn;
  output [63:0] desOut;
  wire [63:0] desOut;
  input [55:0] key;
  wire [55:0] key;
  input [3:0] roundSel;
  wire [3:0] roundSel;
  assign _064_ = 16'b0000000000000001 >> { roundSel[3], roundSel[0], roundSel[2:1] };
  assign desOut[7] = 8'b11001010 >> { _064_, desIn[7], _063_ };
  assign desOut[39] = 8'b11001010 >> { _064_, desIn[39], _059_ };
  assign _065_ = 4'b1001 >> { roundSel[3], roundSel[0] };
  assign _066_ = 4'b1001 >> { decrypt, roundSel[3] };
  assign _067_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _065_, _066_, key[6], key[20], key[41], key[27] };
  assign _068_ = 4'b1001 >> roundSel[3:2];
  assign _069_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _065_, _066_, key[32], key[46], key[40], key[26] };
  assign _070_ = 4'b1001 >> { roundSel[3], roundSel[1] };
  assign _071_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[3], key[12], key[17], key[55] };
  assign _072_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[11], key[4], key[18], key[54] };
  assign _073_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _068_, _070_, _072_, _071_, _069_, _067_ };
  assign _074_ = 4'b0110 >> { desOut[7], _073_ };
  assign _075_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[33], key[11], key[47], key[54] };
  assign _076_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[34], key[10], key[48], key[53] };
  assign _077_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[5], key[39], key[19], key[25] };
  assign _078_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[13], key[6], key[20], key[24] };
  assign _079_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _068_, _070_, _078_, _077_, _076_, _075_ };
  assign desOut[31] = 8'b11001010 >> { _064_, desIn[31], _060_ };
  assign _080_ = 4'b0110 >> { desOut[31], _079_ };
  assign _081_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[55], key[33], key[12], key[19] };
  assign _082_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[24], key[32], key[13], key[18] };
  assign _083_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[27], key[4], key[41], key[47] };
  assign _084_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[3], key[53], key[10], key[46] };
  assign _085_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _068_, _070_, _084_, _083_, _082_, _081_ };
  assign desOut[23] = 8'b11001010 >> { _064_, desIn[23], _061_ };
  assign _086_ = 4'b0110 >> { desOut[23], _085_ };
  assign _087_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[4], key[39], key[18], key[25] };
  assign _088_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[5], key[13], key[19], key[24] };
  assign _089_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[33], key[10], key[47], key[53] };
  assign _090_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[41], key[34], key[48], key[27] };
  assign _091_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _068_, _070_, _090_, _089_, _088_, _087_ };
  assign _092_ = 4'b0110 >> { desOut[39], _091_ };
  assign _093_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[46], key[24], key[3], key[10] };
  assign _094_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[47], key[55], key[4], key[41] };
  assign _095_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[18], key[27], key[32], key[13] };
  assign _096_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[26], key[19], key[33], key[12] };
  assign _097_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _068_, _070_, _096_, _095_, _094_, _093_ };
  assign desOut[15] = 8'b11001010 >> { _064_, desIn[15], _062_ };
  assign _098_ = 4'b0110 >> { desOut[15], _097_ };
  assign _099_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[10], key[20], key[24], key[6] };
  assign _100_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[11], key[19], key[25], key[5] };
  assign _101_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[39], key[48], key[53], key[34] };
  assign _102_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[47], key[40], key[54], key[33] };
  assign _103_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _068_, _070_, _102_, _101_, _100_, _099_ };
  assign desOut[57] = 8'b11001010 >> { _064_, desIn[57], _032_ };
  assign _104_ = 4'b0110 >> { desOut[57], _103_ };
  assign _105_ = 64'b0010101110011100110101000101100110000101011000010110101110101101 >> { _104_, _098_, _092_, _086_, _080_, _074_ };
  assign desOut[48] = 16'b1010110001010011 >> { _105_, _064_, _001_, desIn[48] };
  assign desOut[63] = 8'b11001010 >> { _064_, desIn[63], _056_ };
  assign desOut[5] = 8'b11001010 >> { _064_, desIn[5], _055_ };
  assign desOut[13] = 8'b11001010 >> { _064_, desIn[13], _054_ };
  assign desOut[21] = 8'b11001010 >> { _064_, desIn[21], _053_ };
  assign desOut[29] = 8'b11001010 >> { _064_, desIn[29], _052_ };
  assign desOut[37] = 8'b11001010 >> { _064_, desIn[37], _051_ };
  assign _106_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[48], key[26], key[5], key[12] };
  assign _107_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[17], key[25], key[6], key[11] };
  assign _108_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[20], key[54], key[34], key[40] };
  assign _109_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[53], key[46], key[3], key[39] };
  assign _110_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _068_, _070_, _109_, _108_, _107_, _106_ };
  assign _111_ = 4'b0110 >> { desOut[63], _110_ };
  assign _112_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[20], key[55], key[34], key[41] };
  assign _113_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[46], key[54], key[3], key[40] };
  assign _114_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[17], key[26], key[6], key[12] };
  assign _115_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[25], key[18], key[32], key[11] };
  assign _116_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _068_, _070_, _115_, _114_, _113_, _112_ };
  assign _117_ = 4'b0110 >> { desOut[5], _116_ };
  assign _118_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _065_, _066_, key[54], key[11], key[32], key[18] };
  assign _119_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[55], key[6], key[12], key[17] };
  assign _120_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _065_, _066_, key[26], key[40], key[3], key[46] };
  assign _121_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[34], key[27], key[41], key[20] };
  assign _122_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _068_, _070_, _121_, _120_, _119_, _118_ };
  assign _123_ = 4'b0110 >> { desOut[21], _122_ };
  assign _124_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[53], key[6], key[10], key[17] };
  assign _125_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[54], key[5], key[11], key[48] };
  assign _126_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[25], key[34], key[39], key[20] };
  assign _127_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[33], key[26], key[40], key[19] };
  assign _128_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _068_, _070_, _127_, _126_, _125_, _124_ };
  assign _129_ = 4'b0110 >> { desOut[13], _128_ };
  assign _130_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[25], key[3], key[39], key[46] };
  assign _131_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _065_, _066_, key[26], key[40], key[34], key[20] };
  assign _132_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[54], key[6], key[11], key[17] };
  assign _133_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[5], key[55], key[12], key[48] };
  assign _134_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _068_, _070_, _133_, _132_, _131_, _130_ };
  assign _135_ = 4'b0110 >> { desOut[37], _134_ };
  assign _136_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[12], key[47], key[26], key[33] };
  assign _137_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _065_, _066_, key[13], key[27], key[46], key[32] };
  assign _138_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _065_, _066_, key[41], key[55], key[18], key[4] };
  assign _139_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _065_, _066_, key[17], key[24], key[10], key[3] };
  assign _140_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _068_, _070_, _139_, _138_, _137_, _136_ };
  assign _141_ = 4'b0110 >> { desOut[29], _140_ };
  assign _142_ = 64'b0101001010011001111011010110111110101100001101101101001000000001 >> { _129_, _141_, _117_, _111_, _123_, _135_ };
  assign desOut[40] = 16'b0101001110101100 >> { _142_, _064_, _002_, desIn[40] };
  assign desOut[27] = 8'b11001010 >> { _064_, desIn[27], _044_ };
  assign desOut[35] = 8'b11001010 >> { _064_, desIn[35], _043_ };
  assign desOut[43] = 8'b11001010 >> { _064_, desIn[43], _042_ };
  assign desOut[59] = 8'b11001010 >> { _064_, desIn[59], _040_ };
  assign desOut[51] = 8'b11001010 >> { _064_, desIn[51], _041_ };
  assign desOut[1] = 8'b11001010 >> { _064_, desIn[1], _039_ };
  assign _143_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[0], key[35], key[14], key[21] };
  assign _144_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _065_, _066_, key[30], key[44], key[36], key[22] };
  assign _145_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[31], key[8], key[45], key[49] };
  assign _146_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[9], key[2], key[16], key[50] };
  assign _147_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _068_, _070_, _146_, _145_, _144_, _143_ };
  assign _148_ = 4'b0110 >> { desOut[51], _147_ };
  assign _149_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[51], key[0], key[38], key[45] };
  assign _150_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[50], key[1], key[9], key[42] };
  assign _151_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[23], key[28], key[37], key[14] };
  assign _152_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[29], key[22], key[36], key[15] };
  assign _153_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _068_, _070_, _152_, _151_, _150_, _149_ };
  assign _154_ = 4'b0110 >> { desOut[35], _153_ };
  assign _155_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[42], key[22], key[1], key[8] };
  assign _156_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[45], key[23], key[0], key[9] };
  assign _157_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[14], key[50], key[28], key[36] };
  assign _158_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[51], key[44], key[31], key[37] };
  assign _159_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _068_, _070_, _158_, _157_, _156_, _155_ };
  assign _160_ = 4'b0110 >> { desOut[43], _159_ };
  assign _161_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[36], key[16], key[50], key[2] };
  assign _162_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[35], key[45], key[49], key[31] };
  assign _163_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[8], key[44], key[22], key[30] };
  assign _164_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[14], key[7], key[21], key[0] };
  assign _165_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _068_, _070_, _164_, _163_, _162_, _161_ };
  assign _166_ = 4'b0110 >> { desOut[27], _165_ };
  assign _167_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _065_, _066_, key[2], key[16], key[37], key[23] };
  assign _168_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[1], key[7], key[15], key[52] };
  assign _169_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[29], key[38], key[43], key[51] };
  assign _170_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[35], key[28], key[42], key[21] };
  assign _171_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _068_, _070_, _170_, _169_, _168_, _167_ };
  assign _172_ = 4'b0110 >> { desOut[59], _171_ };
  assign _173_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[21], key[1], key[35], key[42] };
  assign _174_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[51], key[2], key[38], key[43] };
  assign _175_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[52], key[29], key[7], key[15] };
  assign _176_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[30], key[23], key[37], key[16] };
  assign _177_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _068_, _070_, _176_, _175_, _174_, _173_ };
  assign _178_ = 4'b0110 >> { desOut[1], _177_ };
  assign _179_ = 64'b1011010011001011000111001011011001001010001101100011011011001001 >> { _172_, _166_, _160_, _154_, _178_, _148_ };
  assign desOut[32] = 16'b0101001110101100 >> { _179_, _064_, _003_, desIn[32] };
  assign desOut[55] = 8'b11001010 >> { _064_, desIn[55], _057_ };
  assign desOut[47] = 8'b11001010 >> { _064_, desIn[47], _058_ };
  assign _180_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[11], key[46], key[25], key[32] };
  assign _181_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[12], key[20], key[26], key[6] };
  assign _182_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _065_, _066_, key[40], key[54], key[17], key[3] };
  assign _183_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[48], key[41], key[55], key[34] };
  assign _184_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _068_, _070_, _183_, _182_, _181_, _180_ };
  assign _185_ = 4'b0110 >> { desOut[55], _184_ };
  assign _186_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[26], key[4], key[40], key[47] };
  assign _187_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[27], key[3], key[41], key[46] };
  assign _188_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[55], key[32], key[12], key[18] };
  assign _189_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _065_, _066_, key[6], key[13], key[24], key[17] };
  assign _190_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _068_, _070_, _189_, _188_, _187_, _186_ };
  assign _191_ = 4'b0110 >> { desOut[39], _190_ };
  assign _192_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _065_, _066_, key[17], key[6], key[27], key[13] };
  assign _193_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[18], key[26], key[32], key[12] };
  assign _194_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[46], key[55], key[3], key[41] };
  assign _195_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[54], key[47], key[4], key[40] };
  assign _196_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _068_, _070_, _195_, _194_, _193_, _192_ };
  assign _197_ = 4'b0110 >> { desOut[47], _196_ };
  assign _198_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[39], key[17], key[53], key[3] };
  assign _199_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[40], key[48], key[54], key[34] };
  assign _200_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[11], key[20], key[25], key[6] };
  assign _201_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[19], key[12], key[26], key[5] };
  assign _202_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _068_, _070_, _201_, _200_, _199_, _198_ };
  assign _203_ = 4'b0110 >> { desOut[5], _202_ };
  assign _204_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[34], key[12], key[48], key[55] };
  assign _205_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[3], key[11], key[17], key[54] };
  assign _206_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _065_, _066_, key[6], key[20], key[40], key[26] };
  assign _207_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[39], key[32], key[46], key[25] };
  assign _208_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _068_, _070_, _207_, _206_, _205_, _204_ };
  assign _209_ = 4'b0110 >> { desOut[63], _208_ };
  assign _210_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[47], key[25], key[4], key[11] };
  assign _211_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[48], key[24], key[5], key[10] };
  assign _212_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[19], key[53], key[33], key[39] };
  assign _213_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[27], key[20], key[34], key[13] };
  assign _214_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _068_, _070_, _213_, _212_, _211_, _210_ };
  assign _215_ = 4'b0110 >> { desOut[31], _214_ };
  assign _216_ = 64'b1011000100111100000111101000101101001110100010111110000101110100 >> { _215_, _209_, _203_, _185_, _191_, _197_ };
  assign desOut[24] = 16'b1010110001010011 >> { _216_, _064_, _004_, desIn[24] };
  assign desOut[33] = 8'b11001010 >> { _064_, desIn[33], _035_ };
  assign desOut[49] = 8'b11001010 >> { _064_, desIn[49], _033_ };
  assign desOut[41] = 8'b11001010 >> { _064_, desIn[41], _034_ };
  assign _217_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[40], key[18], key[54], key[4] };
  assign _218_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _065_, _066_, key[41], key[55], key[17], key[3] };
  assign _219_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[12], key[46], key[26], key[32] };
  assign _220_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[20], key[13], key[27], key[6] };
  assign _221_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _068_, _070_, _220_, _219_, _218_, _217_ };
  assign desOut[3] = 8'b11001010 >> { _064_, desIn[3], _047_ };
  assign _222_ = 4'b0110 >> { desOut[3], _221_ };
  assign _223_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[18], key[53], key[32], key[39] };
  assign _224_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[19], key[27], key[33], key[13] };
  assign _225_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[47], key[24], key[4], key[10] };
  assign _226_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[55], key[48], key[5], key[41] };
  assign _227_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _068_, _070_, _226_, _225_, _224_, _223_ };
  assign _228_ = 4'b0110 >> { desOut[37], _227_ };
  assign _229_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[27], key[5], key[41], key[48] };
  assign _230_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[53], key[4], key[10], key[47] };
  assign _231_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[24], key[33], key[13], key[19] };
  assign _232_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[32], key[25], key[39], key[18] };
  assign _233_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _068_, _070_, _232_, _231_, _230_, _229_ };
  assign desOut[53] = 8'b11001010 >> { _064_, desIn[53], _049_ };
  assign _234_ = 4'b0110 >> { desOut[53], _233_ };
  assign _235_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[24], key[34], key[13], key[20] };
  assign _236_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[25], key[33], key[39], key[19] };
  assign _237_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[53], key[5], key[10], key[48] };
  assign _238_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[4], key[54], key[11], key[47] };
  assign _239_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _068_, _070_, _238_, _237_, _236_, _235_ };
  assign _240_ = 4'b0110 >> { desOut[29], _239_ };
  assign _241_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[3], key[13], key[17], key[24] };
  assign _242_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[4], key[12], key[18], key[55] };
  assign _243_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[32], key[41], key[46], key[27] };
  assign _244_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _065_, _066_, key[40], key[47], key[33], key[26] };
  assign _245_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _068_, _070_, _244_, _243_, _242_, _241_ };
  assign desOut[61] = 8'b11001010 >> { _064_, desIn[61], _048_ };
  assign _246_ = 4'b0110 >> { desOut[61], _245_ };
  assign _247_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[19], key[54], key[33], key[40] };
  assign _248_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[20], key[53], key[34], key[39] };
  assign _249_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[48], key[25], key[5], key[11] };
  assign _250_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[24], key[17], key[6], key[10] };
  assign _251_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _068_, _070_, _250_, _249_, _248_, _247_ };
  assign desOut[45] = 8'b11001010 >> { _064_, desIn[45], _050_ };
  assign _252_ = 4'b0110 >> { desOut[45], _251_ };
  assign _253_ = 64'b1001111010101000011000111101110011000101011000110001101010100110 >> { _228_, _240_, _246_, _222_, _234_, _252_ };
  assign desOut[6] = 16'b1010110001010011 >> { _253_, _064_, _031_, desIn[6] };
  assign _254_ = 64'b0000101101101100111010001001001011110101001010010001011111101001 >> { _191_, _203_, _197_, _209_, _215_, _185_ };
  assign desOut[14] = 16'b0101001110101100 >> { _254_, _064_, _030_, desIn[14] };
  assign _255_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[43], key[23], key[2], key[9] };
  assign _256_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[42], key[52], key[1], key[38] };
  assign _257_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _065_, _066_, key[15], key[29], key[51], key[37] };
  assign _258_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[21], key[14], key[28], key[7] };
  assign _259_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _068_, _070_, _258_, _257_, _256_, _255_ };
  assign desOut[11] = 8'b11001010 >> { _064_, desIn[11], _046_ };
  assign _260_ = 4'b0110 >> { desOut[11], _259_ };
  assign _261_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[15], key[50], key[29], key[36] };
  assign _262_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _065_, _066_, key[14], key[28], key[51], key[37] };
  assign _263_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[42], key[23], key[1], key[9] };
  assign _264_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[52], key[45], key[0], key[38] };
  assign _265_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _068_, _070_, _264_, _263_, _262_, _261_ };
  assign _266_ = 4'b0110 >> { desOut[35], _265_ };
  assign _267_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[49], key[29], key[8], key[15] };
  assign _268_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _065_, _066_, key[52], key[7], key[30], key[16] };
  assign _269_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[21], key[2], key[35], key[43] };
  assign _270_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _065_, _066_, key[31], key[38], key[51], key[44] };
  assign _271_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _068_, _070_, _270_, _269_, _268_, _267_ };
  assign _272_ = 4'b0110 >> { desOut[3], _271_ };
  assign _273_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[31], key[7], key[45], key[52] };
  assign _274_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[2], key[8], key[16], key[49] };
  assign _275_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _065_, _066_, key[30], key[44], key[35], key[21] };
  assign _276_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _065_, _066_, key[36], key[43], key[29], key[22] };
  assign _277_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _068_, _070_, _276_, _275_, _274_, _273_ };
  assign _278_ = 4'b0110 >> { desOut[61], _277_ };
  assign _279_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[14], key[49], key[28], key[35] };
  assign _280_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[44], key[50], key[31], key[36] };
  assign _281_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[45], key[22], key[0], key[8] };
  assign _282_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[23], key[16], key[30], key[9] };
  assign _283_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _068_, _070_, _282_, _281_, _280_, _279_ };
  assign _284_ = 4'b0110 >> { desOut[27], _283_ };
  assign _285_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[30], key[38], key[44], key[51] };
  assign _286_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _065_, _066_, key[29], key[43], key[35], key[21] };
  assign _287_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[2], key[7], key[16], key[52] };
  assign _288_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[8], key[1], key[15], key[49] };
  assign _289_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _068_, _070_, _288_, _287_, _286_, _285_ };
  assign desOut[19] = 8'b11001010 >> { _064_, desIn[19], _045_ };
  assign _290_ = 4'b0110 >> { desOut[19], _289_ };
  assign _291_ = 64'b0001110111100010010110100011010111010100010010011000011110011011 >> { _266_, _272_, _278_, _290_, _260_, _284_ };
  assign desOut[22] = 16'b1010110001010011 >> { _291_, _064_, _029_, desIn[22] };
  assign _292_ = 64'b0000111001100101110100110011110010100101010110100110110011000110 >> { _178_, _160_, _166_, _148_, _154_, _172_ };
  assign desOut[30] = 16'b1010110001010011 >> { _292_, _064_, _028_, desIn[30] };
  assign _293_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[50], key[30], key[9], key[16] };
  assign _294_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[49], key[0], key[8], key[45] };
  assign _295_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[22], key[31], key[36], key[44] };
  assign _296_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[28], key[21], key[35], key[14] };
  assign _297_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _068_, _070_, _296_, _295_, _294_, _293_ };
  assign _298_ = 4'b0110 >> { desOut[7], _297_ };
  assign _299_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[38], key[14], key[52], key[0] };
  assign _300_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[9], key[15], key[23], key[1] };
  assign _301_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[37], key[42], key[51], key[28] };
  assign _302_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[43], key[36], key[50], key[29] };
  assign _303_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _068_, _070_, _302_, _301_, _300_, _299_ };
  assign _304_ = 4'b0110 >> { desOut[33], _303_ };
  assign _305_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[29], key[9], key[43], key[50] };
  assign _306_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[28], key[38], key[42], key[51] };
  assign _307_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[1], key[37], key[15], key[23] };
  assign _308_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[7], key[0], key[14], key[52] };
  assign _309_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _068_, _070_, _308_, _307_, _306_, _305_ };
  assign _310_ = 4'b0110 >> { desOut[57], _309_ };
  assign _311_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[7], key[42], key[21], key[28] };
  assign _312_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[37], key[43], key[51], key[29] };
  assign _313_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _065_, _066_, key[38], key[52], key[15], key[1] };
  assign _314_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[16], key[9], key[23], key[2] };
  assign _315_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _068_, _070_, _314_, _313_, _312_, _311_ };
  assign desOut[25] = 8'b11001010 >> { _064_, desIn[25], _036_ };
  assign _316_ = 4'b0110 >> { desOut[25], _315_ };
  assign _317_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _065_, _066_, key[35], key[49], key[15], key[1] };
  assign _318_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _065_, _066_, key[38], key[52], key[16], key[2] };
  assign _319_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[7], key[43], key[21], key[29] };
  assign _320_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[44], key[37], key[51], key[30] };
  assign _321_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _068_, _070_, _320_, _319_, _318_, _317_ };
  assign _322_ = 4'b0110 >> { desOut[41], _321_ };
  assign _323_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[23], key[31], key[37], key[44] };
  assign _324_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[22], key[28], key[36], key[14] };
  assign _325_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[50], key[0], key[9], key[45] };
  assign _326_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[1], key[49], key[8], key[42] };
  assign _327_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _068_, _070_, _326_, _325_, _324_, _323_ };
  assign _328_ = 4'b0110 >> { desOut[49], _327_ };
  assign _329_ = 64'b0110100100111100010111001010101111000110010110011001011000110100 >> { _310_, _298_, _304_, _316_, _322_, _328_ };
  assign desOut[38] = 16'b1010110001010011 >> { _329_, _064_, _027_, desIn[38] };
  assign _330_ = 64'b1000011011011100010110100011110001011001101001101010010111000011 >> { _117_, _111_, _141_, _135_, _123_, _129_ };
  assign desOut[46] = 16'b1010110001010011 >> { _330_, _064_, _026_, desIn[46] };
  assign _331_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[28], key[8], key[42], key[49] };
  assign _332_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[31], key[9], key[45], key[50] };
  assign _333_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[0], key[36], key[14], key[22] };
  assign _334_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[37], key[30], key[44], key[23] };
  assign _335_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _068_, _070_, _334_, _333_, _332_, _331_ };
  assign _336_ = 4'b0110 >> { desOut[1], _335_ };
  assign _337_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[44], key[52], key[31], key[38] };
  assign _338_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[43], key[49], key[2], key[35] };
  assign _339_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[16], key[21], key[30], key[7] };
  assign _340_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[22], key[15], key[29], key[8] };
  assign _341_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _068_, _070_, _340_, _339_, _338_, _337_ };
  assign desOut[9] = 8'b11001010 >> { _064_, desIn[9], _038_ };
  assign _342_ = 4'b0110 >> { desOut[9], _341_ };
  assign _343_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[22], key[2], key[36], key[43] };
  assign _344_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[21], key[31], key[35], key[44] };
  assign _345_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[49], key[30], key[8], key[16] };
  assign _346_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[0], key[52], key[7], key[45] };
  assign _347_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _068_, _070_, _346_, _345_, _344_, _343_ };
  assign desOut[17] = 8'b11001010 >> { _064_, desIn[17], _037_ };
  assign _348_ = 4'b0110 >> { desOut[17], _347_ };
  assign _349_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[1], key[36], key[15], key[22] };
  assign _350_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[0], key[37], key[14], key[23] };
  assign _351_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[28], key[9], key[42], key[50] };
  assign _352_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[38], key[31], key[45], key[51] };
  assign _353_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _068_, _070_, _352_, _351_, _350_, _349_ };
  assign _354_ = 4'b0110 >> { desOut[33], _353_ };
  assign _355_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[9], key[44], key[23], key[30] };
  assign _356_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[8], key[14], key[22], key[0] };
  assign _357_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[36], key[45], key[50], key[31] };
  assign _358_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[42], key[35], key[49], key[28] };
  assign _359_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _068_, _070_, _358_, _357_, _356_, _355_ };
  assign _360_ = 4'b0110 >> { desOut[25], _359_ };
  assign _361_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[52], key[28], key[7], key[14] };
  assign _362_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[23], key[29], key[37], key[15] };
  assign _363_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[51], key[1], key[38], key[42] };
  assign _364_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _066_, _065_, key[2], key[50], key[9], key[43] };
  assign _365_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _068_, _070_, _364_, _363_, _362_, _361_ };
  assign _366_ = 4'b0110 >> { desOut[59], _365_ };
  assign _367_ = 64'b1001011011001001111010000001111011100010000111100001110111100001 >> { _354_, _366_, _348_, _360_, _342_, _336_ };
  assign desOut[54] = 16'b1010110001010011 >> { _367_, _064_, _025_, desIn[54] };
  assign _368_ = 64'b0101001010110101100101011110001001101100010110011100101100111000 >> { _278_, _266_, _272_, _284_, _290_, _260_ };
  assign desOut[62] = 16'b0101001110101100 >> { _368_, _064_, _024_, desIn[62] };
  assign _369_ = 64'b0100010110101110101110001100001110101000010100111100111110010100 >> { _092_, _080_, _074_, _104_, _098_, _086_ };
  assign desOut[4] = 16'b1010110001010011 >> { _369_, _064_, _023_, desIn[4] };
  assign _370_ = 64'b1110100001100011010110101001010000110101010110011100011011100011 >> { _228_, _240_, _222_, _246_, _252_, _234_ };
  assign desOut[12] = 16'b0101001110101100 >> { _370_, _064_, _022_, desIn[12] };
  assign _371_ = 64'b1010100100011110110100101110100100110110110000100100110100110101 >> { _160_, _148_, _154_, _166_, _172_, _178_ };
  assign desOut[20] = 16'b1010110001010011 >> { _371_, _064_, _021_, desIn[20] };
  assign _372_ = 64'b0010000111001010010110110010001111011010101101011010110001011100 >> { _360_, _336_, _354_, _366_, _348_, _342_ };
  assign desOut[28] = 16'b1010110001010011 >> { _372_, _064_, _020_, desIn[28] };
  assign _373_ = 64'b0101100101100101101001101100100101100110100110101100001100111100 >> { _209_, _191_, _203_, _215_, _197_, _185_ };
  assign desOut[36] = 16'b1010110001010011 >> { _373_, _064_, _019_, desIn[36] };
  assign _374_ = 64'b1101001101101010001011101001000100100101100111001101011001101001 >> { _272_, _266_, _284_, _290_, _278_, _260_ };
  assign desOut[44] = 16'b1010110001010011 >> { _374_, _064_, _018_, desIn[44] };
  assign _375_ = 64'b0011101011100001010001110100111011000110001111001011000110110001 >> { _304_, _316_, _298_, _328_, _322_, _310_ };
  assign desOut[52] = 16'b1010110001010011 >> { _375_, _064_, _017_, desIn[52] };
  assign _376_ = 64'b1001111010110100100100010100101101110011010010100100111010110100 >> { _111_, _117_, _123_, _135_, _129_, _141_ };
  assign desOut[60] = 16'b0101001110101100 >> { _376_, _064_, _016_, desIn[60] };
  assign _377_ = 64'b0010011101011110111010011010000011001011101000100011100011010110 >> { _104_, _086_, _080_, _074_, _092_, _098_ };
  assign desOut[2] = 16'b1010110001010011 >> { _377_, _064_, _015_, desIn[2] };
  assign _378_ = 64'b0100011001010011101011011011100011110010001011010101001110001100 >> { _191_, _197_, _185_, _203_, _215_, _209_ };
  assign desOut[10] = 16'b1010110001010011 >> { _378_, _064_, _014_, desIn[10] };
  assign _379_ = 64'b1010010001011010001111011100001101011101100100111010101011000100 >> { _166_, _172_, _154_, _178_, _160_, _148_ };
  assign desOut[18] = 16'b0101001110101100 >> { _379_, _064_, _013_, desIn[18] };
  assign _380_ = 64'b1011011011000011010110011110100001011000100110100110001100110101 >> { _228_, _240_, _222_, _246_, _234_, _252_ };
  assign desOut[26] = 16'b0101001110101100 >> { _380_, _064_, _012_, desIn[26] };
  assign _381_ = 64'b1100101000101011011001101100010100110100110101101001110100101001 >> { _316_, _322_, _298_, _328_, _310_, _304_ };
  assign desOut[34] = 16'b0101001110101100 >> { _381_, _064_, _011_, desIn[34] };
  assign _382_ = 64'b1000010000110111011111001100001101111001000111101000011010110001 >> { _354_, _342_, _336_, _366_, _348_, _360_ };
  assign desOut[42] = 16'b1010110001010011 >> { _382_, _064_, _010_, desIn[42] };
  assign _383_ = 64'b0111011001100101110000010001111001001011100101011011100000101011 >> { _092_, _074_, _104_, _086_, _080_, _098_ };
  assign desOut[50] = 16'b0101001110101100 >> { _383_, _064_, _009_, desIn[50] };
  assign _384_ = 64'b0111100010010110110000110011110010010111011001010010010111001010 >> { _111_, _129_, _141_, _123_, _135_, _117_ };
  assign desOut[58] = 16'b1010110001010011 >> { _384_, _064_, _008_, desIn[58] };
  assign _385_ = 64'b0011011011011000110001010011100010101010011001110101110110000110 >> { _260_, _290_, _272_, _266_, _284_, _278_ };
  assign desOut[0] = 16'b1010110001010011 >> { _385_, _064_, _007_, desIn[0] };
  assign _386_ = 64'b0111010110011010000001110110110101001011001011001001101011010001 >> { _228_, _240_, _246_, _252_, _222_, _234_ };
  assign desOut[8] = 16'b1010110001010011 >> { _386_, _064_, _006_, desIn[8] };
  assign _387_ = 64'b0100000110111101101110110100001001101110010100100110010010011101 >> { _298_, _328_, _304_, _316_, _322_, _310_ };
  assign desOut[16] = 16'b0101001110101100 >> { _387_, _064_, _005_, desIn[16] };
  assign _388_ = 64'b0101110010100101110001010110100110010011011011001010010011010011 >> { _366_, _354_, _360_, _336_, _342_, _348_ };
  assign desOut[56] = 16'b1010110001010011 >> { _388_, _064_, _000_, desIn[56] };
  dffsre _778_ (
    .C(clk),
    .D(desOut[57]),
    .E(1'b1),
    .Q(_000_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _779_ (
    .C(clk),
    .D(desOut[49]),
    .E(1'b1),
    .Q(_001_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _780_ (
    .C(clk),
    .D(desOut[41]),
    .E(1'b1),
    .Q(_002_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _781_ (
    .C(clk),
    .D(desOut[33]),
    .E(1'b1),
    .Q(_003_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _782_ (
    .C(clk),
    .D(desOut[25]),
    .E(1'b1),
    .Q(_004_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _783_ (
    .C(clk),
    .D(desOut[17]),
    .E(1'b1),
    .Q(_005_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _784_ (
    .C(clk),
    .D(desOut[9]),
    .E(1'b1),
    .Q(_006_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _785_ (
    .C(clk),
    .D(desOut[1]),
    .E(1'b1),
    .Q(_007_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _786_ (
    .C(clk),
    .D(desOut[59]),
    .E(1'b1),
    .Q(_008_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _787_ (
    .C(clk),
    .D(desOut[51]),
    .E(1'b1),
    .Q(_009_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _788_ (
    .C(clk),
    .D(desOut[43]),
    .E(1'b1),
    .Q(_010_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _789_ (
    .C(clk),
    .D(desOut[35]),
    .E(1'b1),
    .Q(_011_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _790_ (
    .C(clk),
    .D(desOut[27]),
    .E(1'b1),
    .Q(_012_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _791_ (
    .C(clk),
    .D(desOut[19]),
    .E(1'b1),
    .Q(_013_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _792_ (
    .C(clk),
    .D(desOut[11]),
    .E(1'b1),
    .Q(_014_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _793_ (
    .C(clk),
    .D(desOut[3]),
    .E(1'b1),
    .Q(_015_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _794_ (
    .C(clk),
    .D(desOut[61]),
    .E(1'b1),
    .Q(_016_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _795_ (
    .C(clk),
    .D(desOut[53]),
    .E(1'b1),
    .Q(_017_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _796_ (
    .C(clk),
    .D(desOut[45]),
    .E(1'b1),
    .Q(_018_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _797_ (
    .C(clk),
    .D(desOut[37]),
    .E(1'b1),
    .Q(_019_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _798_ (
    .C(clk),
    .D(desOut[29]),
    .E(1'b1),
    .Q(_020_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _799_ (
    .C(clk),
    .D(desOut[21]),
    .E(1'b1),
    .Q(_021_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _800_ (
    .C(clk),
    .D(desOut[13]),
    .E(1'b1),
    .Q(_022_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _801_ (
    .C(clk),
    .D(desOut[5]),
    .E(1'b1),
    .Q(_023_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _802_ (
    .C(clk),
    .D(desOut[63]),
    .E(1'b1),
    .Q(_024_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _803_ (
    .C(clk),
    .D(desOut[55]),
    .E(1'b1),
    .Q(_025_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _804_ (
    .C(clk),
    .D(desOut[47]),
    .E(1'b1),
    .Q(_026_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _805_ (
    .C(clk),
    .D(desOut[39]),
    .E(1'b1),
    .Q(_027_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _806_ (
    .C(clk),
    .D(desOut[31]),
    .E(1'b1),
    .Q(_028_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _807_ (
    .C(clk),
    .D(desOut[23]),
    .E(1'b1),
    .Q(_029_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _808_ (
    .C(clk),
    .D(desOut[15]),
    .E(1'b1),
    .Q(_030_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _809_ (
    .C(clk),
    .D(desOut[7]),
    .E(1'b1),
    .Q(_031_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _810_ (
    .C(clk),
    .D(desOut[56]),
    .E(1'b1),
    .Q(_032_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _811_ (
    .C(clk),
    .D(desOut[48]),
    .E(1'b1),
    .Q(_033_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _812_ (
    .C(clk),
    .D(desOut[40]),
    .E(1'b1),
    .Q(_034_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _813_ (
    .C(clk),
    .D(desOut[32]),
    .E(1'b1),
    .Q(_035_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _814_ (
    .C(clk),
    .D(desOut[24]),
    .E(1'b1),
    .Q(_036_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _815_ (
    .C(clk),
    .D(desOut[16]),
    .E(1'b1),
    .Q(_037_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _816_ (
    .C(clk),
    .D(desOut[8]),
    .E(1'b1),
    .Q(_038_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _817_ (
    .C(clk),
    .D(desOut[0]),
    .E(1'b1),
    .Q(_039_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _818_ (
    .C(clk),
    .D(desOut[58]),
    .E(1'b1),
    .Q(_040_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _819_ (
    .C(clk),
    .D(desOut[50]),
    .E(1'b1),
    .Q(_041_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _820_ (
    .C(clk),
    .D(desOut[42]),
    .E(1'b1),
    .Q(_042_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _821_ (
    .C(clk),
    .D(desOut[34]),
    .E(1'b1),
    .Q(_043_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _822_ (
    .C(clk),
    .D(desOut[26]),
    .E(1'b1),
    .Q(_044_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _823_ (
    .C(clk),
    .D(desOut[18]),
    .E(1'b1),
    .Q(_045_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _824_ (
    .C(clk),
    .D(desOut[10]),
    .E(1'b1),
    .Q(_046_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _825_ (
    .C(clk),
    .D(desOut[2]),
    .E(1'b1),
    .Q(_047_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _826_ (
    .C(clk),
    .D(desOut[60]),
    .E(1'b1),
    .Q(_048_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _827_ (
    .C(clk),
    .D(desOut[52]),
    .E(1'b1),
    .Q(_049_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _828_ (
    .C(clk),
    .D(desOut[44]),
    .E(1'b1),
    .Q(_050_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _829_ (
    .C(clk),
    .D(desOut[36]),
    .E(1'b1),
    .Q(_051_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _830_ (
    .C(clk),
    .D(desOut[28]),
    .E(1'b1),
    .Q(_052_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _831_ (
    .C(clk),
    .D(desOut[20]),
    .E(1'b1),
    .Q(_053_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _832_ (
    .C(clk),
    .D(desOut[12]),
    .E(1'b1),
    .Q(_054_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _833_ (
    .C(clk),
    .D(desOut[4]),
    .E(1'b1),
    .Q(_055_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _834_ (
    .C(clk),
    .D(desOut[62]),
    .E(1'b1),
    .Q(_056_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _835_ (
    .C(clk),
    .D(desOut[54]),
    .E(1'b1),
    .Q(_057_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _836_ (
    .C(clk),
    .D(desOut[46]),
    .E(1'b1),
    .Q(_058_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _837_ (
    .C(clk),
    .D(desOut[38]),
    .E(1'b1),
    .Q(_059_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _838_ (
    .C(clk),
    .D(desOut[30]),
    .E(1'b1),
    .Q(_060_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _839_ (
    .C(clk),
    .D(desOut[22]),
    .E(1'b1),
    .Q(_061_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _840_ (
    .C(clk),
    .D(desOut[14]),
    .E(1'b1),
    .Q(_062_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _841_ (
    .C(clk),
    .D(desOut[6]),
    .E(1'b1),
    .Q(_063_),
    .R(1'b1),
    .S(1'b1)
  );
endmodule
