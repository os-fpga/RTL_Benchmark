/* Generated by Yosys 0.18+10 (git sha1 57d4b00ff, gcc 11.2.0 -fPIC -Os) */

module latch_inference(cout, sum, a, b, clk, cin, R, G, Q1, Q2, Q3, Q4, Q5, Q6);
  input G;
  output Q1;
  output Q2;
  output Q3;
  output Q4;
  output Q5;
  output Q6;
  input R;
  input [9:0] a;
  input [9:0] b;
  input cin;
  input clk;
  output cout;
  output [9:0] sum;
  wire [10:0] _0_;
  wire G;
  wire Q1;
  wire Q2;
  wire Q3;
  wire Q4;
  wire Q5;
  wire Q6;
  wire R;
  wire [9:0] a;
  wire [9:0] b;
  wire cin;
  wire clk;
  wire cout;
  reg [9:0] sum;
  wire [9:0] sum_w;
  assign _0_ = a + b;
  assign { cout, sum_w } = _0_ + cin;
  always @(posedge clk)
    sum <= sum_w;
  LATCH llatch_inst (
    .D(cout),
    .G(G),
    .Q(Q1)
  );
  LATCHN llatchn_inst (
    .D(cout),
    .G(G),
    .Q(Q2)
  );
  LATCHNR llatchnr_inst (
    .D(cout),
    .G(G),
    .Q(Q5),
    .R(R)
  );
  LATCHNS llatchns_inst (
    .D(cout),
    .G(G),
    .Q(Q6),
    .R(R)
  );
  LATCHR llatchr_inst (
    .D(cout),
    .G(G),
    .Q(Q3),
    .R(R)
  );
  LATCHS llatchs_inst (
    .D(cout),
    .G(G),
    .Q(Q4),
    .R(R)
  );
endmodule
