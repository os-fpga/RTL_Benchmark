//
//  Copyright (c) 2003 Launchbird Design Systems, Inc.
//  All rights reserved.
//  
//  Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
//    Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
//    Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
//  
//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
//  INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
//  OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
//  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//  
//  
//  Overview:
//  
//    Performs floating point multiply.
//  
//  Interface:
//  
//    Synchronization:
//      clock_c  : Clock input.
//  
//    Inputs:
//      a_i : Left operand.
//      b_i : Right operand.
//  
//    Outputs:
//      x_o : Result.
//  
//  Built In Parameters:
//  
//    Exponent Precision = 5
//    Mantissa Precision = 10
//    Total    Precision = 16
//    Pipeline Latency   = 14 clock cycles
//  
//  
//  
//  
//  Generated by Confluence 0.6.3  --  Launchbird Design Systems, Inc.  --  www.launchbird.com
//  
//  Build Date : Fri Aug 22 09:47:04 CDT 2003
//  
//  Interface
//  
//    Build Name    : cf_fp_mul_p_5_10
//    Clock Domains : clock_c  
//    Vector Input  : a_i(16)
//    Vector Input  : b_i(16)
//    Vector Output : x_o(16)
//  
//  
//  

#ifdef __cplusplus
extern "C" {
#endif

void cf_fp_mul_p_5_10_ports(unsigned char* port_a_i, unsigned char* port_b_i, unsigned char* port_x_o);
void cf_fp_mul_p_5_10_init();
void cf_fp_mul_p_5_10_calc();
void cf_fp_mul_p_5_10_cycle_clock();
void cf_fp_mul_p_5_10_sim_init(const char* file);
void cf_fp_mul_p_5_10_sim_end();
void cf_fp_mul_p_5_10_sim_sample();

#ifdef __cplusplus
}
#endif

