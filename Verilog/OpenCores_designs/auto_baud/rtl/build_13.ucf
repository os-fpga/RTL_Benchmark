NET "lcd_drive<0>" LOC = "P191";
NET "lcd_drive<1>" LOC = "P189";
NET "lcd_drive<2>" LOC = "P188";
NET "lcd_drive<3>" LOC = "P187";
NET "lcd_drive<4>" LOC = "P181";
NET "lcd_drive<5>" LOC = "P180";
NET "lcd_drive<6>" LOC = "P179";
NET "lcd_drive<7>" LOC = "P178";
NET "lcd_drive<8>" LOC = "P176";
NET "lcd_drive<9>" LOC = "P175";
NET "lcd_drive<10>" LOC = "P174";
NET "lcd_drive<11>" LOC = "P173";
NET "lcd_drive<12>" LOC = "P172";
NET "lcd_drive<13>" LOC = "P168";
NET "lcd_drive<14>" LOC = "P167";
NET "lcd_drive<15>" LOC = "P166";
NET "led<0>" LOC = "P10";
NET "led<1>" LOC = "P9";
NET "led<2>" LOC = "P8";
NET "led<3>" LOC = "P7";
NET "led<4>" LOC = "P6";
NET "led<5>" LOC = "P5";
NET "led<6>" LOC = "P4";
NET "led<7>" LOC = "P3";
NET "rs232_rxd" LOC = "P164";
NET "rs232_txd" LOC = "P165";
NET "switch<0>" LOC = "P206";
NET "switch<1>" LOC = "P205";
NET "switch<2>" LOC = "P204";
NET "switch<3>" LOC = "P203";

# Method 2: Group using the key word 'TIMEGRP' and declare using the names of
#           logic in your design. Example:
#TIMEGRP group_name = FFS ("U1/*");
#           creates a group called 'group_name' for all flip-flops within
#           the hierarchical block called U1. Wildcards are valid.
#

TIMEGRP "fast_clock_group_0" = FFS ("dds1/*");
TIMESPEC "TS_fast_clock_0" = PERIOD : "fast_clock_group_0" : 6 ;
TIMEGRP "fast_clock_group_1" = FFS ("clock_block_0/*");
TIMESPEC "TS_fast_clock_1" = PERIOD : "fast_clock_group_1" : 6 ;

# ---------------
# Multiple Clocks
# ---------------
# Requires a combination of the 'Period' and 'FROM:TO' type time specifications
#NET clock1 TNM_NET = clk1_grp ;
#NET clock2 TNM_NET = clk2_grp ;
#
#TIMESPEC TS_clk1 = PERIOD : clk1_grp : 50 ;
#TIMESPEC TS_clk2 = PERIOD : clk2_grp : 30 ;
#TIMESPEC TS_ck1_2_ck2 = FROM : clk1_grp : TO : clk2_grp : 50 ;
#TIMESPEC TS_ck2_2_ck1 = FROM : clk2_grp : TO : clk1_grp : 30 ;
#

NET "sys_clk_0" LOC = "P80";

#NET "ps2_clk<0>" LOC = "P201";
#NET "ps2_clk<1>" LOC = "P199";
#NET "ps2_clk<2>" LOC = "P194";
#NET "ps2_clk<3>" LOC = "P192";
#NET "ps2_data<0>" LOC = "P202";
#NET "ps2_data<1>" LOC = "P200";
#NET "ps2_data<2>" LOC = "P195";
#NET "ps2_data<3>" LOC = "P193";
#NET "ps2_clk<0>" PULLUP;
#NET "ps2_clk<1>" PULLUP;
#NET "ps2_clk<2>" PULLUP;
#NET "ps2_clk<3>" PULLUP;
#NET "ps2_data<0>" PULLUP;
#NET "ps2_data<1>" PULLUP;
#NET "ps2_data<2>" PULLUP;
#NET "ps2_data<3>" PULLUP;
# NOTE: port_f has PULLUPs because it is being used with a 
# thumbwheel switch that requires pullups.
NET "port_f<0>" LOC = "P31";
NET "port_f<1>" LOC = "P30";
NET "port_f<2>" LOC = "P29";
NET "port_f<3>" LOC = "P27";
NET "port_f<4>" LOC = "P24";
NET "port_f<5>" LOC = "P23";
NET "port_f<6>" LOC = "P22";
NET "port_f<7>" LOC = "P21";
NET "port_f<8>" LOC = "P20";
NET "port_f<9>" LOC = "P18";
NET "port_f<10>" LOC = "P17";
NET "port_f<11>" LOC = "P16";
NET "port_f<12>" LOC = "P15";
NET "port_f<13>" LOC = "P14";
NET "port_f<0>" PULLUP;
NET "port_f<1>" PULLUP;
NET "port_f<2>" PULLUP;
NET "port_f<3>" PULLUP;
NET "port_f<4>" PULLUP;
NET "port_f<5>" PULLUP;
NET "port_f<6>" PULLUP;
NET "port_f<7>" PULLUP;
NET "port_f<8>" PULLUP;
NET "port_f<9>" PULLUP;
NET "port_f<10>" PULLUP;
NET "port_f<11>" PULLUP;
NET "port_f<12>" PULLUP;
NET "port_f<13>" PULLUP;
NET "port_e<0>" LOC = "P49";
NET "port_e<1>" LOC = "P48";
NET "port_e<2>" LOC = "P47";
NET "port_e<3>" LOC = "P46";
NET "port_e<4>" LOC = "P45";
NET "port_e<5>" LOC = "P44";
NET "port_e<6>" LOC = "P43";
NET "port_e<7>" LOC = "P42";
NET "port_e<8>" LOC = "P41";
NET "port_e<9>" LOC = "P37";
NET "port_e<10>" LOC = "P36";
NET "port_e<11>" LOC = "P35";
NET "port_e<12>" LOC = "P34";
NET "port_e<13>" LOC = "P33";
NET "dat_o<0>" LOC = "P57";
NET "dat_o<1>" LOC = "P58";
NET "dat_o<2>" LOC = "P59";
NET "dat_o<3>" LOC = "P60";
NET "dat_o<4>" LOC = "P61";
NET "dat_o<5>" LOC = "P62";
NET "dat_o<6>" LOC = "P63";
NET "dat_o<7>" LOC = "P67";
NET "dat_o<8>" LOC = "P68";
NET "dat_o<9>" LOC = "P69";
NET "dat_o<10>" LOC = "P70";
NET "dat_o<11>" LOC = "P71";
NET "dat_o<12>" LOC = "P73";
NET "dat_o<13>" LOC = "P74";
NET "dat_o<14>" LOC = "P75";
NET "dat_o<15>" LOC = "P81";
