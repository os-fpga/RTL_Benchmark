/* Generated by Yosys 0.16+65 (git sha1 051517d61, gcc 9.1.0 -fPIC -Os) */

module Log2highacc(clk, DOUT, DIN);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  input [23:0] DIN;
  wire [23:0] DIN;
  output [11:0] DOUT;
  wire [11:0] DOUT;
  wire [5:0] barrelout;
  input clk;
  wire clk;
  dffsre _060_ (
    .C(clk),
    .D(_037_),
    .E(1'b1),
    .Q(_000_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _061_ (
    .C(clk),
    .D(_001_),
    .E(1'b1),
    .Q(DOUT[0]),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _062_ (
    .C(clk),
    .D(_002_),
    .E(1'b1),
    .Q(DOUT[1]),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _063_ (
    .C(clk),
    .D(_003_),
    .E(1'b1),
    .Q(DOUT[2]),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _064_ (
    .C(clk),
    .D(_004_),
    .E(1'b1),
    .Q(DOUT[3]),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _065_ (
    .C(clk),
    .D(_005_),
    .E(1'b1),
    .Q(DOUT[4]),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _066_ (
    .C(clk),
    .D(_006_),
    .E(1'b1),
    .Q(DOUT[5]),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _067_ (
    .C(clk),
    .D(_007_),
    .E(1'b1),
    .Q(DOUT[6]),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _068_ (
    .C(clk),
    .D(_008_),
    .E(1'b1),
    .Q(_009_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _069_ (
    .C(clk),
    .D(_009_),
    .E(1'b1),
    .Q(_016_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _070_ (
    .C(clk),
    .D(_010_),
    .E(1'b1),
    .Q(_011_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _071_ (
    .C(clk),
    .D(_011_),
    .E(1'b1),
    .Q(_017_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _072_ (
    .C(clk),
    .D(_012_),
    .E(1'b1),
    .Q(_013_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _073_ (
    .C(clk),
    .D(_013_),
    .E(1'b1),
    .Q(_018_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _074_ (
    .C(clk),
    .D(_014_),
    .E(1'b1),
    .Q(_015_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _075_ (
    .C(clk),
    .D(_015_),
    .E(1'b1),
    .Q(_019_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _076_ (
    .C(clk),
    .D(_016_),
    .E(1'b1),
    .Q(DOUT[8]),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _077_ (
    .C(clk),
    .D(_017_),
    .E(1'b1),
    .Q(DOUT[9]),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _078_ (
    .C(clk),
    .D(_018_),
    .E(1'b1),
    .Q(DOUT[10]),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _079_ (
    .C(clk),
    .D(_019_),
    .E(1'b1),
    .Q(DOUT[11]),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _080_ (
    .C(clk),
    .D(_020_),
    .E(1'b1),
    .Q(_032_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _081_ (
    .C(clk),
    .D(_021_),
    .E(1'b1),
    .Q(_033_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _082_ (
    .C(clk),
    .D(_022_),
    .E(1'b1),
    .Q(_034_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _083_ (
    .C(clk),
    .D(_023_),
    .E(1'b1),
    .Q(_035_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _084_ (
    .C(clk),
    .D(_024_),
    .E(1'b1),
    .Q(_036_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _085_ (
    .C(clk),
    .D(_025_),
    .E(1'b1),
    .Q(barrelout[5]),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _086_ (
    .C(clk),
    .D(_026_),
    .E(1'b1),
    .Q(_020_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _087_ (
    .C(clk),
    .D(_027_),
    .E(1'b1),
    .Q(_021_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _088_ (
    .C(clk),
    .D(_028_),
    .E(1'b1),
    .Q(_022_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _089_ (
    .C(clk),
    .D(_029_),
    .E(1'b1),
    .Q(_023_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _090_ (
    .C(clk),
    .D(_030_),
    .E(1'b1),
    .Q(_024_),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _091_ (
    .C(clk),
    .D(_031_),
    .E(1'b1),
    .Q(_025_),
    .R(1'b1),
    .S(1'b1)
  );
  assign _037_ = 64'b0000000000000111000000001111111100000000111111110000000011111111 >> { _035_, _036_, barrelout[5], _034_, _032_, _033_ };
  assign _007_ = 64'b1111111100001110111100000111000011110000111100001111000011110000 >> { _035_, _034_, barrelout[5], _036_, _032_, _033_ };
  assign _038_ = 16'b0000000000000001 >> { DIN[22], DIN[23], DIN[20], DIN[21] };
  assign _039_ = 16'b0000000000000001 >> { DIN[17:16], DIN[18], DIN[19] };
  assign _040_ = 32'd65279 >> { DIN[15], DIN[11], DIN[14:12] };
  assign _041_ = 64'b1111111111111111000100001111111100000000000000000000000000000000 >> { _039_, DIN[14], _040_, DIN[10], DIN[13:12] };
  assign _010_ = 64'b1111111111111111111111101111111011111111111111111111111100000000 >> { _038_, DIN[23:22], DIN[18], _041_, DIN[19] };
  assign _014_ = 4'b0111 >> { _039_, _038_ };
  assign _042_ = 32'd65296 >> { DIN[14:13], DIN[9], DIN[10], DIN[12] };
  assign _043_ = 32'd4110369860 >> { _039_, _040_, _042_, DIN[17], DIN[18] };
  assign _008_ = 64'b1111111111111111111111111111111100000000111111110000000000001110 >> { DIN[23], DIN[21], DIN[22], DIN[20:19], _043_ };
  assign _003_ = 64'b1111000000101111000000011010000100111111010100111101111001011010 >> { _032_, _034_, _036_, barrelout[5], _033_, _035_ };
  assign _012_ = 64'b1111111111111110000000000000000011111111111111111111111111111111 >> { _038_, _039_, DIN[14], DIN[15], DIN[12], DIN[13] };
  assign _044_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _008_, _010_, DIN[13:10] };
  assign _045_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _008_, _010_, DIN[5:2] };
  assign _046_ = 64'b0000111100000011000011110000001100000000000000001111111101010101 >> { _008_, DIN[14], _014_, DIN[15], DIN[7:6] };
  assign _047_ = 64'b0000111100000011000011110000001100000000000000001111111101010101 >> { _008_, DIN[16], _014_, DIN[17], DIN[9:8] };
  assign _048_ = 8'b00110101 >> { _010_, _047_, _046_ };
  assign _026_ = 32'd4278252788 >> { _012_, _048_, _044_, _045_, _014_ };
  assign _006_ = 64'b1111000011110111000000011111111111001111000010001111110010000000 >> { _035_, _036_, _034_, barrelout[5], _033_, _032_ };
  assign _005_ = 64'b1010110011110000110100110100111101000000000001111011111011111000 >> { _036_, _034_, _033_, barrelout[5], _032_, _035_ };
  assign _004_ = 64'b1011001111111110010000110011000101011100000000111011100011001000 >> { _033_, _035_, _036_, barrelout[5], _032_, _034_ };
  assign _002_ = 64'b0010111010110000001010101010101111100010000000111111011111011100 >> { _033_, _034_, _036_, _032_, barrelout[5], _035_ };
  assign _001_ = 64'b1010000011110100101000000001101010100111001001100111001011001100 >> { _036_, _034_, _035_, _032_, _033_, barrelout[5] };
  assign _049_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _008_, _010_, DIN[14:11] };
  assign _050_ = 64'b0000111100000011000011110000001100000000000000001111111101010101 >> { _008_, DIN[19], _014_, DIN[20], DIN[12:11] };
  assign _051_ = 64'b0000000000001111000000000000001111111111101010100011001100110011 >> { DIN[22], _014_, DIN[23], DIN[21], _049_, _050_ };
  assign _052_ = 64'b0000111100000011000011110000001100000000000000001111111101010101 >> { _008_, DIN[15], _014_, DIN[16], DIN[8:7] };
  assign _053_ = 64'b0000111100000011000011110000001100000000000000001111111101010101 >> { _008_, DIN[17], _014_, DIN[18], DIN[10:9] };
  assign _054_ = 8'b00110101 >> { _010_, _053_, _052_ };
  assign _031_ = 8'b01001111 >> { _051_, _054_, _012_ };
  assign _055_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _008_, _010_, DIN[21:18] };
  assign _030_ = 32'd4282712048 >> { _012_, _055_, _048_, _044_, _014_ };
  assign _056_ = 64'b0000111100000011000011110000001100000000000000001111111101010101 >> { _008_, DIN[13], _014_, DIN[14], DIN[6:5] };
  assign _029_ = 64'b0000000011111111001100111111111100001111000011110101111101011111 >> { _010_, _012_, _050_, _053_, _052_, _056_ };
  assign _057_ = 64'b0000111100000011000011110000001100000000000000001111111101010101 >> { _008_, DIN[12], _014_, DIN[13], DIN[5:4] };
  assign _058_ = 64'b0000111100000011000011110000001100000000000000001111111101010101 >> { _008_, DIN[18], _014_, DIN[19], DIN[11:10] };
  assign _028_ = 64'b0000000011111111001100110011001100001111000011110101010101010101 >> { _010_, _012_, _058_, _047_, _046_, _057_ };
  assign _059_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { _008_, _010_, DIN[6:3] };
  assign _027_ = 32'd4278252788 >> { _012_, _054_, _049_, _059_, _014_ };
  assign DOUT[7] = 2'b01 >> _000_;
endmodule
