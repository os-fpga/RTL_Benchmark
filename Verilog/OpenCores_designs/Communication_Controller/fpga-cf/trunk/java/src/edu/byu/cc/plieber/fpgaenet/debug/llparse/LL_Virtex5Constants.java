/* Generated By:JavaCC: Do not edit this line. LL_Virtex5Constants.java */
/*
@LICENSE@
*/
package edu.byu.cc.plieber.fpgaenet.debug.llparse;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface LL_Virtex5Constants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int NUM = 6;
  /** RegularExpression Id. */
  int HEXNUM = 7;
  /** RegularExpression Id. */
  int EQUAL = 8;
  /** RegularExpression Id. */
  int TYPE = 9;
  /** RegularExpression Id. */
  int LUT = 10;
  /** RegularExpression Id. */
  int BLOCKRAM = 11;
  /** RegularExpression Id. */
  int SLICEBLOCK = 12;
  /** RegularExpression Id. */
  int BRAMBLOCK = 13;
  /** RegularExpression Id. */
  int GTPBLOCK = 14;
  /** RegularExpression Id. */
  int DCMBLOCK = 15;
  /** RegularExpression Id. */
  int PINBLOCK = 16;
  /** RegularExpression Id. */
  int AQ = 17;
  /** RegularExpression Id. */
  int BQ = 18;
  /** RegularExpression Id. */
  int CQ = 19;
  /** RegularExpression Id. */
  int DQ = 20;
  /** RegularExpression Id. */
  int Q1 = 21;
  /** RegularExpression Id. */
  int Q2 = 22;
  /** RegularExpression Id. */
  int I = 23;
  /** RegularExpression Id. */
  int O = 24;
  /** RegularExpression Id. */
  int DO = 25;
  /** RegularExpression Id. */
  int COLON = 26;
  /** RegularExpression Id. */
  int LANGLE = 27;
  /** RegularExpression Id. */
  int RANGLE = 28;
  /** RegularExpression Id. */
  int LBRACKET = 29;
  /** RegularExpression Id. */
  int RBRACKET = 30;
  /** RegularExpression Id. */
  int REVISION = 31;
  /** RegularExpression Id. */
  int BIT = 32;
  /** RegularExpression Id. */
  int BLOCK = 33;
  /** RegularExpression Id. */
  int LATCH = 34;
  /** RegularExpression Id. */
  int RAM = 35;
  /** RegularExpression Id. */
  int ROM = 36;
  /** RegularExpression Id. */
  int NET = 37;
  /** RegularExpression Id. */
  int YES = 38;
  /** RegularExpression Id. */
  int NO = 39;
  /** RegularExpression Id. */
  int COMPARE = 40;
  /** RegularExpression Id. */
  int INFO = 41;
  /** RegularExpression Id. */
  int ID = 42;
  /** RegularExpression Id. */
  int NETEXT = 43;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_LINE_COMMENT = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\";\"",
    "\"\\n\"",
    "<token of kind 5>",
    "<NUM>",
    "<HEXNUM>",
    "\"=\"",
    "\"Type\"",
    "<LUT>",
    "\"B\"",
    "<SLICEBLOCK>",
    "<BRAMBLOCK>",
    "<GTPBLOCK>",
    "<DCMBLOCK>",
    "<PINBLOCK>",
    "\"AQ\"",
    "\"BQ\"",
    "\"CQ\"",
    "\"DQ\"",
    "\"Q1\"",
    "\"Q2\"",
    "\"I\"",
    "\"O\"",
    "<DO>",
    "\":\"",
    "\"<\"",
    "\">\"",
    "\"[\"",
    "\"]\"",
    "\"Revision\"",
    "\"Bit\"",
    "\"Block\"",
    "\"Latch\"",
    "\"Ram\"",
    "\"Rom\"",
    "\"Net\"",
    "\"YES\"",
    "\"NO\"",
    "\"COMPARE\"",
    "\"Info\"",
    "<ID>",
    "<NETEXT>",
    "\"\\r\"",
    "\"\\n\"",
    "\"\\r\\n\"",
  };

}
