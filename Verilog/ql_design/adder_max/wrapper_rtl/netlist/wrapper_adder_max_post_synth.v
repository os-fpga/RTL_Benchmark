/* Generated by Yosys 0.16+65 (git sha1 051517d61, gcc 9.1.0 -fPIC -Os) */

module wrapper_adder_max(cout, cin, a, b, sum);
  wire _000_;
  wire [91:0] _001_;
  wire [90:0] _002_;
  input [89:0] a;
  wire [89:0] a;
  input [89:0] b;
  wire [89:0] b;
  input cin;
  wire cin;
  output cout;
  wire cout;
  output [89:0] sum;
  wire [89:0] sum;
  assign _002_[54] = 4'b0110 >> { b[54], a[54] };
  assign _002_[55] = 4'b0110 >> { b[55], a[55] };
  assign _002_[56] = 4'b0110 >> { b[56], a[56] };
  assign _002_[57] = 4'b0110 >> { b[57], a[57] };
  assign _002_[58] = 4'b0110 >> { b[58], a[58] };
  assign _002_[59] = 4'b0110 >> { b[59], a[59] };
  assign _002_[60] = 4'b0110 >> { b[60], a[60] };
  assign _002_[61] = 4'b0110 >> { b[61], a[61] };
  assign _002_[62] = 4'b0110 >> { b[62], a[62] };
  assign _002_[63] = 4'b0110 >> { b[63], a[63] };
  assign _002_[64] = 4'b0110 >> { b[64], a[64] };
  assign _002_[65] = 4'b0110 >> { b[65], a[65] };
  assign _002_[66] = 4'b0110 >> { b[66], a[66] };
  assign _002_[67] = 4'b0110 >> { b[67], a[67] };
  assign _002_[68] = 4'b0110 >> { b[68], a[68] };
  assign _002_[69] = 4'b0110 >> { b[69], a[69] };
  assign _002_[70] = 4'b0110 >> { b[70], a[70] };
  assign _002_[71] = 4'b0110 >> { b[71], a[71] };
  assign _002_[72] = 4'b0110 >> { b[72], a[72] };
  assign _002_[73] = 4'b0110 >> { b[73], a[73] };
  assign _002_[74] = 4'b0110 >> { b[74], a[74] };
  assign _002_[75] = 4'b0110 >> { b[75], a[75] };
  assign _002_[76] = 4'b0110 >> { b[76], a[76] };
  assign _002_[77] = 4'b0110 >> { b[77], a[77] };
  assign _002_[78] = 4'b0110 >> { b[78], a[78] };
  assign _002_[79] = 4'b0110 >> { b[79], a[79] };
  assign _002_[80] = 4'b0110 >> { b[80], a[80] };
  assign _002_[81] = 4'b0110 >> { b[81], a[81] };
  assign _002_[82] = 4'b0110 >> { b[82], a[82] };
  assign _002_[83] = 4'b0110 >> { b[83], a[83] };
  assign _002_[84] = 4'b0110 >> { b[84], a[84] };
  assign _002_[85] = 4'b0110 >> { b[85], a[85] };
  assign _002_[86] = 4'b0110 >> { b[86], a[86] };
  assign _002_[87] = 4'b0110 >> { b[87], a[87] };
  assign _002_[88] = 4'b0110 >> { b[88], a[88] };
  assign cout = 8'b11101000 >> { b[89], a[89], _000_ };
  assign sum[89] = 8'b10010110 >> { _000_, b[89], a[89] };
  assign _002_[0] = 4'b0110 >> { b[0], a[0] };
  assign _002_[1] = 4'b0110 >> { b[1], a[1] };
  assign _002_[2] = 4'b0110 >> { b[2], a[2] };
  assign _002_[3] = 4'b0110 >> { b[3], a[3] };
  assign _002_[4] = 4'b0110 >> { b[4], a[4] };
  assign _002_[5] = 4'b0110 >> { b[5], a[5] };
  assign _002_[6] = 4'b0110 >> { b[6], a[6] };
  assign _002_[7] = 4'b0110 >> { b[7], a[7] };
  assign _002_[8] = 4'b0110 >> { b[8], a[8] };
  assign _002_[9] = 4'b0110 >> { b[9], a[9] };
  assign _002_[10] = 4'b0110 >> { b[10], a[10] };
  assign _002_[11] = 4'b0110 >> { b[11], a[11] };
  assign _002_[12] = 4'b0110 >> { b[12], a[12] };
  assign _002_[13] = 4'b0110 >> { b[13], a[13] };
  assign _002_[14] = 4'b0110 >> { b[14], a[14] };
  assign _002_[15] = 4'b0110 >> { b[15], a[15] };
  assign _002_[16] = 4'b0110 >> { b[16], a[16] };
  assign _002_[17] = 4'b0110 >> { b[17], a[17] };
  assign _002_[18] = 4'b0110 >> { b[18], a[18] };
  assign _002_[19] = 4'b0110 >> { b[19], a[19] };
  assign _002_[20] = 4'b0110 >> { b[20], a[20] };
  assign _002_[21] = 4'b0110 >> { b[21], a[21] };
  assign _002_[22] = 4'b0110 >> { b[22], a[22] };
  assign _002_[23] = 4'b0110 >> { b[23], a[23] };
  assign _002_[24] = 4'b0110 >> { b[24], a[24] };
  assign _002_[25] = 4'b0110 >> { b[25], a[25] };
  assign _002_[26] = 4'b0110 >> { b[26], a[26] };
  assign _002_[27] = 4'b0110 >> { b[27], a[27] };
  assign _002_[28] = 4'b0110 >> { b[28], a[28] };
  assign _002_[29] = 4'b0110 >> { b[29], a[29] };
  assign _002_[30] = 4'b0110 >> { b[30], a[30] };
  assign _002_[31] = 4'b0110 >> { b[31], a[31] };
  assign _002_[32] = 4'b0110 >> { b[32], a[32] };
  assign _002_[33] = 4'b0110 >> { b[33], a[33] };
  assign _002_[34] = 4'b0110 >> { b[34], a[34] };
  assign _002_[35] = 4'b0110 >> { b[35], a[35] };
  assign _002_[36] = 4'b0110 >> { b[36], a[36] };
  assign _002_[37] = 4'b0110 >> { b[37], a[37] };
  assign _002_[38] = 4'b0110 >> { b[38], a[38] };
  assign _002_[39] = 4'b0110 >> { b[39], a[39] };
  assign _002_[40] = 4'b0110 >> { b[40], a[40] };
  assign _002_[41] = 4'b0110 >> { b[41], a[41] };
  assign _002_[42] = 4'b0110 >> { b[42], a[42] };
  assign _002_[43] = 4'b0110 >> { b[43], a[43] };
  assign _002_[44] = 4'b0110 >> { b[44], a[44] };
  assign _002_[45] = 4'b0110 >> { b[45], a[45] };
  assign _002_[46] = 4'b0110 >> { b[46], a[46] };
  assign _002_[47] = 4'b0110 >> { b[47], a[47] };
  assign _002_[48] = 4'b0110 >> { b[48], a[48] };
  assign _002_[49] = 4'b0110 >> { b[49], a[49] };
  assign _002_[50] = 4'b0110 >> { b[50], a[50] };
  assign _002_[51] = 4'b0110 >> { b[51], a[51] };
  assign _002_[52] = 4'b0110 >> { b[52], a[52] };
  assign _002_[53] = 4'b0110 >> { b[53], a[53] };
  adder_carry _094_ (
    .cin(_001_[89]),
    .g(1'b0),
    .p(1'b0),
    .sumout(_000_)
  );
  adder_carry _095_ (
    .cin(_001_[0]),
    .cout(_001_[1]),
    .g(a[0]),
    .p(_002_[0]),
    .sumout(sum[0])
  );
  adder_carry _096_ (
    .cin(_001_[10]),
    .cout(_001_[11]),
    .g(a[10]),
    .p(_002_[10]),
    .sumout(sum[10])
  );
  adder_carry _097_ (
    .cin(_001_[11]),
    .cout(_001_[12]),
    .g(a[11]),
    .p(_002_[11]),
    .sumout(sum[11])
  );
  adder_carry _098_ (
    .cin(_001_[12]),
    .cout(_001_[13]),
    .g(a[12]),
    .p(_002_[12]),
    .sumout(sum[12])
  );
  adder_carry _099_ (
    .cin(_001_[13]),
    .cout(_001_[14]),
    .g(a[13]),
    .p(_002_[13]),
    .sumout(sum[13])
  );
  adder_carry _100_ (
    .cin(_001_[14]),
    .cout(_001_[15]),
    .g(a[14]),
    .p(_002_[14]),
    .sumout(sum[14])
  );
  adder_carry _101_ (
    .cin(_001_[15]),
    .cout(_001_[16]),
    .g(a[15]),
    .p(_002_[15]),
    .sumout(sum[15])
  );
  adder_carry _102_ (
    .cin(_001_[16]),
    .cout(_001_[17]),
    .g(a[16]),
    .p(_002_[16]),
    .sumout(sum[16])
  );
  adder_carry _103_ (
    .cin(_001_[17]),
    .cout(_001_[18]),
    .g(a[17]),
    .p(_002_[17]),
    .sumout(sum[17])
  );
  adder_carry _104_ (
    .cin(_001_[18]),
    .cout(_001_[19]),
    .g(a[18]),
    .p(_002_[18]),
    .sumout(sum[18])
  );
  adder_carry _105_ (
    .cin(_001_[19]),
    .cout(_001_[20]),
    .g(a[19]),
    .p(_002_[19]),
    .sumout(sum[19])
  );
  adder_carry _106_ (
    .cin(_001_[1]),
    .cout(_001_[2]),
    .g(a[1]),
    .p(_002_[1]),
    .sumout(sum[1])
  );
  adder_carry _107_ (
    .cin(_001_[20]),
    .cout(_001_[21]),
    .g(a[20]),
    .p(_002_[20]),
    .sumout(sum[20])
  );
  adder_carry _108_ (
    .cin(_001_[21]),
    .cout(_001_[22]),
    .g(a[21]),
    .p(_002_[21]),
    .sumout(sum[21])
  );
  adder_carry _109_ (
    .cin(_001_[22]),
    .cout(_001_[23]),
    .g(a[22]),
    .p(_002_[22]),
    .sumout(sum[22])
  );
  adder_carry _110_ (
    .cin(_001_[23]),
    .cout(_001_[24]),
    .g(a[23]),
    .p(_002_[23]),
    .sumout(sum[23])
  );
  adder_carry _111_ (
    .cin(_001_[24]),
    .cout(_001_[25]),
    .g(a[24]),
    .p(_002_[24]),
    .sumout(sum[24])
  );
  adder_carry _112_ (
    .cin(_001_[25]),
    .cout(_001_[26]),
    .g(a[25]),
    .p(_002_[25]),
    .sumout(sum[25])
  );
  adder_carry _113_ (
    .cin(_001_[26]),
    .cout(_001_[27]),
    .g(a[26]),
    .p(_002_[26]),
    .sumout(sum[26])
  );
  adder_carry _114_ (
    .cin(_001_[27]),
    .cout(_001_[28]),
    .g(a[27]),
    .p(_002_[27]),
    .sumout(sum[27])
  );
  adder_carry _115_ (
    .cin(_001_[28]),
    .cout(_001_[29]),
    .g(a[28]),
    .p(_002_[28]),
    .sumout(sum[28])
  );
  adder_carry _116_ (
    .cin(_001_[29]),
    .cout(_001_[30]),
    .g(a[29]),
    .p(_002_[29]),
    .sumout(sum[29])
  );
  adder_carry _117_ (
    .cin(_001_[2]),
    .cout(_001_[3]),
    .g(a[2]),
    .p(_002_[2]),
    .sumout(sum[2])
  );
  adder_carry _118_ (
    .cin(_001_[30]),
    .cout(_001_[31]),
    .g(a[30]),
    .p(_002_[30]),
    .sumout(sum[30])
  );
  adder_carry _119_ (
    .cin(_001_[31]),
    .cout(_001_[32]),
    .g(a[31]),
    .p(_002_[31]),
    .sumout(sum[31])
  );
  adder_carry _120_ (
    .cin(_001_[32]),
    .cout(_001_[33]),
    .g(a[32]),
    .p(_002_[32]),
    .sumout(sum[32])
  );
  adder_carry _121_ (
    .cin(_001_[33]),
    .cout(_001_[34]),
    .g(a[33]),
    .p(_002_[33]),
    .sumout(sum[33])
  );
  adder_carry _122_ (
    .cin(_001_[34]),
    .cout(_001_[35]),
    .g(a[34]),
    .p(_002_[34]),
    .sumout(sum[34])
  );
  adder_carry _123_ (
    .cin(_001_[35]),
    .cout(_001_[36]),
    .g(a[35]),
    .p(_002_[35]),
    .sumout(sum[35])
  );
  adder_carry _124_ (
    .cin(_001_[36]),
    .cout(_001_[37]),
    .g(a[36]),
    .p(_002_[36]),
    .sumout(sum[36])
  );
  adder_carry _125_ (
    .cin(_001_[37]),
    .cout(_001_[38]),
    .g(a[37]),
    .p(_002_[37]),
    .sumout(sum[37])
  );
  adder_carry _126_ (
    .cin(_001_[38]),
    .cout(_001_[39]),
    .g(a[38]),
    .p(_002_[38]),
    .sumout(sum[38])
  );
  adder_carry _127_ (
    .cin(_001_[39]),
    .cout(_001_[40]),
    .g(a[39]),
    .p(_002_[39]),
    .sumout(sum[39])
  );
  adder_carry _128_ (
    .cin(_001_[3]),
    .cout(_001_[4]),
    .g(a[3]),
    .p(_002_[3]),
    .sumout(sum[3])
  );
  adder_carry _129_ (
    .cin(_001_[40]),
    .cout(_001_[41]),
    .g(a[40]),
    .p(_002_[40]),
    .sumout(sum[40])
  );
  adder_carry _130_ (
    .cin(_001_[41]),
    .cout(_001_[42]),
    .g(a[41]),
    .p(_002_[41]),
    .sumout(sum[41])
  );
  adder_carry _131_ (
    .cin(_001_[42]),
    .cout(_001_[43]),
    .g(a[42]),
    .p(_002_[42]),
    .sumout(sum[42])
  );
  adder_carry _132_ (
    .cin(_001_[43]),
    .cout(_001_[44]),
    .g(a[43]),
    .p(_002_[43]),
    .sumout(sum[43])
  );
  adder_carry _133_ (
    .cin(_001_[44]),
    .cout(_001_[45]),
    .g(a[44]),
    .p(_002_[44]),
    .sumout(sum[44])
  );
  adder_carry _134_ (
    .cin(_001_[45]),
    .cout(_001_[46]),
    .g(a[45]),
    .p(_002_[45]),
    .sumout(sum[45])
  );
  adder_carry _135_ (
    .cin(_001_[46]),
    .cout(_001_[47]),
    .g(a[46]),
    .p(_002_[46]),
    .sumout(sum[46])
  );
  adder_carry _136_ (
    .cin(_001_[47]),
    .cout(_001_[48]),
    .g(a[47]),
    .p(_002_[47]),
    .sumout(sum[47])
  );
  adder_carry _137_ (
    .cin(_001_[48]),
    .cout(_001_[49]),
    .g(a[48]),
    .p(_002_[48]),
    .sumout(sum[48])
  );
  adder_carry _138_ (
    .cin(_001_[49]),
    .cout(_001_[50]),
    .g(a[49]),
    .p(_002_[49]),
    .sumout(sum[49])
  );
  adder_carry _139_ (
    .cin(_001_[4]),
    .cout(_001_[5]),
    .g(a[4]),
    .p(_002_[4]),
    .sumout(sum[4])
  );
  adder_carry _140_ (
    .cin(_001_[50]),
    .cout(_001_[51]),
    .g(a[50]),
    .p(_002_[50]),
    .sumout(sum[50])
  );
  adder_carry _141_ (
    .cin(_001_[51]),
    .cout(_001_[52]),
    .g(a[51]),
    .p(_002_[51]),
    .sumout(sum[51])
  );
  adder_carry _142_ (
    .cin(_001_[52]),
    .cout(_001_[53]),
    .g(a[52]),
    .p(_002_[52]),
    .sumout(sum[52])
  );
  adder_carry _143_ (
    .cin(_001_[53]),
    .cout(_001_[54]),
    .g(a[53]),
    .p(_002_[53]),
    .sumout(sum[53])
  );
  adder_carry _144_ (
    .cin(_001_[54]),
    .cout(_001_[55]),
    .g(a[54]),
    .p(_002_[54]),
    .sumout(sum[54])
  );
  adder_carry _145_ (
    .cin(_001_[55]),
    .cout(_001_[56]),
    .g(a[55]),
    .p(_002_[55]),
    .sumout(sum[55])
  );
  adder_carry _146_ (
    .cin(_001_[56]),
    .cout(_001_[57]),
    .g(a[56]),
    .p(_002_[56]),
    .sumout(sum[56])
  );
  adder_carry _147_ (
    .cin(_001_[57]),
    .cout(_001_[58]),
    .g(a[57]),
    .p(_002_[57]),
    .sumout(sum[57])
  );
  adder_carry _148_ (
    .cin(_001_[58]),
    .cout(_001_[59]),
    .g(a[58]),
    .p(_002_[58]),
    .sumout(sum[58])
  );
  adder_carry _149_ (
    .cin(_001_[59]),
    .cout(_001_[60]),
    .g(a[59]),
    .p(_002_[59]),
    .sumout(sum[59])
  );
  adder_carry _150_ (
    .cin(_001_[5]),
    .cout(_001_[6]),
    .g(a[5]),
    .p(_002_[5]),
    .sumout(sum[5])
  );
  adder_carry _151_ (
    .cin(_001_[60]),
    .cout(_001_[61]),
    .g(a[60]),
    .p(_002_[60]),
    .sumout(sum[60])
  );
  adder_carry _152_ (
    .cin(_001_[61]),
    .cout(_001_[62]),
    .g(a[61]),
    .p(_002_[61]),
    .sumout(sum[61])
  );
  adder_carry _153_ (
    .cin(_001_[62]),
    .cout(_001_[63]),
    .g(a[62]),
    .p(_002_[62]),
    .sumout(sum[62])
  );
  adder_carry _154_ (
    .cin(_001_[63]),
    .cout(_001_[64]),
    .g(a[63]),
    .p(_002_[63]),
    .sumout(sum[63])
  );
  adder_carry _155_ (
    .cin(_001_[64]),
    .cout(_001_[65]),
    .g(a[64]),
    .p(_002_[64]),
    .sumout(sum[64])
  );
  adder_carry _156_ (
    .cin(_001_[65]),
    .cout(_001_[66]),
    .g(a[65]),
    .p(_002_[65]),
    .sumout(sum[65])
  );
  adder_carry _157_ (
    .cin(_001_[66]),
    .cout(_001_[67]),
    .g(a[66]),
    .p(_002_[66]),
    .sumout(sum[66])
  );
  adder_carry _158_ (
    .cin(_001_[67]),
    .cout(_001_[68]),
    .g(a[67]),
    .p(_002_[67]),
    .sumout(sum[67])
  );
  adder_carry _159_ (
    .cin(_001_[68]),
    .cout(_001_[69]),
    .g(a[68]),
    .p(_002_[68]),
    .sumout(sum[68])
  );
  adder_carry _160_ (
    .cin(_001_[69]),
    .cout(_001_[70]),
    .g(a[69]),
    .p(_002_[69]),
    .sumout(sum[69])
  );
  adder_carry _161_ (
    .cin(_001_[6]),
    .cout(_001_[7]),
    .g(a[6]),
    .p(_002_[6]),
    .sumout(sum[6])
  );
  adder_carry _162_ (
    .cin(_001_[70]),
    .cout(_001_[71]),
    .g(a[70]),
    .p(_002_[70]),
    .sumout(sum[70])
  );
  adder_carry _163_ (
    .cin(_001_[71]),
    .cout(_001_[72]),
    .g(a[71]),
    .p(_002_[71]),
    .sumout(sum[71])
  );
  adder_carry _164_ (
    .cin(_001_[72]),
    .cout(_001_[73]),
    .g(a[72]),
    .p(_002_[72]),
    .sumout(sum[72])
  );
  adder_carry _165_ (
    .cin(_001_[73]),
    .cout(_001_[74]),
    .g(a[73]),
    .p(_002_[73]),
    .sumout(sum[73])
  );
  adder_carry _166_ (
    .cin(_001_[74]),
    .cout(_001_[75]),
    .g(a[74]),
    .p(_002_[74]),
    .sumout(sum[74])
  );
  adder_carry _167_ (
    .cin(_001_[75]),
    .cout(_001_[76]),
    .g(a[75]),
    .p(_002_[75]),
    .sumout(sum[75])
  );
  adder_carry _168_ (
    .cin(_001_[76]),
    .cout(_001_[77]),
    .g(a[76]),
    .p(_002_[76]),
    .sumout(sum[76])
  );
  adder_carry _169_ (
    .cin(_001_[77]),
    .cout(_001_[78]),
    .g(a[77]),
    .p(_002_[77]),
    .sumout(sum[77])
  );
  adder_carry _170_ (
    .cin(_001_[78]),
    .cout(_001_[79]),
    .g(a[78]),
    .p(_002_[78]),
    .sumout(sum[78])
  );
  adder_carry _171_ (
    .cin(_001_[79]),
    .cout(_001_[80]),
    .g(a[79]),
    .p(_002_[79]),
    .sumout(sum[79])
  );
  adder_carry _172_ (
    .cin(_001_[7]),
    .cout(_001_[8]),
    .g(a[7]),
    .p(_002_[7]),
    .sumout(sum[7])
  );
  adder_carry _173_ (
    .cin(_001_[80]),
    .cout(_001_[81]),
    .g(a[80]),
    .p(_002_[80]),
    .sumout(sum[80])
  );
  adder_carry _174_ (
    .cin(_001_[81]),
    .cout(_001_[82]),
    .g(a[81]),
    .p(_002_[81]),
    .sumout(sum[81])
  );
  adder_carry _175_ (
    .cin(_001_[82]),
    .cout(_001_[83]),
    .g(a[82]),
    .p(_002_[82]),
    .sumout(sum[82])
  );
  adder_carry _176_ (
    .cin(_001_[83]),
    .cout(_001_[84]),
    .g(a[83]),
    .p(_002_[83]),
    .sumout(sum[83])
  );
  adder_carry _177_ (
    .cin(_001_[84]),
    .cout(_001_[85]),
    .g(a[84]),
    .p(_002_[84]),
    .sumout(sum[84])
  );
  adder_carry _178_ (
    .cin(_001_[85]),
    .cout(_001_[86]),
    .g(a[85]),
    .p(_002_[85]),
    .sumout(sum[85])
  );
  adder_carry _179_ (
    .cin(_001_[86]),
    .cout(_001_[87]),
    .g(a[86]),
    .p(_002_[86]),
    .sumout(sum[86])
  );
  adder_carry _180_ (
    .cin(_001_[87]),
    .cout(_001_[88]),
    .g(a[87]),
    .p(_002_[87]),
    .sumout(sum[87])
  );
  adder_carry _181_ (
    .cin(_001_[88]),
    .cout(_001_[89]),
    .g(a[88]),
    .p(_002_[88]),
    .sumout(sum[88])
  );
  adder_carry _182_ (
    .cin(_001_[8]),
    .cout(_001_[9]),
    .g(a[8]),
    .p(_002_[8]),
    .sumout(sum[8])
  );
  adder_carry _183_ (
    .cin(_001_[9]),
    .cout(_001_[10]),
    .g(a[9]),
    .p(_002_[9]),
    .sumout(sum[9])
  );
  adder_carry _184_ (
    .cout(_001_[0]),
    .g(cin),
    .p(1'b0)
  );
  assign _001_[91:90] = { 1'b0, cout };
  assign _002_[90] = 1'b0;
endmodule
