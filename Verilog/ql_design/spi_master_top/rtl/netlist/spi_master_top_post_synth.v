/* Generated by Yosys 0.16+65 (git sha1 051517d61, gcc 9.1.0 -fPIC -Os) */

module spi_master_top(wb_clk_i, wb_rst_i, arst_i, wb_we_i, wb_stb_i, wb_cyc_i, wb_ack_o, wb_inta_o, TIP_o, test_mode_en, MISO_i, MOSI_i, MOSI_o, MOSI_OEn_o, SCLK_o, SSn0_o, SSn1_o, SSn2_o, SSn3_o, SSn4_o, SSn5_o
, SSn6_o, SSn7_o, wb_dat_i, wb_dat_o, wb_adr_i);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  input MISO_i;
  wire MISO_i;
  output MOSI_OEn_o;
  wire MOSI_OEn_o;
  input MOSI_i;
  wire MOSI_i;
  output MOSI_o;
  wire MOSI_o;
  output SCLK_o;
  wire SCLK_o;
  output SSn0_o;
  wire SSn0_o;
  output SSn1_o;
  wire SSn1_o;
  output SSn2_o;
  wire SSn2_o;
  output SSn3_o;
  wire SSn3_o;
  output SSn4_o;
  wire SSn4_o;
  output SSn5_o;
  wire SSn5_o;
  output SSn6_o;
  wire SSn6_o;
  output SSn7_o;
  wire SSn7_o;
  output TIP_o;
  wire TIP_o;
  input arst_i;
  wire arst_i;
  wire [15:0] \ser_des.BG.Divisor_i ;
  wire [16:0] \ser_des.BG.count16 ;
  wire \ser_des.Baud_Clk_o ;
  wire [2:0] \ser_des.Ext_SPI_Clk_Cnt_i ;
  wire \ser_des.Ext_SPI_Clk_En_i ;
  wire [2:0] \ser_des.FSM_spi_state ;
  wire \ser_des.SPE_i ;
  wire [7:0] \ser_des.SPI_CS_Reg_i ;
  wire [7:0] \ser_des.SPI_Read_Data ;
  wire \ser_des.SS_bar ;
  wire [7:0] \ser_des.Shift_Reg ;
  wire [2:0] \ser_des.bit_count ;
  wire \ser_des.trnsfer_done ;
  wire \spi_register.IACK ;
  wire \spi_register.INTR_read ;
  input test_mode_en;
  wire test_mode_en;
  output wb_ack_o;
  wire wb_ack_o;
  input [2:0] wb_adr_i;
  wire [2:0] wb_adr_i;
  input wb_clk_i;
  wire wb_clk_i;
  input wb_cyc_i;
  wire wb_cyc_i;
  input [7:0] wb_dat_i;
  wire [7:0] wb_dat_i;
  output [7:0] wb_dat_o;
  wire [7:0] wb_dat_o;
  output wb_inta_o;
  wire wb_inta_o;
  input wb_rst_i;
  wire wb_rst_i;
  input wb_stb_i;
  wire wb_stb_i;
  input wb_we_i;
  wire wb_we_i;
  assign _136_ = 8'b01100000 >> { \ser_des.FSM_spi_state [0], _092_, \ser_des.FSM_spi_state [1] };
  assign _086_ = 64'b0000000000000000101010101100110000000000000000001111000011110000 >> { _136_, wb_rst_i, _063_, _029_, \ser_des.Shift_Reg [6], \ser_des.Shift_Reg [0] };
  assign _137_ = 4'b1000 >> { _064_, _059_ };
  assign _070_ = 64'b0000000000000000111100001111000000000000000000001100110010101010 >> { _063_, wb_rst_i, _137_, \ser_des.SPI_Read_Data [1], MOSI_i, MISO_i };
  assign _138_ = 64'b1111111100000000110011001100110011110000111100000101010101010101 >> { wb_adr_i[1:0], \ser_des.SPI_Read_Data [0], _051_, _063_, _025_ };
  assign _139_ = 64'b1111111100000000001100110011001111110000111100001010101010101010 >> { wb_adr_i[1:0], \ser_des.Ext_SPI_Clk_Cnt_i [0], _038_, _048_, \spi_register.INTR_read  };
  assign _128_ = 8'b10101100 >> { wb_adr_i[2], _138_, _139_ };
  assign _140_ = 32'd4039901354 >> { wb_adr_i[0], wb_adr_i[1], \ser_des.SPI_Read_Data [1], _052_, \ser_des.BG.Divisor_i [1] };
  assign _141_ = 64'b1111111100000000001100110011001111110000111100001010101010101010 >> { wb_adr_i[1:0], \ser_des.Ext_SPI_Clk_Cnt_i [1], \ser_des.SPI_CS_Reg_i [1], _049_, _002_ };
  assign _129_ = 8'b10101100 >> { wb_adr_i[2], _140_, _141_ };
  assign _142_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { wb_adr_i[1:0], \ser_des.SPI_Read_Data [4], _055_, _059_, \ser_des.BG.Divisor_i [4] };
  assign _132_ = 32'd1078001408 >> { wb_adr_i[2], _142_, wb_adr_i[0], _041_, wb_adr_i[1] };
  assign _104_ = 16'b0000000100000000 >> { _092_, \ser_des.FSM_spi_state [0], wb_rst_i, \ser_des.FSM_spi_state [1] };
  assign _143_ = 16'b1001111111111001 >> { _054_, \ser_des.BG.count16 [12], \ser_des.BG.count16 [1], _025_ };
  assign _144_ = 32'd1090519105 >> { \ser_des.BG.count16 [14], _056_, \ser_des.BG.count16 [8], _026_, _143_ };
  assign _145_ = 16'b0110111111110110 >> { \ser_des.BG.count16 [10], _052_, \ser_des.BG.count16 [3], \ser_des.BG.Divisor_i [2] };
  assign _146_ = 32'd1090519105 >> { \ser_des.BG.count16 [16], \ser_des.BG.Divisor_i [15], \ser_des.BG.count16 [13], _055_, _145_ };
  assign _147_ = 32'd2416508928 >> { _146_, \ser_des.BG.Divisor_i [4], \ser_des.BG.count16 [5], \ser_des.BG.count16 [2], \ser_des.BG.Divisor_i [1] };
  assign _148_ = 32'd2416508928 >> { _147_, \ser_des.BG.count16 [15], _057_, \ser_des.BG.count16 [11], _053_ };
  assign _149_ = 64'b0110111111110110111111111111111111111111111111110110111111110110 >> { _051_, \ser_des.BG.count16 [9], \ser_des.BG.count16 [7], \ser_des.BG.Divisor_i [6], \ser_des.BG.count16 [4], \ser_des.BG.Divisor_i [3] };
  assign _099_ = 64'b1110111111111110111111111111111111111111111111111111111111111111 >> { _144_, _148_, \ser_des.BG.count16 [6], \ser_des.BG.Divisor_i [5], \ser_des.BG.count16 [0], _149_ };
  assign _109_ = 32'd2139095040 >> { _099_, \ser_des.BG.count16 [3], \ser_des.BG.count16 [1:0], \ser_des.BG.count16 [2] };
  assign _150_ = 64'b1000000000000000000000000000000001111111111111111111111111111111 >> { \ser_des.BG.count16 [5], \ser_des.BG.count16 [2], \ser_des.BG.count16 [3], \ser_des.BG.count16 [4], \ser_des.BG.count16 [0], \ser_des.BG.count16 [1] };
  assign _111_ = 4'b0100 >> { _099_, _150_ };
  assign _151_ = 64'b1000000000000000000000000000000000000000000000000000000000000000 >> { \ser_des.BG.count16 [5:2], \ser_des.BG.count16 [0], \ser_des.BG.count16 [1] };
  assign _113_ = 16'b0111100000000000 >> { _099_, \ser_des.BG.count16 [7:6], _151_ };
  assign _115_ = 64'b0111111111111111100000000000000000000000000000000000000000000000 >> { _099_, \ser_des.BG.count16 [9], \ser_des.BG.count16 [7], \ser_des.BG.count16 [8], _151_, \ser_des.BG.count16 [6] };
  assign _152_ = 64'b1000000000000000000000000000000000000000000000000000000000000000 >> { \ser_des.BG.count16 [9], \ser_des.BG.count16 [10], \ser_des.BG.count16 [8:7], _151_, \ser_des.BG.count16 [6] };
  assign _117_ = 8'b01100000 >> { _099_, \ser_des.BG.count16 [11], _152_ };
  assign _119_ = 32'd2139095040 >> { _099_, \ser_des.BG.count16 [13], \ser_des.BG.count16 [11], _152_, \ser_des.BG.count16 [12] };
  assign _153_ = 32'd2147483648 >> { \ser_des.BG.count16 [12], \ser_des.BG.count16 [13], _152_, \ser_des.BG.count16 [11], \ser_des.BG.count16 [14] };
  assign _122_ = 16'b0111100000000000 >> { _099_, \ser_des.BG.count16 [16:15], _153_ };
  assign _003_ = 16'b1111111111110100 >> { wb_rst_i, \spi_register.IACK , _127_, _126_ };
  assign _154_ = 4'b0001 >> { _092_, \ser_des.FSM_spi_state [1] };
  assign _068_ = 32'd268435456 >> { _015_, \ser_des.SPE_i , _154_, \ser_des.FSM_spi_state [0], wb_rst_i };
  assign _069_ = 4'b1110 >> { wb_rst_i, _136_ };
  assign _077_ = 64'b0000000000000000110011001010101000000000000000001111000011110000 >> { _063_, wb_rst_i, _137_, \ser_des.SPI_Read_Data [6], MOSI_i, MISO_i };
  assign SSn3_o = 4'b0111 >> { _040_, \ser_des.SS_bar  };
  assign _096_ = 32'd17825792 >> { \ser_des.FSM_spi_state [0], \ser_des.bit_count [0], \ser_des.bit_count [1], wb_rst_i, _154_ };
  assign _094_ = 8'b10111110 >> { \ser_des.FSM_spi_state [0], _154_, wb_rst_i };
  assign _074_ = 16'b0000110000001010 >> { _063_, wb_rst_i, \ser_des.SPI_Read_Data [5], \ser_des.SPI_Read_Data [3] };
  assign _155_ = 64'b0000000000000000000000000000000000000000000000000000000000000001 >> { _054_, _026_, \ser_des.BG.Divisor_i [15], \ser_des.BG.Divisor_i [6], \ser_des.BG.Divisor_i [3], \ser_des.BG.Divisor_i [5] };
  assign _156_ = 16'b0000000000000001 >> { _051_, _052_, _055_, _056_ };
  assign _157_ = 64'b0000000100000000000000000000000000000000000000000000000000000000 >> { _025_, _156_, _155_, \ser_des.BG.Divisor_i [4], \ser_des.BG.Divisor_i [2:1] };
  assign \ser_des.Baud_Clk_o  = 64'b1111000011110000111100001111000011111110111111110001000000000000 >> { test_mode_en, _100_, _157_, wb_clk_i, _053_, _057_ };
  assign SCLK_o = 64'b1110111111111111111111111100111100010000000000000000000000110000 >> { _062_, \ser_des.Baud_Clk_o , _060_, \ser_des.FSM_spi_state [0], _154_, \ser_des.trnsfer_done  };
  assign _097_ = 64'b0000000000000111000000000000100000000000000000000000000000000000 >> { \ser_des.FSM_spi_state [0], \ser_des.bit_count [2], _154_, wb_rst_i, \ser_des.bit_count [0], \ser_des.bit_count [1] };
  assign _075_ = 16'b0000110000001010 >> { _063_, wb_rst_i, \ser_des.SPI_Read_Data [6], \ser_des.SPI_Read_Data [4] };
  assign _158_ = 4'b1000 >> { wb_we_i, wb_ack_o };
  assign _037_ = 32'd4294918144 >> { wb_rst_i, wb_adr_i[2], _158_, wb_adr_i[0], wb_adr_i[1] };
  assign _058_ = 32'd4294905856 >> { wb_rst_i, wb_adr_i[1], _158_, wb_adr_i[2], wb_adr_i[0] };
  assign _121_ = 8'b01100000 >> { _099_, \ser_des.BG.count16 [15], _153_ };
  assign _000_ = 16'b1111111111110100 >> { wb_rst_i, \spi_register.IACK , _125_, _124_ };
  assign _028_ = 4'b0100 >> { wb_dat_i[0], wb_rst_i };
  assign _123_ = 16'b0001000000000000 >> { wb_cyc_i, wb_stb_i, wb_ack_o, wb_rst_i };
  assign _120_ = 64'b0111111111111111100000000000000000000000000000000000000000000000 >> { _099_, \ser_des.BG.count16 [14], \ser_des.BG.count16 [12], \ser_des.BG.count16 [13], _152_, \ser_des.BG.count16 [11] };
  assign _022_ = 4'b0100 >> { wb_dat_i[7], wb_rst_i };
  assign _005_ = 4'b1000 >> { _022_, _158_ };
  assign _103_ = 4'b0100 >> { _125_, wb_rst_i };
  assign _001_ = 4'b0100 >> { _103_, _124_ };
  assign _081_ = 64'b0000000000000000110011001010101000000000000000001111000011110000 >> { _136_, wb_rst_i, _063_, _032_, \ser_des.Shift_Reg [3], \ser_des.Shift_Reg [1] };
  assign _095_ = 16'b0000000100000000 >> { \ser_des.FSM_spi_state [0], \ser_des.bit_count [0], _154_, wb_rst_i };
  assign _159_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { wb_adr_i[1:0], \ser_des.SPI_Read_Data [7], \ser_des.BG.Divisor_i [15], \ser_des.SPE_i , _026_ };
  assign _135_ = 64'b1010101011001100000000000000000011110000111100001111000011110000 >> { wb_adr_i[2], wb_adr_i[0], wb_adr_i[1], _159_, \ser_des.SPI_CS_Reg_i [7], \ser_des.Ext_SPI_Clk_En_i  };
  assign _160_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { wb_adr_i[1:0], \ser_des.SPI_Read_Data [5], _056_, _064_, \ser_des.BG.Divisor_i [5] };
  assign _133_ = 32'd1078001408 >> { wb_adr_i[2], _160_, wb_adr_i[0], _042_, wb_adr_i[1] };
  assign _161_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { wb_adr_i[1:0], \ser_des.SPI_Read_Data [3], _054_, _062_, \ser_des.BG.Divisor_i [3] };
  assign _131_ = 32'd1078001408 >> { wb_adr_i[2], _161_, wb_adr_i[0], _040_, wb_adr_i[1] };
  assign _162_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { wb_adr_i[1:0], \ser_des.SPI_Read_Data [2], _053_, _060_, \ser_des.BG.Divisor_i [2] };
  assign _163_ = 64'b1111111100000000001100110011001111110000111100001010101010101010 >> { wb_adr_i[1:0], _066_, _039_, _047_, TIP_o };
  assign _130_ = 8'b10101100 >> { wb_adr_i[2], _162_, _163_ };
  assign _108_ = 16'b0111100000000000 >> { _099_, \ser_des.BG.count16 [2:0] };
  assign _164_ = 64'b1000000000000000000000000000000001111111111111111111111111111111 >> { \ser_des.BG.count16 [10], \ser_des.BG.count16 [7], \ser_des.BG.count16 [8], \ser_des.BG.count16 [9], _151_, \ser_des.BG.count16 [6] };
  assign _116_ = 4'b0100 >> { _099_, _164_ };
  assign _118_ = 16'b0111100000000000 >> { _099_, \ser_des.BG.count16 [12:11], _152_ };
  assign _114_ = 32'd2139095040 >> { _099_, \ser_des.BG.count16 [8], \ser_des.BG.count16 [6], _151_, \ser_des.BG.count16 [7] };
  assign _112_ = 8'b01100000 >> { _099_, \ser_des.BG.count16 [6], _151_ };
  assign _107_ = 8'b01100000 >> { _099_, \ser_des.BG.count16 [1:0] };
  assign _110_ = 64'b0111111111111111100000000000000000000000000000000000000000000000 >> { _099_, \ser_des.BG.count16 [4], \ser_des.BG.count16 [2], \ser_des.BG.count16 [3], \ser_des.BG.count16 [0], \ser_des.BG.count16 [1] };
  assign _105_ = 4'b0100 >> { _127_, wb_rst_i };
  assign _165_ = 64'b1111111100000000110011001100110011110000111100001010101010101010 >> { wb_adr_i[1:0], \ser_des.SPI_Read_Data [6], _057_, _061_, \ser_des.BG.Divisor_i [6] };
  assign _134_ = 32'd1078001408 >> { wb_adr_i[2], _165_, wb_adr_i[0], _043_, wb_adr_i[1] };
  assign _102_ = 8'b00001110 >> { wb_rst_i, _013_, _014_ };
  assign _018_ = 4'b0100 >> { wb_dat_i[3], wb_rst_i };
  assign _020_ = 4'b0100 >> { wb_dat_i[5], wb_rst_i };
  assign _076_ = 16'b0000110000001010 >> { _063_, wb_rst_i, \ser_des.SPI_Read_Data [7], \ser_des.SPI_Read_Data [5] };
  assign _166_ = 64'b0000000000000000111011111111111100000000000000000000000000000000 >> { _158_, wb_rst_i, wb_adr_i[2], \ser_des.SPE_i , wb_adr_i[0], wb_adr_i[1] };
  assign _006_ = 64'b0000000000000000000000000000000011111111111111111111111100010000 >> { _166_, wb_rst_i, _158_, \ser_des.FSM_spi_state [1], _092_, \ser_des.FSM_spi_state [0] };
  assign _167_ = 32'd16760767 >> { \ser_des.FSM_spi_state [0], _013_, _008_, \ser_des.SPE_i , _015_ };
  assign _168_ = 64'b1111111111111111111110011001111111111001100111111111111111111111 >> { _049_, \ser_des.bit_count [1], _047_, \ser_des.bit_count [2], \ser_des.bit_count [0], _048_ };
  assign _169_ = 64'b1111111111111111111100001111111100001111010101011100110011001100 >> { _092_, \ser_des.FSM_spi_state [1:0], _168_, _167_, \ser_des.Ext_SPI_Clk_En_i  };
  assign _170_ = 64'b0110111111110110111111111111111111111111111111110110111111110110 >> { \ser_des.bit_count [2], _066_, \ser_des.Ext_SPI_Clk_Cnt_i [1], \ser_des.bit_count [1:0], \ser_des.Ext_SPI_Clk_Cnt_i [0] };
  assign _171_ = 16'b0000111101110111 >> { \ser_des.FSM_spi_state [0], _170_, _015_, \ser_des.SPE_i  };
  assign _088_ = 32'd16639 >> { wb_rst_i, _169_, \ser_des.FSM_spi_state [1], _092_, _171_ };
  assign _019_ = 4'b0100 >> { wb_dat_i[4], wb_rst_i };
  assign _017_ = 4'b0100 >> { wb_dat_i[2], wb_rst_i };
  assign _021_ = 4'b0100 >> { wb_dat_i[6], wb_rst_i };
  assign _027_ = 32'd4294918144 >> { wb_rst_i, _158_, wb_adr_i[1:0], wb_adr_i[2] };
  assign _090_ = 4'b0001 >> { wb_rst_i, _168_ };
  assign _073_ = 16'b0000110000001010 >> { _063_, wb_rst_i, \ser_des.SPI_Read_Data [4], \ser_des.SPI_Read_Data [2] };
  assign _172_ = 32'd239 >> { wb_rst_i, _158_, _092_, \ser_des.FSM_spi_state [1:0] };
  assign _009_ = 8'b00001011 >> { _166_, _172_, _093_ };
  assign _016_ = 32'd4294902016 >> { wb_rst_i, _158_, wb_adr_i };
  assign MOSI_o = 64'b1111111101000100111111111111111111110100111101001111111111111111 >> { _063_, _136_, \ser_des.Shift_Reg [0], \ser_des.Shift_Reg [7], _092_, _064_ };
  assign _071_ = 16'b0000110000001010 >> { _063_, wb_rst_i, \ser_des.SPI_Read_Data [2], \ser_des.SPI_Read_Data [0] };
  assign _101_ = 4'b0100 >> { _105_, _126_ };
  assign SSn6_o = 4'b0111 >> { _043_, \ser_des.SS_bar  };
  assign _067_ = 64'b1111000011111110111100001111000011110000111100001111000011110000 >> { \ser_des.SPE_i , _154_, \ser_des.FSM_spi_state [0], wb_rst_i, _015_, _008_ };
  assign _065_ = 32'd4294934528 >> { wb_rst_i, wb_adr_i[0], _158_, wb_adr_i[1], wb_adr_i[2] };
  assign SSn2_o = 4'b0111 >> { \ser_des.SS_bar , _039_ };
  assign wb_inta_o = 16'b1110000000000000 >> { \ser_des.SPE_i , _061_, \spi_register.INTR_read , _002_ };
  assign _050_ = 32'd4294905856 >> { wb_rst_i, wb_adr_i[0], _158_, wb_adr_i[2:1] };
  assign _072_ = 16'b0000110000001010 >> { _063_, wb_rst_i, \ser_des.SPI_Read_Data [3], \ser_des.SPI_Read_Data [1] };
  assign SSn7_o = 4'b0111 >> { \ser_des.SS_bar , \ser_des.SPI_CS_Reg_i [7] };
  assign _024_ = 4'b0001 >> { wb_dat_i[0], wb_rst_i };
  assign MOSI_OEn_o = 16'b0100000000000000 >> { \ser_des.FSM_spi_state [0], _137_, _092_, \ser_des.FSM_spi_state [1] };
  assign _085_ = 64'b0000000000000000110011001010101000000000000000001111000011110000 >> { _136_, wb_rst_i, _063_, _036_, \ser_des.Shift_Reg [7], \ser_des.Shift_Reg [5] };
  assign _023_ = 4'b0100 >> { wb_dat_i[1], wb_rst_i };
  assign _007_ = 4'b1000 >> { _023_, _158_ };
  assign _082_ = 64'b0000000000000000110011001010101000000000000000001111000011110000 >> { _136_, wb_rst_i, _063_, _033_, \ser_des.Shift_Reg [4], \ser_des.Shift_Reg [2] };
  assign _004_ = 32'd65521 >> { _166_, wb_rst_i, _158_, _002_, \spi_register.INTR_read  };
  assign _079_ = 64'b0000000000000000110011001010101000000000000000001111000011110000 >> { _136_, wb_rst_i, _063_, _030_, \ser_des.Shift_Reg [1], \ser_des.Shift_Reg [7] };
  assign _173_ = 64'b0110111111110110111111111111111111111111111111110110111111110110 >> { \ser_des.BG.count16 [13], _056_, \ser_des.BG.count16 [9], _052_, \ser_des.BG.count16 [1], \ser_des.BG.Divisor_i [1] };
  assign _174_ = 32'd1090519105 >> { \ser_des.BG.count16 [15], \ser_des.BG.Divisor_i [15], \ser_des.BG.count16 [7], _026_, _173_ };
  assign _175_ = 32'd2416508928 >> { _174_, \ser_des.BG.Divisor_i [4], \ser_des.BG.count16 [4], \ser_des.BG.count16 [2], \ser_des.BG.Divisor_i [2] };
  assign _176_ = 16'b0110111111110110 >> { _053_, \ser_des.BG.count16 [10], \ser_des.BG.count16 [8], _051_ };
  assign _177_ = 16'b1001111111111001 >> { \ser_des.BG.count16 [14], _057_, \ser_des.BG.count16 [0], _025_ };
  assign _178_ = 32'd1090519105 >> { \ser_des.BG.count16 [6], \ser_des.BG.Divisor_i [6], \ser_des.BG.count16 [3], \ser_des.BG.Divisor_i [3], _177_ };
  assign _179_ = 64'b0100000100000000000000000100000100000000000000000000000000000000 >> { _178_, _054_, \ser_des.BG.count16 [11], \ser_des.BG.count16 [5], \ser_des.BG.Divisor_i [5], _176_ };
  assign _098_ = 64'b0111010101010111010101010101010101010101010101010101010101010101 >> { _175_, _179_, \ser_des.BG.count16 [12], _055_, \ser_des.BG.count16 [16], _099_ };
  assign _011_ = 4'b1000 >> { _018_, _158_ };
  assign SSn5_o = 4'b0111 >> { _042_, \ser_des.SS_bar  };
  assign SSn1_o = 4'b0111 >> { \ser_des.SPI_CS_Reg_i [1], \ser_des.SS_bar  };
  assign _046_ = 4'b0001 >> { wb_dat_i[1], wb_rst_i };
  assign _044_ = 32'd4294918144 >> { wb_rst_i, wb_adr_i[2], _158_, wb_adr_i[1:0] };
  assign _012_ = 4'b1000 >> { _028_, _158_ };
  assign _010_ = 4'b1000 >> { _017_, _158_ };
  assign SSn4_o = 4'b0111 >> { \ser_des.SS_bar , _041_ };
  assign SSn0_o = 4'b0111 >> { \ser_des.SS_bar , _038_ };
  assign _045_ = 4'b0001 >> { wb_dat_i[2], wb_rst_i };
  assign _078_ = 4'b0100 >> { _093_, wb_rst_i };
  assign _180_ = 64'b0000000011111111010001000100010011110000111100000000000000000000 >> { \ser_des.FSM_spi_state [0], \ser_des.FSM_spi_state [1], _168_, \ser_des.Ext_SPI_Clk_En_i , _014_, _013_ };
  assign _089_ = 64'b0000000000000000010001001111111100000000000000001111000011110000 >> { _092_, wb_rst_i, _171_, _180_, \ser_des.FSM_spi_state [0], \ser_des.FSM_spi_state [1] };
  assign _084_ = 64'b0000000000000000110011001010101000000000000000001111000011110000 >> { _136_, wb_rst_i, _063_, _035_, \ser_des.Shift_Reg [6], \ser_des.Shift_Reg [4] };
  assign _080_ = 64'b0000000000000000101010101100110000000000000000001111000011110000 >> { _136_, wb_rst_i, _063_, _031_, \ser_des.Shift_Reg [0], \ser_des.Shift_Reg [2] };
  assign _181_ = 32'd286330879 >> { \ser_des.FSM_spi_state [0], \ser_des.SPE_i , _015_, _014_, _013_ };
  assign _182_ = 32'd3433697039 >> { \ser_des.FSM_spi_state [1:0], _181_, _168_, \ser_des.Ext_SPI_Clk_En_i  };
  assign _183_ = 16'b1010110000000000 >> { \ser_des.FSM_spi_state [0], \ser_des.FSM_spi_state [1], _168_, _170_ };
  assign _087_ = 16'b0000101000001100 >> { _092_, wb_rst_i, _182_, _183_ };
  assign _083_ = 64'b0000000000000000110011001010101000000000000000001111000011110000 >> { _136_, wb_rst_i, _063_, _034_, \ser_des.Shift_Reg [5], \ser_des.Shift_Reg [3] };
  assign _091_ = 16'b0001000000000000 >> { _092_, \ser_des.FSM_spi_state [1:0], wb_rst_i };
  assign _184_ = 2'b01 >> arst_i;
  assign _106_ = 2'b01 >> \ser_des.BG.count16 [0];
  dffsre _338_ (
    .C(wb_clk_i),
    .D(_001_),
    .E(_000_),
    .Q(_002_),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _339_ (
    .C(wb_clk_i),
    .D(_005_),
    .E(_004_),
    .Q(\spi_register.IACK ),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _340_ (
    .C(wb_clk_i),
    .D(_007_),
    .E(_006_),
    .Q(_008_),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _341_ (
    .C(wb_clk_i),
    .D(_010_),
    .E(_009_),
    .Q(_013_),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _342_ (
    .C(wb_clk_i),
    .D(_011_),
    .E(_009_),
    .Q(_014_),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _343_ (
    .C(wb_clk_i),
    .D(_012_),
    .E(_009_),
    .Q(_015_),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _344_ (
    .C(wb_clk_i),
    .D(_024_),
    .E(_016_),
    .Q(_025_),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _345_ (
    .C(wb_clk_i),
    .D(_023_),
    .E(_016_),
    .Q(\ser_des.BG.Divisor_i [1]),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _346_ (
    .C(wb_clk_i),
    .D(_017_),
    .E(_016_),
    .Q(\ser_des.BG.Divisor_i [2]),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _347_ (
    .C(wb_clk_i),
    .D(_018_),
    .E(_016_),
    .Q(\ser_des.BG.Divisor_i [3]),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _348_ (
    .C(wb_clk_i),
    .D(_019_),
    .E(_016_),
    .Q(\ser_des.BG.Divisor_i [4]),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _349_ (
    .C(wb_clk_i),
    .D(_020_),
    .E(_016_),
    .Q(\ser_des.BG.Divisor_i [5]),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _350_ (
    .C(wb_clk_i),
    .D(_021_),
    .E(_016_),
    .Q(\ser_des.BG.Divisor_i [6]),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _351_ (
    .C(wb_clk_i),
    .D(_022_),
    .E(_016_),
    .Q(_026_),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _352_ (
    .C(wb_clk_i),
    .D(_022_),
    .E(_027_),
    .Q(_029_),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _353_ (
    .C(wb_clk_i),
    .D(_028_),
    .E(_027_),
    .Q(_030_),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _354_ (
    .C(wb_clk_i),
    .D(_023_),
    .E(_027_),
    .Q(_031_),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _355_ (
    .C(wb_clk_i),
    .D(_017_),
    .E(_027_),
    .Q(_032_),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _356_ (
    .C(wb_clk_i),
    .D(_018_),
    .E(_027_),
    .Q(_033_),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _357_ (
    .C(wb_clk_i),
    .D(_019_),
    .E(_027_),
    .Q(_034_),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _358_ (
    .C(wb_clk_i),
    .D(_020_),
    .E(_027_),
    .Q(_035_),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _359_ (
    .C(wb_clk_i),
    .D(_021_),
    .E(_027_),
    .Q(_036_),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _360_ (
    .C(wb_clk_i),
    .D(_022_),
    .E(_037_),
    .Q(\ser_des.SPI_CS_Reg_i [7]),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _361_ (
    .C(wb_clk_i),
    .D(_028_),
    .E(_037_),
    .Q(_038_),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _362_ (
    .C(wb_clk_i),
    .D(_023_),
    .E(_037_),
    .Q(\ser_des.SPI_CS_Reg_i [1]),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _363_ (
    .C(wb_clk_i),
    .D(_017_),
    .E(_037_),
    .Q(_039_),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _364_ (
    .C(wb_clk_i),
    .D(_018_),
    .E(_037_),
    .Q(_040_),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _365_ (
    .C(wb_clk_i),
    .D(_019_),
    .E(_037_),
    .Q(_041_),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _366_ (
    .C(wb_clk_i),
    .D(_020_),
    .E(_037_),
    .Q(_042_),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _367_ (
    .C(wb_clk_i),
    .D(_021_),
    .E(_037_),
    .Q(_043_),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _368_ (
    .C(wb_clk_i),
    .D(_045_),
    .E(_044_),
    .Q(_047_),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _369_ (
    .C(wb_clk_i),
    .D(_024_),
    .E(_044_),
    .Q(_048_),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _370_ (
    .C(wb_clk_i),
    .D(_046_),
    .E(_044_),
    .Q(_049_),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _371_ (
    .C(wb_clk_i),
    .D(_022_),
    .E(_050_),
    .Q(\ser_des.BG.Divisor_i [15]),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _372_ (
    .C(wb_clk_i),
    .D(_028_),
    .E(_050_),
    .Q(_051_),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _373_ (
    .C(wb_clk_i),
    .D(_023_),
    .E(_050_),
    .Q(_052_),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _374_ (
    .C(wb_clk_i),
    .D(_017_),
    .E(_050_),
    .Q(_053_),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _375_ (
    .C(wb_clk_i),
    .D(_018_),
    .E(_050_),
    .Q(_054_),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _376_ (
    .C(wb_clk_i),
    .D(_019_),
    .E(_050_),
    .Q(_055_),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _377_ (
    .C(wb_clk_i),
    .D(_020_),
    .E(_050_),
    .Q(_056_),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _378_ (
    .C(wb_clk_i),
    .D(_021_),
    .E(_050_),
    .Q(_057_),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _379_ (
    .C(wb_clk_i),
    .D(_022_),
    .E(_058_),
    .Q(\ser_des.SPE_i ),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _380_ (
    .C(wb_clk_i),
    .D(_019_),
    .E(_058_),
    .Q(_059_),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _381_ (
    .C(wb_clk_i),
    .D(_017_),
    .E(_058_),
    .Q(_060_),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _382_ (
    .C(wb_clk_i),
    .D(_021_),
    .E(_058_),
    .Q(_061_),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _383_ (
    .C(wb_clk_i),
    .D(_018_),
    .E(_058_),
    .Q(_062_),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _384_ (
    .C(wb_clk_i),
    .D(_028_),
    .E(_058_),
    .Q(_063_),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _385_ (
    .C(wb_clk_i),
    .D(_020_),
    .E(_058_),
    .Q(_064_),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _386_ (
    .C(wb_clk_i),
    .D(_022_),
    .E(_065_),
    .Q(\ser_des.Ext_SPI_Clk_En_i ),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _387_ (
    .C(wb_clk_i),
    .D(_028_),
    .E(_065_),
    .Q(\ser_des.Ext_SPI_Clk_Cnt_i [0]),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _388_ (
    .C(wb_clk_i),
    .D(_023_),
    .E(_065_),
    .Q(\ser_des.Ext_SPI_Clk_Cnt_i [1]),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _389_ (
    .C(wb_clk_i),
    .D(_017_),
    .E(_065_),
    .Q(_066_),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _390_ (
    .C(\ser_des.Baud_Clk_o ),
    .D(_068_),
    .E(_067_),
    .Q(\ser_des.SS_bar ),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _391_ (
    .C(\ser_des.Baud_Clk_o ),
    .D(_070_),
    .E(_069_),
    .Q(\ser_des.SPI_Read_Data [0]),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _392_ (
    .C(\ser_des.Baud_Clk_o ),
    .D(_071_),
    .E(_069_),
    .Q(\ser_des.SPI_Read_Data [1]),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _393_ (
    .C(\ser_des.Baud_Clk_o ),
    .D(_072_),
    .E(_069_),
    .Q(\ser_des.SPI_Read_Data [2]),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _394_ (
    .C(\ser_des.Baud_Clk_o ),
    .D(_073_),
    .E(_069_),
    .Q(\ser_des.SPI_Read_Data [3]),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _395_ (
    .C(\ser_des.Baud_Clk_o ),
    .D(_074_),
    .E(_069_),
    .Q(\ser_des.SPI_Read_Data [4]),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _396_ (
    .C(\ser_des.Baud_Clk_o ),
    .D(_075_),
    .E(_069_),
    .Q(\ser_des.SPI_Read_Data [5]),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _397_ (
    .C(\ser_des.Baud_Clk_o ),
    .D(_076_),
    .E(_069_),
    .Q(\ser_des.SPI_Read_Data [6]),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _398_ (
    .C(\ser_des.Baud_Clk_o ),
    .D(_077_),
    .E(_069_),
    .Q(\ser_des.SPI_Read_Data [7]),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _399_ (
    .C(\ser_des.Baud_Clk_o ),
    .D(_079_),
    .E(1'b1),
    .Q(\ser_des.Shift_Reg [0]),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _400_ (
    .C(\ser_des.Baud_Clk_o ),
    .D(_080_),
    .E(1'b1),
    .Q(\ser_des.Shift_Reg [1]),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _401_ (
    .C(\ser_des.Baud_Clk_o ),
    .D(_081_),
    .E(1'b1),
    .Q(\ser_des.Shift_Reg [2]),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _402_ (
    .C(\ser_des.Baud_Clk_o ),
    .D(_082_),
    .E(1'b1),
    .Q(\ser_des.Shift_Reg [3]),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _403_ (
    .C(\ser_des.Baud_Clk_o ),
    .D(_083_),
    .E(1'b1),
    .Q(\ser_des.Shift_Reg [4]),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _404_ (
    .C(\ser_des.Baud_Clk_o ),
    .D(_084_),
    .E(1'b1),
    .Q(\ser_des.Shift_Reg [5]),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _405_ (
    .C(\ser_des.Baud_Clk_o ),
    .D(_085_),
    .E(1'b1),
    .Q(\ser_des.Shift_Reg [6]),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _406_ (
    .C(\ser_des.Baud_Clk_o ),
    .D(_086_),
    .E(1'b1),
    .Q(\ser_des.Shift_Reg [7]),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _407_ (
    .C(\ser_des.Baud_Clk_o ),
    .D(_087_),
    .E(1'b1),
    .Q(\ser_des.FSM_spi_state [0]),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _408_ (
    .C(\ser_des.Baud_Clk_o ),
    .D(_088_),
    .E(1'b1),
    .Q(\ser_des.FSM_spi_state [1]),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _409_ (
    .C(\ser_des.Baud_Clk_o ),
    .D(_089_),
    .E(1'b1),
    .Q(_092_),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _410_ (
    .C(\ser_des.Baud_Clk_o ),
    .D(_090_),
    .E(1'b1),
    .Q(\ser_des.trnsfer_done ),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _411_ (
    .C(\ser_des.Baud_Clk_o ),
    .D(_091_),
    .E(1'b1),
    .Q(_093_),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _412_ (
    .C(\ser_des.Baud_Clk_o ),
    .D(_095_),
    .E(_094_),
    .Q(\ser_des.bit_count [0]),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _413_ (
    .C(\ser_des.Baud_Clk_o ),
    .D(_096_),
    .E(_094_),
    .Q(\ser_des.bit_count [1]),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _414_ (
    .C(\ser_des.Baud_Clk_o ),
    .D(_097_),
    .E(_094_),
    .Q(\ser_des.bit_count [2]),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _415_ (
    .C(wb_clk_i),
    .D(_099_),
    .E(_098_),
    .Q(_100_),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _416_ (
    .C(wb_clk_i),
    .D(_101_),
    .E(_003_),
    .Q(\spi_register.INTR_read ),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _417_ (
    .C(wb_clk_i),
    .D(_102_),
    .E(1'b1),
    .Q(TIP_o),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _418_ (
    .C(wb_clk_i),
    .D(_103_),
    .E(1'b1),
    .Q(_124_),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _419_ (
    .C(wb_clk_i),
    .D(_104_),
    .E(1'b1),
    .Q(_125_),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _420_ (
    .C(wb_clk_i),
    .D(_105_),
    .E(1'b1),
    .Q(_126_),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _421_ (
    .C(wb_clk_i),
    .D(_078_),
    .E(1'b1),
    .Q(_127_),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _422_ (
    .C(wb_clk_i),
    .D(_106_),
    .E(1'b1),
    .Q(\ser_des.BG.count16 [0]),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _423_ (
    .C(wb_clk_i),
    .D(_107_),
    .E(1'b1),
    .Q(\ser_des.BG.count16 [1]),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _424_ (
    .C(wb_clk_i),
    .D(_108_),
    .E(1'b1),
    .Q(\ser_des.BG.count16 [2]),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _425_ (
    .C(wb_clk_i),
    .D(_109_),
    .E(1'b1),
    .Q(\ser_des.BG.count16 [3]),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _426_ (
    .C(wb_clk_i),
    .D(_110_),
    .E(1'b1),
    .Q(\ser_des.BG.count16 [4]),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _427_ (
    .C(wb_clk_i),
    .D(_111_),
    .E(1'b1),
    .Q(\ser_des.BG.count16 [5]),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _428_ (
    .C(wb_clk_i),
    .D(_112_),
    .E(1'b1),
    .Q(\ser_des.BG.count16 [6]),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _429_ (
    .C(wb_clk_i),
    .D(_113_),
    .E(1'b1),
    .Q(\ser_des.BG.count16 [7]),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _430_ (
    .C(wb_clk_i),
    .D(_114_),
    .E(1'b1),
    .Q(\ser_des.BG.count16 [8]),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _431_ (
    .C(wb_clk_i),
    .D(_115_),
    .E(1'b1),
    .Q(\ser_des.BG.count16 [9]),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _432_ (
    .C(wb_clk_i),
    .D(_116_),
    .E(1'b1),
    .Q(\ser_des.BG.count16 [10]),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _433_ (
    .C(wb_clk_i),
    .D(_117_),
    .E(1'b1),
    .Q(\ser_des.BG.count16 [11]),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _434_ (
    .C(wb_clk_i),
    .D(_118_),
    .E(1'b1),
    .Q(\ser_des.BG.count16 [12]),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _435_ (
    .C(wb_clk_i),
    .D(_119_),
    .E(1'b1),
    .Q(\ser_des.BG.count16 [13]),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _436_ (
    .C(wb_clk_i),
    .D(_120_),
    .E(1'b1),
    .Q(\ser_des.BG.count16 [14]),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _437_ (
    .C(wb_clk_i),
    .D(_121_),
    .E(1'b1),
    .Q(\ser_des.BG.count16 [15]),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _438_ (
    .C(wb_clk_i),
    .D(_122_),
    .E(1'b1),
    .Q(\ser_des.BG.count16 [16]),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _439_ (
    .C(wb_clk_i),
    .D(_123_),
    .E(1'b1),
    .Q(wb_ack_o),
    .R(_184_),
    .S(1'b1)
  );
  dffsre _440_ (
    .C(wb_clk_i),
    .D(_128_),
    .E(1'b1),
    .Q(wb_dat_o[0]),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _441_ (
    .C(wb_clk_i),
    .D(_129_),
    .E(1'b1),
    .Q(wb_dat_o[1]),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _442_ (
    .C(wb_clk_i),
    .D(_130_),
    .E(1'b1),
    .Q(wb_dat_o[2]),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _443_ (
    .C(wb_clk_i),
    .D(_131_),
    .E(1'b1),
    .Q(wb_dat_o[3]),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _444_ (
    .C(wb_clk_i),
    .D(_132_),
    .E(1'b1),
    .Q(wb_dat_o[4]),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _445_ (
    .C(wb_clk_i),
    .D(_133_),
    .E(1'b1),
    .Q(wb_dat_o[5]),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _446_ (
    .C(wb_clk_i),
    .D(_134_),
    .E(1'b1),
    .Q(wb_dat_o[6]),
    .R(1'b1),
    .S(1'b1)
  );
  dffsre _447_ (
    .C(wb_clk_i),
    .D(_135_),
    .E(1'b1),
    .Q(wb_dat_o[7]),
    .R(1'b1),
    .S(1'b1)
  );
endmodule
