/* Generated by Yosys 0.16+65 (git sha1 051517d61, gcc 9.1.0 -fPIC -Os) */

module wrapper_adder_columns(a, cout, cin, sum, b);
  wire _000_;
  wire _001_;
  wire [50:0] _002_;
  wire [49:0] _003_;
  wire [50:0] _004_;
  wire [49:0] _005_;
  input [97:0] a;
  wire [97:0] a;
  wire \ad1.cout ;
  wire \ad2.cout ;
  input [97:0] b;
  wire [97:0] b;
  input [1:0] cin;
  wire [1:0] cin;
  output [1:0] cout;
  wire [1:0] cout;
  output [97:0] sum;
  wire [97:0] sum;
  assign \ad2.cout  = 8'b11101000 >> { b[97], a[97], _000_ };
  assign \ad1.cout  = 8'b11101000 >> { b[48], a[48], _001_ };
  assign sum[97] = 8'b10010110 >> { b[97], a[97], _000_ };
  assign _003_[0] = 4'b0110 >> { b[49], a[49] };
  assign _003_[1] = 4'b0110 >> { b[50], a[50] };
  assign _003_[2] = 4'b0110 >> { b[51], a[51] };
  assign _003_[3] = 4'b0110 >> { b[52], a[52] };
  assign _003_[4] = 4'b0110 >> { b[53], a[53] };
  assign _003_[5] = 4'b0110 >> { b[54], a[54] };
  assign _003_[6] = 4'b0110 >> { b[55], a[55] };
  assign _003_[7] = 4'b0110 >> { b[56], a[56] };
  assign _003_[8] = 4'b0110 >> { b[57], a[57] };
  assign _003_[9] = 4'b0110 >> { b[58], a[58] };
  assign _003_[10] = 4'b0110 >> { b[59], a[59] };
  assign _003_[11] = 4'b0110 >> { b[60], a[60] };
  assign _003_[12] = 4'b0110 >> { b[61], a[61] };
  assign _003_[13] = 4'b0110 >> { b[62], a[62] };
  assign _003_[14] = 4'b0110 >> { b[63], a[63] };
  assign _003_[15] = 4'b0110 >> { b[64], a[64] };
  assign _003_[16] = 4'b0110 >> { b[65], a[65] };
  assign _003_[17] = 4'b0110 >> { b[66], a[66] };
  assign _003_[18] = 4'b0110 >> { b[67], a[67] };
  assign _003_[19] = 4'b0110 >> { b[68], a[68] };
  assign _003_[20] = 4'b0110 >> { b[69], a[69] };
  assign _003_[21] = 4'b0110 >> { b[70], a[70] };
  assign _003_[22] = 4'b0110 >> { b[71], a[71] };
  assign _003_[23] = 4'b0110 >> { b[72], a[72] };
  assign _003_[24] = 4'b0110 >> { b[73], a[73] };
  assign _003_[25] = 4'b0110 >> { b[74], a[74] };
  assign _003_[26] = 4'b0110 >> { b[75], a[75] };
  assign _003_[27] = 4'b0110 >> { b[76], a[76] };
  assign _003_[28] = 4'b0110 >> { b[77], a[77] };
  assign _003_[29] = 4'b0110 >> { b[78], a[78] };
  assign _003_[30] = 4'b0110 >> { b[79], a[79] };
  assign _003_[31] = 4'b0110 >> { b[80], a[80] };
  assign _003_[32] = 4'b0110 >> { b[81], a[81] };
  assign _003_[33] = 4'b0110 >> { b[82], a[82] };
  assign _003_[34] = 4'b0110 >> { b[83], a[83] };
  assign _003_[35] = 4'b0110 >> { b[84], a[84] };
  assign _003_[36] = 4'b0110 >> { b[85], a[85] };
  assign _003_[37] = 4'b0110 >> { b[86], a[86] };
  assign _003_[38] = 4'b0110 >> { b[87], a[87] };
  assign _003_[39] = 4'b0110 >> { b[88], a[88] };
  assign _003_[40] = 4'b0110 >> { b[89], a[89] };
  assign _003_[41] = 4'b0110 >> { b[90], a[90] };
  assign _003_[42] = 4'b0110 >> { b[91], a[91] };
  assign _003_[43] = 4'b0110 >> { b[92], a[92] };
  assign _003_[44] = 4'b0110 >> { b[93], a[93] };
  assign _003_[45] = 4'b0110 >> { b[94], a[94] };
  assign _003_[46] = 4'b0110 >> { b[95], a[95] };
  assign _003_[47] = 4'b0110 >> { b[96], a[96] };
  assign sum[48] = 8'b10010110 >> { b[48], a[48], _001_ };
  assign _005_[0] = 4'b0110 >> { b[0], a[0] };
  assign _005_[1] = 4'b0110 >> { b[1], a[1] };
  assign _005_[2] = 4'b0110 >> { b[2], a[2] };
  assign _005_[3] = 4'b0110 >> { b[3], a[3] };
  assign _005_[4] = 4'b0110 >> { b[4], a[4] };
  assign _005_[5] = 4'b0110 >> { b[5], a[5] };
  assign _005_[6] = 4'b0110 >> { b[6], a[6] };
  assign _005_[7] = 4'b0110 >> { b[7], a[7] };
  assign _005_[8] = 4'b0110 >> { b[8], a[8] };
  assign _005_[9] = 4'b0110 >> { b[9], a[9] };
  assign _005_[10] = 4'b0110 >> { b[10], a[10] };
  assign _005_[11] = 4'b0110 >> { b[11], a[11] };
  assign _005_[12] = 4'b0110 >> { b[12], a[12] };
  assign _005_[13] = 4'b0110 >> { b[13], a[13] };
  assign _005_[14] = 4'b0110 >> { b[14], a[14] };
  assign _005_[15] = 4'b0110 >> { b[15], a[15] };
  assign _005_[16] = 4'b0110 >> { b[16], a[16] };
  assign _005_[17] = 4'b0110 >> { b[17], a[17] };
  assign _005_[18] = 4'b0110 >> { b[18], a[18] };
  assign _005_[19] = 4'b0110 >> { b[19], a[19] };
  assign _005_[20] = 4'b0110 >> { b[20], a[20] };
  assign _005_[21] = 4'b0110 >> { b[21], a[21] };
  assign _005_[22] = 4'b0110 >> { b[22], a[22] };
  assign _005_[23] = 4'b0110 >> { b[23], a[23] };
  assign _005_[24] = 4'b0110 >> { b[24], a[24] };
  assign _005_[25] = 4'b0110 >> { b[25], a[25] };
  assign _005_[26] = 4'b0110 >> { b[26], a[26] };
  assign _005_[27] = 4'b0110 >> { b[27], a[27] };
  assign _005_[28] = 4'b0110 >> { b[28], a[28] };
  assign _005_[29] = 4'b0110 >> { b[29], a[29] };
  assign _005_[30] = 4'b0110 >> { b[30], a[30] };
  assign _005_[31] = 4'b0110 >> { b[31], a[31] };
  assign _005_[32] = 4'b0110 >> { b[32], a[32] };
  assign _005_[33] = 4'b0110 >> { b[33], a[33] };
  assign _005_[34] = 4'b0110 >> { b[34], a[34] };
  assign _005_[35] = 4'b0110 >> { b[35], a[35] };
  assign _005_[36] = 4'b0110 >> { b[36], a[36] };
  assign _005_[37] = 4'b0110 >> { b[37], a[37] };
  assign _005_[38] = 4'b0110 >> { b[38], a[38] };
  assign _005_[39] = 4'b0110 >> { b[39], a[39] };
  assign _005_[40] = 4'b0110 >> { b[40], a[40] };
  assign _005_[41] = 4'b0110 >> { b[41], a[41] };
  assign _005_[42] = 4'b0110 >> { b[42], a[42] };
  assign _005_[43] = 4'b0110 >> { b[43], a[43] };
  assign _005_[44] = 4'b0110 >> { b[44], a[44] };
  assign _005_[45] = 4'b0110 >> { b[45], a[45] };
  assign _005_[46] = 4'b0110 >> { b[46], a[46] };
  assign _005_[47] = 4'b0110 >> { b[47], a[47] };
  adder_carry _106_ (
    .cin(_002_[48]),
    .g(1'b0),
    .p(1'b0),
    .sumout(_000_)
  );
  adder_carry _107_ (
    .cin(_002_[0]),
    .cout(_002_[1]),
    .g(a[49]),
    .p(_003_[0]),
    .sumout(sum[49])
  );
  adder_carry _108_ (
    .cin(_002_[10]),
    .cout(_002_[11]),
    .g(a[59]),
    .p(_003_[10]),
    .sumout(sum[59])
  );
  adder_carry _109_ (
    .cin(_002_[11]),
    .cout(_002_[12]),
    .g(a[60]),
    .p(_003_[11]),
    .sumout(sum[60])
  );
  adder_carry _110_ (
    .cin(_002_[12]),
    .cout(_002_[13]),
    .g(a[61]),
    .p(_003_[12]),
    .sumout(sum[61])
  );
  adder_carry _111_ (
    .cin(_002_[13]),
    .cout(_002_[14]),
    .g(a[62]),
    .p(_003_[13]),
    .sumout(sum[62])
  );
  adder_carry _112_ (
    .cin(_002_[14]),
    .cout(_002_[15]),
    .g(a[63]),
    .p(_003_[14]),
    .sumout(sum[63])
  );
  adder_carry _113_ (
    .cin(_002_[15]),
    .cout(_002_[16]),
    .g(a[64]),
    .p(_003_[15]),
    .sumout(sum[64])
  );
  adder_carry _114_ (
    .cin(_002_[16]),
    .cout(_002_[17]),
    .g(a[65]),
    .p(_003_[16]),
    .sumout(sum[65])
  );
  adder_carry _115_ (
    .cin(_002_[17]),
    .cout(_002_[18]),
    .g(a[66]),
    .p(_003_[17]),
    .sumout(sum[66])
  );
  adder_carry _116_ (
    .cin(_002_[18]),
    .cout(_002_[19]),
    .g(a[67]),
    .p(_003_[18]),
    .sumout(sum[67])
  );
  adder_carry _117_ (
    .cin(_002_[19]),
    .cout(_002_[20]),
    .g(a[68]),
    .p(_003_[19]),
    .sumout(sum[68])
  );
  adder_carry _118_ (
    .cin(_002_[1]),
    .cout(_002_[2]),
    .g(a[50]),
    .p(_003_[1]),
    .sumout(sum[50])
  );
  adder_carry _119_ (
    .cin(_002_[20]),
    .cout(_002_[21]),
    .g(a[69]),
    .p(_003_[20]),
    .sumout(sum[69])
  );
  adder_carry _120_ (
    .cin(_002_[21]),
    .cout(_002_[22]),
    .g(a[70]),
    .p(_003_[21]),
    .sumout(sum[70])
  );
  adder_carry _121_ (
    .cin(_002_[22]),
    .cout(_002_[23]),
    .g(a[71]),
    .p(_003_[22]),
    .sumout(sum[71])
  );
  adder_carry _122_ (
    .cin(_002_[23]),
    .cout(_002_[24]),
    .g(a[72]),
    .p(_003_[23]),
    .sumout(sum[72])
  );
  adder_carry _123_ (
    .cin(_002_[24]),
    .cout(_002_[25]),
    .g(a[73]),
    .p(_003_[24]),
    .sumout(sum[73])
  );
  adder_carry _124_ (
    .cin(_002_[25]),
    .cout(_002_[26]),
    .g(a[74]),
    .p(_003_[25]),
    .sumout(sum[74])
  );
  adder_carry _125_ (
    .cin(_002_[26]),
    .cout(_002_[27]),
    .g(a[75]),
    .p(_003_[26]),
    .sumout(sum[75])
  );
  adder_carry _126_ (
    .cin(_002_[27]),
    .cout(_002_[28]),
    .g(a[76]),
    .p(_003_[27]),
    .sumout(sum[76])
  );
  adder_carry _127_ (
    .cin(_002_[28]),
    .cout(_002_[29]),
    .g(a[77]),
    .p(_003_[28]),
    .sumout(sum[77])
  );
  adder_carry _128_ (
    .cin(_002_[29]),
    .cout(_002_[30]),
    .g(a[78]),
    .p(_003_[29]),
    .sumout(sum[78])
  );
  adder_carry _129_ (
    .cin(_002_[2]),
    .cout(_002_[3]),
    .g(a[51]),
    .p(_003_[2]),
    .sumout(sum[51])
  );
  adder_carry _130_ (
    .cin(_002_[30]),
    .cout(_002_[31]),
    .g(a[79]),
    .p(_003_[30]),
    .sumout(sum[79])
  );
  adder_carry _131_ (
    .cin(_002_[31]),
    .cout(_002_[32]),
    .g(a[80]),
    .p(_003_[31]),
    .sumout(sum[80])
  );
  adder_carry _132_ (
    .cin(_002_[32]),
    .cout(_002_[33]),
    .g(a[81]),
    .p(_003_[32]),
    .sumout(sum[81])
  );
  adder_carry _133_ (
    .cin(_002_[33]),
    .cout(_002_[34]),
    .g(a[82]),
    .p(_003_[33]),
    .sumout(sum[82])
  );
  adder_carry _134_ (
    .cin(_002_[34]),
    .cout(_002_[35]),
    .g(a[83]),
    .p(_003_[34]),
    .sumout(sum[83])
  );
  adder_carry _135_ (
    .cin(_002_[35]),
    .cout(_002_[36]),
    .g(a[84]),
    .p(_003_[35]),
    .sumout(sum[84])
  );
  adder_carry _136_ (
    .cin(_002_[36]),
    .cout(_002_[37]),
    .g(a[85]),
    .p(_003_[36]),
    .sumout(sum[85])
  );
  adder_carry _137_ (
    .cin(_002_[37]),
    .cout(_002_[38]),
    .g(a[86]),
    .p(_003_[37]),
    .sumout(sum[86])
  );
  adder_carry _138_ (
    .cin(_002_[38]),
    .cout(_002_[39]),
    .g(a[87]),
    .p(_003_[38]),
    .sumout(sum[87])
  );
  adder_carry _139_ (
    .cin(_002_[39]),
    .cout(_002_[40]),
    .g(a[88]),
    .p(_003_[39]),
    .sumout(sum[88])
  );
  adder_carry _140_ (
    .cin(_002_[3]),
    .cout(_002_[4]),
    .g(a[52]),
    .p(_003_[3]),
    .sumout(sum[52])
  );
  adder_carry _141_ (
    .cin(_002_[40]),
    .cout(_002_[41]),
    .g(a[89]),
    .p(_003_[40]),
    .sumout(sum[89])
  );
  adder_carry _142_ (
    .cin(_002_[41]),
    .cout(_002_[42]),
    .g(a[90]),
    .p(_003_[41]),
    .sumout(sum[90])
  );
  adder_carry _143_ (
    .cin(_002_[42]),
    .cout(_002_[43]),
    .g(a[91]),
    .p(_003_[42]),
    .sumout(sum[91])
  );
  adder_carry _144_ (
    .cin(_002_[43]),
    .cout(_002_[44]),
    .g(a[92]),
    .p(_003_[43]),
    .sumout(sum[92])
  );
  adder_carry _145_ (
    .cin(_002_[44]),
    .cout(_002_[45]),
    .g(a[93]),
    .p(_003_[44]),
    .sumout(sum[93])
  );
  adder_carry _146_ (
    .cin(_002_[45]),
    .cout(_002_[46]),
    .g(a[94]),
    .p(_003_[45]),
    .sumout(sum[94])
  );
  adder_carry _147_ (
    .cin(_002_[46]),
    .cout(_002_[47]),
    .g(a[95]),
    .p(_003_[46]),
    .sumout(sum[95])
  );
  adder_carry _148_ (
    .cin(_002_[47]),
    .cout(_002_[48]),
    .g(a[96]),
    .p(_003_[47]),
    .sumout(sum[96])
  );
  adder_carry _149_ (
    .cin(_002_[4]),
    .cout(_002_[5]),
    .g(a[53]),
    .p(_003_[4]),
    .sumout(sum[53])
  );
  adder_carry _150_ (
    .cin(_002_[5]),
    .cout(_002_[6]),
    .g(a[54]),
    .p(_003_[5]),
    .sumout(sum[54])
  );
  adder_carry _151_ (
    .cin(_002_[6]),
    .cout(_002_[7]),
    .g(a[55]),
    .p(_003_[6]),
    .sumout(sum[55])
  );
  adder_carry _152_ (
    .cin(_002_[7]),
    .cout(_002_[8]),
    .g(a[56]),
    .p(_003_[7]),
    .sumout(sum[56])
  );
  adder_carry _153_ (
    .cin(_002_[8]),
    .cout(_002_[9]),
    .g(a[57]),
    .p(_003_[8]),
    .sumout(sum[57])
  );
  adder_carry _154_ (
    .cin(_002_[9]),
    .cout(_002_[10]),
    .g(a[58]),
    .p(_003_[9]),
    .sumout(sum[58])
  );
  adder_carry _155_ (
    .cout(_002_[0]),
    .g(cin[1]),
    .p(1'b0)
  );
  adder_carry _156_ (
    .cin(_004_[48]),
    .g(1'b0),
    .p(1'b0),
    .sumout(_001_)
  );
  adder_carry _157_ (
    .cin(_004_[0]),
    .cout(_004_[1]),
    .g(a[0]),
    .p(_005_[0]),
    .sumout(sum[0])
  );
  adder_carry _158_ (
    .cin(_004_[10]),
    .cout(_004_[11]),
    .g(a[10]),
    .p(_005_[10]),
    .sumout(sum[10])
  );
  adder_carry _159_ (
    .cin(_004_[11]),
    .cout(_004_[12]),
    .g(a[11]),
    .p(_005_[11]),
    .sumout(sum[11])
  );
  adder_carry _160_ (
    .cin(_004_[12]),
    .cout(_004_[13]),
    .g(a[12]),
    .p(_005_[12]),
    .sumout(sum[12])
  );
  adder_carry _161_ (
    .cin(_004_[13]),
    .cout(_004_[14]),
    .g(a[13]),
    .p(_005_[13]),
    .sumout(sum[13])
  );
  adder_carry _162_ (
    .cin(_004_[14]),
    .cout(_004_[15]),
    .g(a[14]),
    .p(_005_[14]),
    .sumout(sum[14])
  );
  adder_carry _163_ (
    .cin(_004_[15]),
    .cout(_004_[16]),
    .g(a[15]),
    .p(_005_[15]),
    .sumout(sum[15])
  );
  adder_carry _164_ (
    .cin(_004_[16]),
    .cout(_004_[17]),
    .g(a[16]),
    .p(_005_[16]),
    .sumout(sum[16])
  );
  adder_carry _165_ (
    .cin(_004_[17]),
    .cout(_004_[18]),
    .g(a[17]),
    .p(_005_[17]),
    .sumout(sum[17])
  );
  adder_carry _166_ (
    .cin(_004_[18]),
    .cout(_004_[19]),
    .g(a[18]),
    .p(_005_[18]),
    .sumout(sum[18])
  );
  adder_carry _167_ (
    .cin(_004_[19]),
    .cout(_004_[20]),
    .g(a[19]),
    .p(_005_[19]),
    .sumout(sum[19])
  );
  adder_carry _168_ (
    .cin(_004_[1]),
    .cout(_004_[2]),
    .g(a[1]),
    .p(_005_[1]),
    .sumout(sum[1])
  );
  adder_carry _169_ (
    .cin(_004_[20]),
    .cout(_004_[21]),
    .g(a[20]),
    .p(_005_[20]),
    .sumout(sum[20])
  );
  adder_carry _170_ (
    .cin(_004_[21]),
    .cout(_004_[22]),
    .g(a[21]),
    .p(_005_[21]),
    .sumout(sum[21])
  );
  adder_carry _171_ (
    .cin(_004_[22]),
    .cout(_004_[23]),
    .g(a[22]),
    .p(_005_[22]),
    .sumout(sum[22])
  );
  adder_carry _172_ (
    .cin(_004_[23]),
    .cout(_004_[24]),
    .g(a[23]),
    .p(_005_[23]),
    .sumout(sum[23])
  );
  adder_carry _173_ (
    .cin(_004_[24]),
    .cout(_004_[25]),
    .g(a[24]),
    .p(_005_[24]),
    .sumout(sum[24])
  );
  adder_carry _174_ (
    .cin(_004_[25]),
    .cout(_004_[26]),
    .g(a[25]),
    .p(_005_[25]),
    .sumout(sum[25])
  );
  adder_carry _175_ (
    .cin(_004_[26]),
    .cout(_004_[27]),
    .g(a[26]),
    .p(_005_[26]),
    .sumout(sum[26])
  );
  adder_carry _176_ (
    .cin(_004_[27]),
    .cout(_004_[28]),
    .g(a[27]),
    .p(_005_[27]),
    .sumout(sum[27])
  );
  adder_carry _177_ (
    .cin(_004_[28]),
    .cout(_004_[29]),
    .g(a[28]),
    .p(_005_[28]),
    .sumout(sum[28])
  );
  adder_carry _178_ (
    .cin(_004_[29]),
    .cout(_004_[30]),
    .g(a[29]),
    .p(_005_[29]),
    .sumout(sum[29])
  );
  adder_carry _179_ (
    .cin(_004_[2]),
    .cout(_004_[3]),
    .g(a[2]),
    .p(_005_[2]),
    .sumout(sum[2])
  );
  adder_carry _180_ (
    .cin(_004_[30]),
    .cout(_004_[31]),
    .g(a[30]),
    .p(_005_[30]),
    .sumout(sum[30])
  );
  adder_carry _181_ (
    .cin(_004_[31]),
    .cout(_004_[32]),
    .g(a[31]),
    .p(_005_[31]),
    .sumout(sum[31])
  );
  adder_carry _182_ (
    .cin(_004_[32]),
    .cout(_004_[33]),
    .g(a[32]),
    .p(_005_[32]),
    .sumout(sum[32])
  );
  adder_carry _183_ (
    .cin(_004_[33]),
    .cout(_004_[34]),
    .g(a[33]),
    .p(_005_[33]),
    .sumout(sum[33])
  );
  adder_carry _184_ (
    .cin(_004_[34]),
    .cout(_004_[35]),
    .g(a[34]),
    .p(_005_[34]),
    .sumout(sum[34])
  );
  adder_carry _185_ (
    .cin(_004_[35]),
    .cout(_004_[36]),
    .g(a[35]),
    .p(_005_[35]),
    .sumout(sum[35])
  );
  adder_carry _186_ (
    .cin(_004_[36]),
    .cout(_004_[37]),
    .g(a[36]),
    .p(_005_[36]),
    .sumout(sum[36])
  );
  adder_carry _187_ (
    .cin(_004_[37]),
    .cout(_004_[38]),
    .g(a[37]),
    .p(_005_[37]),
    .sumout(sum[37])
  );
  adder_carry _188_ (
    .cin(_004_[38]),
    .cout(_004_[39]),
    .g(a[38]),
    .p(_005_[38]),
    .sumout(sum[38])
  );
  adder_carry _189_ (
    .cin(_004_[39]),
    .cout(_004_[40]),
    .g(a[39]),
    .p(_005_[39]),
    .sumout(sum[39])
  );
  adder_carry _190_ (
    .cin(_004_[3]),
    .cout(_004_[4]),
    .g(a[3]),
    .p(_005_[3]),
    .sumout(sum[3])
  );
  adder_carry _191_ (
    .cin(_004_[40]),
    .cout(_004_[41]),
    .g(a[40]),
    .p(_005_[40]),
    .sumout(sum[40])
  );
  adder_carry _192_ (
    .cin(_004_[41]),
    .cout(_004_[42]),
    .g(a[41]),
    .p(_005_[41]),
    .sumout(sum[41])
  );
  adder_carry _193_ (
    .cin(_004_[42]),
    .cout(_004_[43]),
    .g(a[42]),
    .p(_005_[42]),
    .sumout(sum[42])
  );
  adder_carry _194_ (
    .cin(_004_[43]),
    .cout(_004_[44]),
    .g(a[43]),
    .p(_005_[43]),
    .sumout(sum[43])
  );
  adder_carry _195_ (
    .cin(_004_[44]),
    .cout(_004_[45]),
    .g(a[44]),
    .p(_005_[44]),
    .sumout(sum[44])
  );
  adder_carry _196_ (
    .cin(_004_[45]),
    .cout(_004_[46]),
    .g(a[45]),
    .p(_005_[45]),
    .sumout(sum[45])
  );
  adder_carry _197_ (
    .cin(_004_[46]),
    .cout(_004_[47]),
    .g(a[46]),
    .p(_005_[46]),
    .sumout(sum[46])
  );
  adder_carry _198_ (
    .cin(_004_[47]),
    .cout(_004_[48]),
    .g(a[47]),
    .p(_005_[47]),
    .sumout(sum[47])
  );
  adder_carry _199_ (
    .cin(_004_[4]),
    .cout(_004_[5]),
    .g(a[4]),
    .p(_005_[4]),
    .sumout(sum[4])
  );
  adder_carry _200_ (
    .cin(_004_[5]),
    .cout(_004_[6]),
    .g(a[5]),
    .p(_005_[5]),
    .sumout(sum[5])
  );
  adder_carry _201_ (
    .cin(_004_[6]),
    .cout(_004_[7]),
    .g(a[6]),
    .p(_005_[6]),
    .sumout(sum[6])
  );
  adder_carry _202_ (
    .cin(_004_[7]),
    .cout(_004_[8]),
    .g(a[7]),
    .p(_005_[7]),
    .sumout(sum[7])
  );
  adder_carry _203_ (
    .cin(_004_[8]),
    .cout(_004_[9]),
    .g(a[8]),
    .p(_005_[8]),
    .sumout(sum[8])
  );
  adder_carry _204_ (
    .cin(_004_[9]),
    .cout(_004_[10]),
    .g(a[9]),
    .p(_005_[9]),
    .sumout(sum[9])
  );
  adder_carry _205_ (
    .cout(_004_[0]),
    .g(cin[0]),
    .p(1'b0)
  );
  assign _005_[49] = 1'b0;
  assign _004_[50:49] = { 1'b0, \ad1.cout  };
  assign _003_[49] = 1'b0;
  assign _002_[50:49] = { 1'b0, \ad2.cout  };
  assign cout = { \ad2.cout , \ad1.cout  };
endmodule
