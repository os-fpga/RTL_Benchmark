/* Generated by Yosys 0.16+65 (git sha1 051517d61, gcc 9.1.0 -fPIC -Os) */

module b10(r_button, g_button, key, start, reset, test, cts, ctr, rts, rtr, clock, v_out, v_in);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  wire _23_;
  wire _24_;
  wire _25_;
  wire _26_;
  wire _27_;
  wire _28_;
  wire _29_;
  wire _30_;
  wire _31_;
  wire _32_;
  input clock;
  wire clock;
  output ctr;
  wire ctr;
  output cts;
  wire cts;
  input g_button;
  wire g_button;
  input key;
  wire key;
  input r_button;
  wire r_button;
  input reset;
  wire reset;
  input rtr;
  wire rtr;
  input rts;
  wire rts;
  input start;
  wire start;
  wire [3:0] stato;
  input test;
  wire test;
  input [3:0] v_in;
  wire [3:0] v_in;
  output [3:0] v_out;
  wire [3:0] v_out;
  wire voto0;
  wire voto1;
  wire voto2;
  wire voto3;
  dffsre _33_ (
    .C(clock),
    .D(voto3),
    .E(_00_),
    .Q(v_out[3]),
    .R(_32_),
    .S(1'b1)
  );
  dffsre _34_ (
    .C(clock),
    .D(voto2),
    .E(_00_),
    .Q(v_out[2]),
    .R(_32_),
    .S(1'b1)
  );
  dffsre _35_ (
    .C(clock),
    .D(voto1),
    .E(_00_),
    .Q(v_out[1]),
    .R(_32_),
    .S(1'b1)
  );
  dffsre _36_ (
    .C(clock),
    .D(voto0),
    .E(_00_),
    .Q(v_out[0]),
    .R(_32_),
    .S(1'b1)
  );
  dffsre _37_ (
    .C(clock),
    .D(stato[3]),
    .E(_01_),
    .Q(_02_),
    .R(_32_),
    .S(1'b1)
  );
  dffsre _38_ (
    .C(clock),
    .D(_05_),
    .E(_03_),
    .Q(stato[2]),
    .R(_32_),
    .S(1'b1)
  );
  dffsre _39_ (
    .C(clock),
    .D(_06_),
    .E(_03_),
    .Q(_07_),
    .R(_32_),
    .S(1'b1)
  );
  dffsre _40_ (
    .C(clock),
    .D(_14_),
    .E(_08_),
    .Q(stato[3]),
    .R(_32_),
    .S(1'b1)
  );
  dffsre _41_ (
    .C(clock),
    .D(_15_),
    .E(_08_),
    .Q(stato[1]),
    .R(_32_),
    .S(1'b1)
  );
  dffsre _42_ (
    .C(clock),
    .D(_09_),
    .E(_16_),
    .Q(voto0),
    .R(_32_),
    .S(1'b1)
  );
  dffsre _43_ (
    .C(clock),
    .D(_10_),
    .E(_17_),
    .Q(voto1),
    .R(_32_),
    .S(1'b1)
  );
  dffsre _44_ (
    .C(clock),
    .D(_11_),
    .E(_18_),
    .Q(voto2),
    .R(_32_),
    .S(1'b1)
  );
  dffsre _45_ (
    .C(clock),
    .D(_12_),
    .E(_19_),
    .Q(voto3),
    .R(_32_),
    .S(1'b1)
  );
  dffsre _46_ (
    .C(clock),
    .D(r_button),
    .E(_20_),
    .Q(_21_),
    .R(_32_),
    .S(1'b1)
  );
  dffsre _47_ (
    .C(clock),
    .D(g_button),
    .E(_20_),
    .Q(_22_),
    .R(_32_),
    .S(1'b1)
  );
  dffsre _48_ (
    .C(clock),
    .D(_13_),
    .E(_23_),
    .Q(cts),
    .R(_32_),
    .S(1'b1)
  );
  dffsre _49_ (
    .C(clock),
    .D(_04_),
    .E(_24_),
    .Q(ctr),
    .R(_32_),
    .S(1'b1)
  );
  assign _04_ = 4'b0100 >> stato[2:1];
  assign _00_ = 32'd3436101632 >> { stato[2], _07_, stato[1], stato[3], rtr };
  assign _25_ = 16'b1000000000000000 >> { v_in[3], v_in[0], v_in[2:1] };
  assign _26_ = 32'd4294627327 >> { stato[2], stato[3], _07_, _25_, rtr };
  assign _27_ = 8'b00111010 >> { stato[2], rts, start };
  assign _08_ = 32'd4291799210 >> { stato[1], _07_, _27_, stato[3], _26_ };
  assign _03_ = 64'b1010101010101000001010101010101010101010101010101010101010101010 >> { rtr, stato[3], stato[1], stato[2], _07_, _08_ };
  assign _28_ = 16'b0001000000000000 >> { voto2, voto1, voto3, voto0 };
  assign _06_ = 32'd986887 >> { stato[1], stato[3], _07_, stato[2], _28_ };
  assign _23_ = 16'b1110100010110111 >> { stato[1], stato[2], _07_, stato[3] };
  assign _19_ = 64'b1111111100000000111111110011000011111111111111000000000001001111 >> { stato[2], _07_, stato[3], stato[1], _27_, key };
  assign _16_ = 64'b1111111111111111111111111111000000001010000000001111110011001111 >> { stato[3:1], _07_, start, rts };
  assign _29_ = 64'b0000000000000000000000001111111111111111010111111111001100110000 >> { stato[3:2], _07_, stato[1], start, rts };
  assign _30_ = 8'b01000000 >> { key, stato[1], _07_ };
  assign _18_ = 64'b0000111100001111000011110000001000001111000011110000111100001111 >> { _30_, stato[2], stato[3], _29_, _21_, r_button };
  assign _17_ = 64'b0000111100001111000011110000001000001111000011110000111100001111 >> { _30_, stato[2], stato[3], _29_, _22_, g_button };
  assign _15_ = 32'd261030128 >> { _07_, stato[3], stato[1], stato[2], rtr };
  assign _01_ = 32'd4293918721 >> { stato[3:2], _07_, test, stato[1] };
  assign _14_ = 64'b0000000000000000111111111111000000000000000000001100110011011101 >> { stato[3], stato[1], _07_, rtr, _01_, _06_ };
  assign _09_ = 64'b0011111100110000001111110011000011111111000000001010101010101010 >> { stato[3:2], v_in[0], stato[1], _02_, _30_ };
  assign _10_ = 64'b1111111100000000111111110000000011111111000000000100000001000000 >> { stato[2], stato[3], v_in[1], key, stato[1], voto1 };
  assign _11_ = 64'b1111111100000000111111110000000011111111000000000100000001000000 >> { stato[2], stato[3], v_in[2], key, stato[1], voto2 };
  assign _31_ = 32'd2516582400 >> { stato[1], _07_, voto0, voto2, voto1 };
  assign _12_ = 16'b1100110011001010 >> { stato[2], stato[3], v_in[3], _31_ };
  assign _13_ = 64'b1111000000000000111100110011000011110000000000001010101000000000 >> { stato[2], stato[3], rtr, cts, stato[1], _07_ };
  assign _05_ = 32'd4294717456 >> { stato[1], _07_, stato[2], stato[3], _28_ };
  assign _20_ = 64'b1111111111110000111100001111000000000000000010000000000000000000 >> { stato[3], stato[1], _07_, stato[2], key, start };
  assign _24_ = 32'd3454844931 >> { stato[2], _07_, stato[1], stato[3], rts };
  assign _32_ = 2'b01 >> reset;
endmodule
