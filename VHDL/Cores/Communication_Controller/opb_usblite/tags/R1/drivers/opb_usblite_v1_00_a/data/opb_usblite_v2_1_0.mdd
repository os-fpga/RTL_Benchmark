#--
#--    opb_usblite - opb_uartlite replacement
#--
#--    opb_usblite is using components from Rudolf Usselmann see
#--    http://www.opencores.org/cores/usb_phy/
#--    and Joris van Rantwijk see http://www.xs4all.nl/~rjoris/fpga/usb.html
#--
#--    Copyright (C) 2010 Ake Rehnman
#--
#--    This program is free software: you can redistribute it and/or modify
#--    it under the terms of the GNU Lesser General Public License as published by
#--    the Free Software Foundation, either version 3 of the License, or
#--    (at your option) any later version.
#--
#--    This program is distributed in the hope that it will be useful,
#--    but WITHOUT ANY WARRANTY; without even the implied warranty of
#--    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#--    GNU Lesser General Public License for more details.
#--
#--    You should have received a copy of the GNU Lesser General Public License
#--    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#--

OPTION psf_version = 2.1;

BEGIN driver opb_usblite

  OPTION supported_peripherals = (opb_usblite);
  OPTION driver_state = ACTIVE;
  OPTION depends = (common_v1_00_a);
  OPTION copyfiles = all;	

    BEGIN INTERFACE stdin
      PROPERTY header = usblite_l.h;
      FUNCTION name = inbyte, value = usblite_RecvByte;
    END INTERFACE

    BEGIN INTERFACE stdout
      PROPERTY header = usblite_l.h;
      FUNCTION name = outbyte, value = usblite_SendByte;
    END INTERFACE

    BEGIN INTERFACE stdio
      PROPERTY header = usblite_l.h;
      FUNCTION name = inbyte, value = usblite_RecvByte;
      FUNCTION name = outbyte, value = usblite_SendByte;
    END INTERFACE

    BEGIN INTERFACE vxworks5_4
    END INTERFACE

    BEGIN INTERFACE vxworks5_5
    END INTERFACE

    BEGIN INTERFACE vxworks6_1
    END INTERFACE

    BEGIN INTERFACE vxworks6_3
    END INTERFACE

    BEGIN INTERFACE linux
    END INTERFACE

    BEGIN ARRAY interrupt_handler
      PROPERTY desc = "Interrupt Handler Information";
      PROPERTY size = 1, permit = none;
      PARAM name = int_handler, default = XNullHandler, desc = "Name of Interrupt Handler", type = string;
      PARAM name = int_port, default = Interrupt, desc = "Interrupt pin associated with the interrupt handler", permit = none;
    END ARRAY

END driver
