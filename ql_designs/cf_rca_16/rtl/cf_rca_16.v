//
//  Copyright (c) 2003 Launchbird Design Systems, Inc.
//  All rights reserved.
//  
//  Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
//    Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
//    Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
//  
//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
//  INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
//  OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
//  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//  
//  Overview:
//  
//    Reconfigurable Computing Array (RCA) is a fine-grained array of programmable tiles.
//    Similar to FPGA CLBs, a tile can implement a wide variety of logic functions.
//    But unlike most FPGAs, RCA can be partially reconfigured dynamically.
//  
//    Also, RCA has no routing fabric.  Instead, the square tiles communicate directly
//    with their nearest neighbor (N, S, W, E), providing fast, deterministic timing and 
//    far greater logic density compared with FPGAs.
//  
//    Each tile implements a programmable 4-bit input to 4-bit output function.
//  
//  Interface:
//  
//    Each side of the array comprises 2 N-bit data buses for a total of 8 buses:
//    north_i, north_o, south_i, south_o, west_i, west_o, east_i, and east_o.
//    The 0 bit in each bus corresponds to northern most or western most tile.
//    All tile registers are synchronized on clock_main_c.
//  
//    Device programming is controlled via the configuration bus.  Each directional datapath
//    of each tile is addressable for configuration.  The configuration addressing format follows:
//  
//      ConfigAddr = {RowSelect, ColSelect, DirSelect} where
//      DirSelect  : 00=north, 01=south, 10=west, 11=east.
//  
//    The configuration data format follows:
//  
//      ConfigData[17]    : Output Select (0=direct, 1=registered)
//      ConfigData[16:14] : Input Select 2  (000=north_in, 001=south_in, 010=west_in, 011=east_in, 100=north_state, 101=south_state, 110=west_state, 111=east_state
//      ConfigData[13:11] : Input Select 1
//      ConfigData[10:8]  : Input Select 0
//      ConfigData[7:0]   : LUT data  {f(7), f(6), f(5), f(4), f(3), f(2), f(1), f(0)}
//  
//  
//  Generated by Confluence 0.6.3  --  Launchbird Design Systems, Inc.  --  www.launchbird.com
//  
//  Build Date : Thu Aug 21 15:06:59 CDT 2003
//  
//  Interface
//  
//    Build Name    : cf_rca_16
//    Clock Domains : clock_config_c  clock_main_c  
//    Vector Input  : config_write_i(1)
//    Vector Input  : config_addr_i(10)
//    Vector Input  : config_data_i(18)
//    Vector Input  : north_i(16)
//    Vector Input  : south_i(16)
//    Vector Input  : west_i(16)
//    Vector Input  : east_i(16)
//    Vector Output : north_o(16)
//    Vector Output : south_o(16)
//    Vector Output : west_o(16)
//    Vector Output : east_o(16)
//  
//  
//  

`timescale 1 ns / 1 ns

module top (clock_config_c, clock_main_c, config_write_i, config_addr_i, config_data_i, north_i, south_i, west_i, east_i, north_o, south_o, west_o, east_o);
input  clock_config_c;
input  clock_main_c;
input  config_write_i;
input  [9:0] config_addr_i;
input  [17:0] config_data_i;
input  [15:0] north_i;
input  [15:0] south_i;
input  [15:0] west_i;
input  [15:0] east_i;
output [15:0] north_o;
output [15:0] south_o;
output [15:0] west_o;
output [15:0] east_o;
wire   [15:0] n1;
wire   [15:0] n2;
wire   [15:0] n3;
wire   [15:0] n4;
cf_rca_16_1 s1 (clock_config_c, clock_main_c, config_write_i, config_addr_i, config_data_i, north_i, south_i, west_i, east_i, n1, n2, n3, n4);
assign north_o = n1;
assign south_o = n2;
assign west_o = n4;
assign east_o = n3;
endmodule

module cf_rca_16_1 (clock_config_c, clock_main_c, i1, i2, i3, i4, i5, i6, i7, o1, o2, o3, o4);
input  clock_config_c;
input  clock_main_c;
input  i1;
input  [9:0] i2;
input  [17:0] i3;
input  [15:0] i4;
input  [15:0] i5;
input  [15:0] i6;
input  [15:0] i7;
output [15:0] o1;
output [15:0] o2;
output [15:0] o3;
output [15:0] o4;
wire   n1;
wire   n2;
wire   [3:0] n3;
wire   [3:0] n4;
wire   [1:0] n5;
wire   [4:0] n6;
wire   [15:0] n7;
wire   [15:0] s8_1;
wire   [15:0] s8_2;
wire   [15:0] s8_3;
wire   [15:0] s8_4;
wire   [15:0] s8_5;
wire   [15:0] s8_6;
wire   [15:0] s8_7;
wire   [15:0] s8_8;
wire   [15:0] s8_9;
wire   [15:0] s8_10;
wire   [15:0] s8_11;
wire   [15:0] s8_12;
wire   [15:0] s8_13;
wire   [15:0] s8_14;
wire   [15:0] s8_15;
wire   [15:0] s8_16;
wire   [15:0] s9_1;
wire   [15:0] s10_1;
wire   [15:0] s10_2;
wire   [15:0] s10_3;
wire   [15:0] s10_4;
assign n1 = 1'b1;
assign n2 = 1'b0;
assign n3 = {i2[9],
  i2[8],
  i2[7],
  i2[6]};
assign n4 = {i2[5],
  i2[4],
  i2[3],
  i2[2]};
assign n5 = {i2[1],
  i2[0]};
assign n6 = {i1, n3};
assign n7 = 16'b0000000000000000;
cf_rca_16_38 s8 (s8_1, s8_2, s8_3, s8_4, s8_5, s8_6, s8_7, s8_8, s8_9, s8_10, s8_11, s8_12, s8_13, s8_14, s8_15, s8_16);
cf_rca_16_32 s9 (n6, s8_1, s8_2, s8_3, s8_4, s8_5, s8_6, s8_7, s8_8, s8_9, s8_10, s8_11, s8_12, s8_13, s8_14, s8_15, s8_16, n7, s9_1);
cf_rca_16_2 s10 (clock_config_c, clock_main_c, n1, n2, i3, i4, i5, i6, i7, n4, n5, s9_1, s10_1, s10_2, s10_3, s10_4);
assign o4 = s10_4;
assign o3 = s10_3;
assign o2 = s10_2;
assign o1 = s10_1;
endmodule

module cf_rca_16_2 (clock_config_c, clock_main_c, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, o1, o2, o3, o4);
input  clock_config_c;
input  clock_main_c;
input  i1;
input  i2;
input  [17:0] i3;
input  [15:0] i4;
input  [15:0] i5;
input  [15:0] i6;
input  [15:0] i7;
input  [3:0] i8;
input  [1:0] i9;
input  [15:0] i10;
output [15:0] o1;
output [15:0] o2;
output [15:0] o3;
output [15:0] o4;
wire   n1;
wire   [4:0] n2;
wire   [15:0] n3;
wire   n4;
wire   n5;
wire   n6;
wire   n7;
wire   [14:0] n8;
wire   [14:0] n9;
wire   [15:0] n10;
wire   [15:0] n11;
wire   [14:0] n12;
wire   [14:0] n13;
wire   [14:0] n14;
wire   n15;
wire   [14:0] n16;
wire   [15:0] n17;
wire   [15:0] n18;
wire   [15:0] s19_1;
wire   [15:0] s19_2;
wire   [15:0] s19_3;
wire   [15:0] s19_4;
wire   [15:0] s19_5;
wire   [15:0] s19_6;
wire   [15:0] s19_7;
wire   [15:0] s19_8;
wire   [15:0] s19_9;
wire   [15:0] s19_10;
wire   [15:0] s19_11;
wire   [15:0] s19_12;
wire   [15:0] s19_13;
wire   [15:0] s19_14;
wire   [15:0] s19_15;
wire   [15:0] s19_16;
wire   [15:0] s20_1;
wire   s21_1;
wire   s21_2;
wire   [14:0] s21_3;
wire   [14:0] s21_4;
wire   s22_1;
wire   s22_2;
wire   s22_3;
wire   s22_4;
wire   [15:0] s23_1;
wire   [15:0] s23_2;
wire   [14:0] s23_3;
wire   [14:0] s23_4;
assign n1 = i10[0];
assign n2 = {n1, i8};
assign n3 = 16'b0000000000000000;
assign n4 = i7[0];
assign n5 = i6[0];
assign n6 = s20_1[0];
assign n7 = i4[0];
assign n8 = {s20_1[15],
  s20_1[14],
  s20_1[13],
  s20_1[12],
  s20_1[11],
  s20_1[10],
  s20_1[9],
  s20_1[8],
  s20_1[7],
  s20_1[6],
  s20_1[5],
  s20_1[4],
  s20_1[3],
  s20_1[2],
  s20_1[1]};
assign n9 = {i4[15],
  i4[14],
  i4[13],
  i4[12],
  i4[11],
  i4[10],
  i4[9],
  i4[8],
  i4[7],
  i4[6],
  i4[5],
  i4[4],
  i4[3],
  i4[2],
  i4[1]};
assign n10 = {s21_3, s22_1};
assign n11 = {s21_4, s22_2};
assign n12 = {i10[15],
  i10[14],
  i10[13],
  i10[12],
  i10[11],
  i10[10],
  i10[9],
  i10[8],
  i10[7],
  i10[6],
  i10[5],
  i10[4],
  i10[3],
  i10[2],
  i10[1]};
assign n13 = {i7[15],
  i7[14],
  i7[13],
  i7[12],
  i7[11],
  i7[10],
  i7[9],
  i7[8],
  i7[7],
  i7[6],
  i7[5],
  i7[4],
  i7[3],
  i7[2],
  i7[1]};
assign n14 = {i6[15],
  i6[14],
  i6[13],
  i6[12],
  i6[11],
  i6[10],
  i6[9],
  i6[8],
  i6[7],
  i6[6],
  i6[5],
  i6[4],
  i6[3],
  i6[2],
  i6[1]};
assign n15 = s23_1[0];
assign n16 = {s23_1[15],
  s23_1[14],
  s23_1[13],
  s23_1[12],
  s23_1[11],
  s23_1[10],
  s23_1[9],
  s23_1[8],
  s23_1[7],
  s23_1[6],
  s23_1[5],
  s23_1[4],
  s23_1[3],
  s23_1[2],
  s23_1[1]};
assign n17 = {s23_3, s22_3};
assign n18 = {s23_4, s21_2};
cf_rca_16_38 s19 (s19_1, s19_2, s19_3, s19_4, s19_5, s19_6, s19_7, s19_8, s19_9, s19_10, s19_11, s19_12, s19_13, s19_14, s19_15, s19_16);
cf_rca_16_32 s20 (n2, s19_1, s19_2, s19_3, s19_4, s19_5, s19_6, s19_7, s19_8, s19_9, s19_10, s19_11, s19_12, s19_13, s19_14, s19_15, s19_16, n3, s20_1);
cf_rca_16_22 s21 (clock_config_c, clock_main_c, i1, i2, i3, i9, n5, s22_4, n8, n9, n16, s21_1, s21_2, s21_3, s21_4);
cf_rca_16_29 s22 (clock_config_c, clock_main_c, i1, i2, i3, i9, n4, n6, n7, s21_1, n15, s22_1, s22_2, s22_3, s22_4);
cf_rca_16_3 s23 (clock_config_c, clock_main_c, i1, i2, i3, i5, i8, i9, n11, n12, n13, n14, s23_1, s23_2, s23_3, s23_4);
assign o4 = n18;
assign o3 = n17;
assign o2 = s23_2;
assign o1 = n10;
endmodule

module cf_rca_16_3 (clock_config_c, clock_main_c, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, o1, o2, o3, o4);
input  clock_config_c;
input  clock_main_c;
input  i1;
input  i2;
input  [17:0] i3;
input  [15:0] i4;
input  [3:0] i5;
input  [1:0] i6;
input  [15:0] i7;
input  [14:0] i8;
input  [14:0] i9;
input  [14:0] i10;
output [15:0] o1;
output [15:0] o2;
output [14:0] o3;
output [14:0] o4;
wire   n1;
wire   [4:0] n2;
wire   [15:0] n3;
wire   n4;
wire   n5;
wire   n6;
wire   n7;
wire   [14:0] n8;
wire   [14:0] n9;
wire   [15:0] n10;
wire   [15:0] n11;
wire   [13:0] n12;
wire   [13:0] n13;
wire   [13:0] n14;
wire   n15;
wire   [14:0] n16;
wire   [14:0] n17;
wire   [14:0] n18;
wire   [15:0] s19_1;
wire   [15:0] s19_2;
wire   [15:0] s19_3;
wire   [15:0] s19_4;
wire   [15:0] s19_5;
wire   [15:0] s19_6;
wire   [15:0] s19_7;
wire   [15:0] s19_8;
wire   [15:0] s19_9;
wire   [15:0] s19_10;
wire   [15:0] s19_11;
wire   [15:0] s19_12;
wire   [15:0] s19_13;
wire   [15:0] s19_14;
wire   [15:0] s19_15;
wire   [15:0] s19_16;
wire   [15:0] s20_1;
wire   s21_1;
wire   s21_2;
wire   [14:0] s21_3;
wire   [14:0] s21_4;
wire   s22_1;
wire   s22_2;
wire   s22_3;
wire   s22_4;
wire   [15:0] s23_1;
wire   [15:0] s23_2;
wire   [13:0] s23_3;
wire   [13:0] s23_4;
assign n1 = i8[0];
assign n2 = {n1, i5};
assign n3 = 16'b0000000000000000;
assign n4 = i9[0];
assign n5 = i10[0];
assign n6 = s20_1[0];
assign n7 = i7[0];
assign n8 = {s20_1[15],
  s20_1[14],
  s20_1[13],
  s20_1[12],
  s20_1[11],
  s20_1[10],
  s20_1[9],
  s20_1[8],
  s20_1[7],
  s20_1[6],
  s20_1[5],
  s20_1[4],
  s20_1[3],
  s20_1[2],
  s20_1[1]};
assign n9 = {i7[15],
  i7[14],
  i7[13],
  i7[12],
  i7[11],
  i7[10],
  i7[9],
  i7[8],
  i7[7],
  i7[6],
  i7[5],
  i7[4],
  i7[3],
  i7[2],
  i7[1]};
assign n10 = {s21_3, s22_1};
assign n11 = {s21_4, s22_2};
assign n12 = {i8[14],
  i8[13],
  i8[12],
  i8[11],
  i8[10],
  i8[9],
  i8[8],
  i8[7],
  i8[6],
  i8[5],
  i8[4],
  i8[3],
  i8[2],
  i8[1]};
assign n13 = {i9[14],
  i9[13],
  i9[12],
  i9[11],
  i9[10],
  i9[9],
  i9[8],
  i9[7],
  i9[6],
  i9[5],
  i9[4],
  i9[3],
  i9[2],
  i9[1]};
assign n14 = {i10[14],
  i10[13],
  i10[12],
  i10[11],
  i10[10],
  i10[9],
  i10[8],
  i10[7],
  i10[6],
  i10[5],
  i10[4],
  i10[3],
  i10[2],
  i10[1]};
assign n15 = s23_1[0];
assign n16 = {s23_1[15],
  s23_1[14],
  s23_1[13],
  s23_1[12],
  s23_1[11],
  s23_1[10],
  s23_1[9],
  s23_1[8],
  s23_1[7],
  s23_1[6],
  s23_1[5],
  s23_1[4],
  s23_1[3],
  s23_1[2],
  s23_1[1]};
assign n17 = {s23_3, s22_3};
assign n18 = {s23_4, s21_2};
cf_rca_16_38 s19 (s19_1, s19_2, s19_3, s19_4, s19_5, s19_6, s19_7, s19_8, s19_9, s19_10, s19_11, s19_12, s19_13, s19_14, s19_15, s19_16);
cf_rca_16_32 s20 (n2, s19_1, s19_2, s19_3, s19_4, s19_5, s19_6, s19_7, s19_8, s19_9, s19_10, s19_11, s19_12, s19_13, s19_14, s19_15, s19_16, n3, s20_1);
cf_rca_16_22 s21 (clock_config_c, clock_main_c, i1, i2, i3, i6, n5, s22_4, n8, n9, n16, s21_1, s21_2, s21_3, s21_4);
cf_rca_16_29 s22 (clock_config_c, clock_main_c, i1, i2, i3, i6, n4, n6, n7, s21_1, n15, s22_1, s22_2, s22_3, s22_4);
cf_rca_16_4 s23 (clock_config_c, clock_main_c, i1, i2, i3, i4, i5, i6, n11, n12, n13, n14, s23_1, s23_2, s23_3, s23_4);
assign o4 = n18;
assign o3 = n17;
assign o2 = s23_2;
assign o1 = n10;
endmodule

module cf_rca_16_4 (clock_config_c, clock_main_c, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, o1, o2, o3, o4);
input  clock_config_c;
input  clock_main_c;
input  i1;
input  i2;
input  [17:0] i3;
input  [15:0] i4;
input  [3:0] i5;
input  [1:0] i6;
input  [15:0] i7;
input  [13:0] i8;
input  [13:0] i9;
input  [13:0] i10;
output [15:0] o1;
output [15:0] o2;
output [13:0] o3;
output [13:0] o4;
wire   n1;
wire   [4:0] n2;
wire   [15:0] n3;
wire   n4;
wire   n5;
wire   n6;
wire   n7;
wire   [14:0] n8;
wire   [14:0] n9;
wire   [15:0] n10;
wire   [15:0] n11;
wire   [12:0] n12;
wire   [12:0] n13;
wire   [12:0] n14;
wire   n15;
wire   [14:0] n16;
wire   [13:0] n17;
wire   [13:0] n18;
wire   [15:0] s19_1;
wire   [15:0] s19_2;
wire   [15:0] s19_3;
wire   [15:0] s19_4;
wire   [15:0] s19_5;
wire   [15:0] s19_6;
wire   [15:0] s19_7;
wire   [15:0] s19_8;
wire   [15:0] s19_9;
wire   [15:0] s19_10;
wire   [15:0] s19_11;
wire   [15:0] s19_12;
wire   [15:0] s19_13;
wire   [15:0] s19_14;
wire   [15:0] s19_15;
wire   [15:0] s19_16;
wire   [15:0] s20_1;
wire   s21_1;
wire   s21_2;
wire   [14:0] s21_3;
wire   [14:0] s21_4;
wire   s22_1;
wire   s22_2;
wire   s22_3;
wire   s22_4;
wire   [15:0] s23_1;
wire   [15:0] s23_2;
wire   [12:0] s23_3;
wire   [12:0] s23_4;
assign n1 = i8[0];
assign n2 = {n1, i5};
assign n3 = 16'b0000000000000000;
assign n4 = i9[0];
assign n5 = i10[0];
assign n6 = s20_1[0];
assign n7 = i7[0];
assign n8 = {s20_1[15],
  s20_1[14],
  s20_1[13],
  s20_1[12],
  s20_1[11],
  s20_1[10],
  s20_1[9],
  s20_1[8],
  s20_1[7],
  s20_1[6],
  s20_1[5],
  s20_1[4],
  s20_1[3],
  s20_1[2],
  s20_1[1]};
assign n9 = {i7[15],
  i7[14],
  i7[13],
  i7[12],
  i7[11],
  i7[10],
  i7[9],
  i7[8],
  i7[7],
  i7[6],
  i7[5],
  i7[4],
  i7[3],
  i7[2],
  i7[1]};
assign n10 = {s21_3, s22_1};
assign n11 = {s21_4, s22_2};
assign n12 = {i8[13],
  i8[12],
  i8[11],
  i8[10],
  i8[9],
  i8[8],
  i8[7],
  i8[6],
  i8[5],
  i8[4],
  i8[3],
  i8[2],
  i8[1]};
assign n13 = {i9[13],
  i9[12],
  i9[11],
  i9[10],
  i9[9],
  i9[8],
  i9[7],
  i9[6],
  i9[5],
  i9[4],
  i9[3],
  i9[2],
  i9[1]};
assign n14 = {i10[13],
  i10[12],
  i10[11],
  i10[10],
  i10[9],
  i10[8],
  i10[7],
  i10[6],
  i10[5],
  i10[4],
  i10[3],
  i10[2],
  i10[1]};
assign n15 = s23_1[0];
assign n16 = {s23_1[15],
  s23_1[14],
  s23_1[13],
  s23_1[12],
  s23_1[11],
  s23_1[10],
  s23_1[9],
  s23_1[8],
  s23_1[7],
  s23_1[6],
  s23_1[5],
  s23_1[4],
  s23_1[3],
  s23_1[2],
  s23_1[1]};
assign n17 = {s23_3, s22_3};
assign n18 = {s23_4, s21_2};
cf_rca_16_38 s19 (s19_1, s19_2, s19_3, s19_4, s19_5, s19_6, s19_7, s19_8, s19_9, s19_10, s19_11, s19_12, s19_13, s19_14, s19_15, s19_16);
cf_rca_16_32 s20 (n2, s19_1, s19_2, s19_3, s19_4, s19_5, s19_6, s19_7, s19_8, s19_9, s19_10, s19_11, s19_12, s19_13, s19_14, s19_15, s19_16, n3, s20_1);
cf_rca_16_22 s21 (clock_config_c, clock_main_c, i1, i2, i3, i6, n5, s22_4, n8, n9, n16, s21_1, s21_2, s21_3, s21_4);
cf_rca_16_29 s22 (clock_config_c, clock_main_c, i1, i2, i3, i6, n4, n6, n7, s21_1, n15, s22_1, s22_2, s22_3, s22_4);
//cf_rca_16_5 s23 (clock_config_c, clock_main_c, i1, i2, i3, i4, i5, i6, n11, n12, n13, n14, s23_1, s23_2, s23_3, s23_4);
assign o4 = n18;
assign o3 = n17;
assign o2 = s23_2;
assign o1 = n10;
endmodule

module cf_rca_16_5 (clock_config_c, clock_main_c, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, o1, o2, o3, o4);
input  clock_config_c;
input  clock_main_c;
input  i1;
input  i2;
input  [17:0] i3;
input  [15:0] i4;
input  [3:0] i5;
input  [1:0] i6;
input  [15:0] i7;
input  [12:0] i8;
input  [12:0] i9;
input  [12:0] i10;
output [15:0] o1;
output [15:0] o2;
output [12:0] o3;
output [12:0] o4;
wire   n1;
wire   [4:0] n2;
wire   [15:0] n3;
wire   n4;
wire   n5;
wire   n6;
wire   n7;
wire   [14:0] n8;
wire   [14:0] n9;
wire   [15:0] n10;
wire   [15:0] n11;
wire   [11:0] n12;
wire   [11:0] n13;
wire   [11:0] n14;
wire   n15;
wire   [14:0] n16;
wire   [12:0] n17;
wire   [12:0] n18;
wire   [15:0] s19_1;
wire   [15:0] s19_2;
wire   [15:0] s19_3;
wire   [15:0] s19_4;
wire   [15:0] s19_5;
wire   [15:0] s19_6;
wire   [15:0] s19_7;
wire   [15:0] s19_8;
wire   [15:0] s19_9;
wire   [15:0] s19_10;
wire   [15:0] s19_11;
wire   [15:0] s19_12;
wire   [15:0] s19_13;
wire   [15:0] s19_14;
wire   [15:0] s19_15;
wire   [15:0] s19_16;
wire   [15:0] s20_1;
wire   s21_1;
wire   s21_2;
wire   [14:0] s21_3;
wire   [14:0] s21_4;
wire   s22_1;
wire   s22_2;
wire   s22_3;
wire   s22_4;
wire   [15:0] s23_1;
wire   [15:0] s23_2;
wire   [11:0] s23_3;
wire   [11:0] s23_4;
assign n1 = i8[0];
assign n2 = {n1, i5};
assign n3 = 16'b0000000000000000;
assign n4 = i9[0];
assign n5 = i10[0];
assign n6 = s20_1[0];
assign n7 = i7[0];
assign n8 = {s20_1[15],
  s20_1[14],
  s20_1[13],
  s20_1[12],
  s20_1[11],
  s20_1[10],
  s20_1[9],
  s20_1[8],
  s20_1[7],
  s20_1[6],
  s20_1[5],
  s20_1[4],
  s20_1[3],
  s20_1[2],
  s20_1[1]};
assign n9 = {i7[15],
  i7[14],
  i7[13],
  i7[12],
  i7[11],
  i7[10],
  i7[9],
  i7[8],
  i7[7],
  i7[6],
  i7[5],
  i7[4],
  i7[3],
  i7[2],
  i7[1]};
assign n10 = {s21_3, s22_1};
assign n11 = {s21_4, s22_2};
assign n12 = {i8[12],
  i8[11],
  i8[10],
  i8[9],
  i8[8],
  i8[7],
  i8[6],
  i8[5],
  i8[4],
  i8[3],
  i8[2],
  i8[1]};
assign n13 = {i9[12],
  i9[11],
  i9[10],
  i9[9],
  i9[8],
  i9[7],
  i9[6],
  i9[5],
  i9[4],
  i9[3],
  i9[2],
  i9[1]};
assign n14 = {i10[12],
  i10[11],
  i10[10],
  i10[9],
  i10[8],
  i10[7],
  i10[6],
  i10[5],
  i10[4],
  i10[3],
  i10[2],
  i10[1]};
assign n15 = s23_1[0];
assign n16 = {s23_1[15],
  s23_1[14],
  s23_1[13],
  s23_1[12],
  s23_1[11],
  s23_1[10],
  s23_1[9],
  s23_1[8],
  s23_1[7],
  s23_1[6],
  s23_1[5],
  s23_1[4],
  s23_1[3],
  s23_1[2],
  s23_1[1]};
assign n17 = {s23_3, s22_3};
assign n18 = {s23_4, s21_2};
cf_rca_16_38 s19 (s19_1, s19_2, s19_3, s19_4, s19_5, s19_6, s19_7, s19_8, s19_9, s19_10, s19_11, s19_12, s19_13, s19_14, s19_15, s19_16);
cf_rca_16_32 s20 (n2, s19_1, s19_2, s19_3, s19_4, s19_5, s19_6, s19_7, s19_8, s19_9, s19_10, s19_11, s19_12, s19_13, s19_14, s19_15, s19_16, n3, s20_1);
cf_rca_16_22 s21 (clock_config_c, clock_main_c, i1, i2, i3, i6, n5, s22_4, n8, n9, n16, s21_1, s21_2, s21_3, s21_4);
cf_rca_16_29 s22 (clock_config_c, clock_main_c, i1, i2, i3, i6, n4, n6, n7, s21_1, n15, s22_1, s22_2, s22_3, s22_4);
//cf_rca_16_6 s23 (clock_config_c, clock_main_c, i1, i2, i3, i4, i5, i6, n11, n12, n13, n14, s23_1, s23_2, s23_3, s23_4);
assign o4 = n18;
assign o3 = n17;
assign o2 = s23_2;
assign o1 = n10;
endmodule

module cf_rca_16_6 (clock_config_c, clock_main_c, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, o1, o2, o3, o4);
input  clock_config_c;
input  clock_main_c;
input  i1;
input  i2;
input  [17:0] i3;
input  [15:0] i4;
input  [3:0] i5;
input  [1:0] i6;
input  [15:0] i7;
input  [11:0] i8;
input  [11:0] i9;
input  [11:0] i10;
output [15:0] o1;
output [15:0] o2;
output [11:0] o3;
output [11:0] o4;
wire   n1;
wire   [4:0] n2;
wire   [15:0] n3;
wire   n4;
wire   n5;
wire   n6;
wire   n7;
wire   [14:0] n8;
wire   [14:0] n9;
wire   [15:0] n10;
wire   [15:0] n11;
wire   [10:0] n12;
wire   [10:0] n13;
wire   [10:0] n14;
wire   n15;
wire   [14:0] n16;
wire   [11:0] n17;
wire   [11:0] n18;
wire   [15:0] s19_1;
wire   [15:0] s19_2;
wire   [15:0] s19_3;
wire   [15:0] s19_4;
wire   [15:0] s19_5;
wire   [15:0] s19_6;
wire   [15:0] s19_7;
wire   [15:0] s19_8;
wire   [15:0] s19_9;
wire   [15:0] s19_10;
wire   [15:0] s19_11;
wire   [15:0] s19_12;
wire   [15:0] s19_13;
wire   [15:0] s19_14;
wire   [15:0] s19_15;
wire   [15:0] s19_16;
wire   [15:0] s20_1;
wire   s21_1;
wire   s21_2;
wire   [14:0] s21_3;
wire   [14:0] s21_4;
wire   s22_1;
wire   s22_2;
wire   s22_3;
wire   s22_4;
wire   [15:0] s23_1;
wire   [15:0] s23_2;
wire   [10:0] s23_3;
wire   [10:0] s23_4;
assign n1 = i8[0];
assign n2 = {n1, i5};
assign n3 = 16'b0000000000000000;
assign n4 = i9[0];
assign n5 = i10[0];
assign n6 = s20_1[0];
assign n7 = i7[0];
assign n8 = {s20_1[15],
  s20_1[14],
  s20_1[13],
  s20_1[12],
  s20_1[11],
  s20_1[10],
  s20_1[9],
  s20_1[8],
  s20_1[7],
  s20_1[6],
  s20_1[5],
  s20_1[4],
  s20_1[3],
  s20_1[2],
  s20_1[1]};
assign n9 = {i7[15],
  i7[14],
  i7[13],
  i7[12],
  i7[11],
  i7[10],
  i7[9],
  i7[8],
  i7[7],
  i7[6],
  i7[5],
  i7[4],
  i7[3],
  i7[2],
  i7[1]};
assign n10 = {s21_3, s22_1};
assign n11 = {s21_4, s22_2};
assign n12 = {i8[11],
  i8[10],
  i8[9],
  i8[8],
  i8[7],
  i8[6],
  i8[5],
  i8[4],
  i8[3],
  i8[2],
  i8[1]};
assign n13 = {i9[11],
  i9[10],
  i9[9],
  i9[8],
  i9[7],
  i9[6],
  i9[5],
  i9[4],
  i9[3],
  i9[2],
  i9[1]};
assign n14 = {i10[11],
  i10[10],
  i10[9],
  i10[8],
  i10[7],
  i10[6],
  i10[5],
  i10[4],
  i10[3],
  i10[2],
  i10[1]};
assign n15 = s23_1[0];
assign n16 = {s23_1[15],
  s23_1[14],
  s23_1[13],
  s23_1[12],
  s23_1[11],
  s23_1[10],
  s23_1[9],
  s23_1[8],
  s23_1[7],
  s23_1[6],
  s23_1[5],
  s23_1[4],
  s23_1[3],
  s23_1[2],
  s23_1[1]};
assign n17 = {s23_3, s22_3};
assign n18 = {s23_4, s21_2};
cf_rca_16_38 s19 (s19_1, s19_2, s19_3, s19_4, s19_5, s19_6, s19_7, s19_8, s19_9, s19_10, s19_11, s19_12, s19_13, s19_14, s19_15, s19_16);
cf_rca_16_32 s20 (n2, s19_1, s19_2, s19_3, s19_4, s19_5, s19_6, s19_7, s19_8, s19_9, s19_10, s19_11, s19_12, s19_13, s19_14, s19_15, s19_16, n3, s20_1);
cf_rca_16_22 s21 (clock_config_c, clock_main_c, i1, i2, i3, i6, n5, s22_4, n8, n9, n16, s21_1, s21_2, s21_3, s21_4);
cf_rca_16_29 s22 (clock_config_c, clock_main_c, i1, i2, i3, i6, n4, n6, n7, s21_1, n15, s22_1, s22_2, s22_3, s22_4);
//cf_rca_16_7 s23 (clock_config_c, clock_main_c, i1, i2, i3, i4, i5, i6, n11, n12, n13, n14, s23_1, s23_2, s23_3, s23_4);
assign o4 = n18;
assign o3 = n17;
assign o2 = s23_2;
assign o1 = n10;
endmodule

module cf_rca_16_7 (clock_config_c, clock_main_c, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, o1, o2, o3, o4);
input  clock_config_c;
input  clock_main_c;
input  i1;
input  i2;
input  [17:0] i3;
input  [15:0] i4;
input  [3:0] i5;
input  [1:0] i6;
input  [15:0] i7;
input  [10:0] i8;
input  [10:0] i9;
input  [10:0] i10;
output [15:0] o1;
output [15:0] o2;
output [10:0] o3;
output [10:0] o4;
wire   n1;
wire   [4:0] n2;
wire   [15:0] n3;
wire   n4;
wire   n5;
wire   n6;
wire   n7;
wire   [14:0] n8;
wire   [14:0] n9;
wire   [15:0] n10;
wire   [15:0] n11;
wire   [9:0] n12;
wire   [9:0] n13;
wire   [9:0] n14;
wire   n15;
wire   [14:0] n16;
wire   [10:0] n17;
wire   [10:0] n18;
wire   [15:0] s19_1;
wire   [15:0] s19_2;
wire   [15:0] s19_3;
wire   [15:0] s19_4;
wire   [15:0] s19_5;
wire   [15:0] s19_6;
wire   [15:0] s19_7;
wire   [15:0] s19_8;
wire   [15:0] s19_9;
wire   [15:0] s19_10;
wire   [15:0] s19_11;
wire   [15:0] s19_12;
wire   [15:0] s19_13;
wire   [15:0] s19_14;
wire   [15:0] s19_15;
wire   [15:0] s19_16;
wire   [15:0] s20_1;
wire   s21_1;
wire   s21_2;
wire   [14:0] s21_3;
wire   [14:0] s21_4;
wire   s22_1;
wire   s22_2;
wire   s22_3;
wire   s22_4;
wire   [15:0] s23_1;
wire   [15:0] s23_2;
wire   [9:0] s23_3;
wire   [9:0] s23_4;
assign n1 = i8[0];
assign n2 = {n1, i5};
assign n3 = 16'b0000000000000000;
assign n4 = i9[0];
assign n5 = i10[0];
assign n6 = s20_1[0];
assign n7 = i7[0];
assign n8 = {s20_1[15],
  s20_1[14],
  s20_1[13],
  s20_1[12],
  s20_1[11],
  s20_1[10],
  s20_1[9],
  s20_1[8],
  s20_1[7],
  s20_1[6],
  s20_1[5],
  s20_1[4],
  s20_1[3],
  s20_1[2],
  s20_1[1]};
assign n9 = {i7[15],
  i7[14],
  i7[13],
  i7[12],
  i7[11],
  i7[10],
  i7[9],
  i7[8],
  i7[7],
  i7[6],
  i7[5],
  i7[4],
  i7[3],
  i7[2],
  i7[1]};
assign n10 = {s21_3, s22_1};
assign n11 = {s21_4, s22_2};
assign n12 = {i8[10],
  i8[9],
  i8[8],
  i8[7],
  i8[6],
  i8[5],
  i8[4],
  i8[3],
  i8[2],
  i8[1]};
assign n13 = {i9[10],
  i9[9],
  i9[8],
  i9[7],
  i9[6],
  i9[5],
  i9[4],
  i9[3],
  i9[2],
  i9[1]};
assign n14 = {i10[10],
  i10[9],
  i10[8],
  i10[7],
  i10[6],
  i10[5],
  i10[4],
  i10[3],
  i10[2],
  i10[1]};
assign n15 = s23_1[0];
assign n16 = {s23_1[15],
  s23_1[14],
  s23_1[13],
  s23_1[12],
  s23_1[11],
  s23_1[10],
  s23_1[9],
  s23_1[8],
  s23_1[7],
  s23_1[6],
  s23_1[5],
  s23_1[4],
  s23_1[3],
  s23_1[2],
  s23_1[1]};
assign n17 = {s23_3, s22_3};
assign n18 = {s23_4, s21_2};
cf_rca_16_38 s19 (s19_1, s19_2, s19_3, s19_4, s19_5, s19_6, s19_7, s19_8, s19_9, s19_10, s19_11, s19_12, s19_13, s19_14, s19_15, s19_16);
cf_rca_16_32 s20 (n2, s19_1, s19_2, s19_3, s19_4, s19_5, s19_6, s19_7, s19_8, s19_9, s19_10, s19_11, s19_12, s19_13, s19_14, s19_15, s19_16, n3, s20_1);
cf_rca_16_22 s21 (clock_config_c, clock_main_c, i1, i2, i3, i6, n5, s22_4, n8, n9, n16, s21_1, s21_2, s21_3, s21_4);
cf_rca_16_29 s22 (clock_config_c, clock_main_c, i1, i2, i3, i6, n4, n6, n7, s21_1, n15, s22_1, s22_2, s22_3, s22_4);
//cf_rca_16_8 s23 (clock_config_c, clock_main_c, i1, i2, i3, i4, i5, i6, n11, n12, n13, n14, s23_1, s23_2, s23_3, s23_4);
assign o4 = n18;
assign o3 = n17;
assign o2 = s23_2;
assign o1 = n10;
endmodule

module cf_rca_16_8 (clock_config_c, clock_main_c, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, o1, o2, o3, o4);
input  clock_config_c;
input  clock_main_c;
input  i1;
input  i2;
input  [17:0] i3;
input  [15:0] i4;
input  [3:0] i5;
input  [1:0] i6;
input  [15:0] i7;
input  [9:0] i8;
input  [9:0] i9;
input  [9:0] i10;
output [15:0] o1;
output [15:0] o2;
output [9:0] o3;
output [9:0] o4;
wire   n1;
wire   [4:0] n2;
wire   [15:0] n3;
wire   n4;
wire   n5;
wire   n6;
wire   n7;
wire   [14:0] n8;
wire   [14:0] n9;
wire   [15:0] n10;
wire   [15:0] n11;
wire   [8:0] n12;
wire   [8:0] n13;
wire   [8:0] n14;
wire   n15;
wire   [14:0] n16;
wire   [9:0] n17;
wire   [9:0] n18;
wire   [15:0] s19_1;
wire   [15:0] s19_2;
wire   [15:0] s19_3;
wire   [15:0] s19_4;
wire   [15:0] s19_5;
wire   [15:0] s19_6;
wire   [15:0] s19_7;
wire   [15:0] s19_8;
wire   [15:0] s19_9;
wire   [15:0] s19_10;
wire   [15:0] s19_11;
wire   [15:0] s19_12;
wire   [15:0] s19_13;
wire   [15:0] s19_14;
wire   [15:0] s19_15;
wire   [15:0] s19_16;
wire   [15:0] s20_1;
wire   s21_1;
wire   s21_2;
wire   [14:0] s21_3;
wire   [14:0] s21_4;
wire   s22_1;
wire   s22_2;
wire   s22_3;
wire   s22_4;
wire   [15:0] s23_1;
wire   [15:0] s23_2;
wire   [8:0] s23_3;
wire   [8:0] s23_4;
assign n1 = i8[0];
assign n2 = {n1, i5};
assign n3 = 16'b0000000000000000;
assign n4 = i9[0];
assign n5 = i10[0];
assign n6 = s20_1[0];
assign n7 = i7[0];
assign n8 = {s20_1[15],
  s20_1[14],
  s20_1[13],
  s20_1[12],
  s20_1[11],
  s20_1[10],
  s20_1[9],
  s20_1[8],
  s20_1[7],
  s20_1[6],
  s20_1[5],
  s20_1[4],
  s20_1[3],
  s20_1[2],
  s20_1[1]};
assign n9 = {i7[15],
  i7[14],
  i7[13],
  i7[12],
  i7[11],
  i7[10],
  i7[9],
  i7[8],
  i7[7],
  i7[6],
  i7[5],
  i7[4],
  i7[3],
  i7[2],
  i7[1]};
assign n10 = {s21_3, s22_1};
assign n11 = {s21_4, s22_2};
assign n12 = {i8[9],
  i8[8],
  i8[7],
  i8[6],
  i8[5],
  i8[4],
  i8[3],
  i8[2],
  i8[1]};
assign n13 = {i9[9],
  i9[8],
  i9[7],
  i9[6],
  i9[5],
  i9[4],
  i9[3],
  i9[2],
  i9[1]};
assign n14 = {i10[9],
  i10[8],
  i10[7],
  i10[6],
  i10[5],
  i10[4],
  i10[3],
  i10[2],
  i10[1]};
assign n15 = s23_1[0];
assign n16 = {s23_1[15],
  s23_1[14],
  s23_1[13],
  s23_1[12],
  s23_1[11],
  s23_1[10],
  s23_1[9],
  s23_1[8],
  s23_1[7],
  s23_1[6],
  s23_1[5],
  s23_1[4],
  s23_1[3],
  s23_1[2],
  s23_1[1]};
assign n17 = {s23_3, s22_3};
assign n18 = {s23_4, s21_2};
cf_rca_16_38 s19 (s19_1, s19_2, s19_3, s19_4, s19_5, s19_6, s19_7, s19_8, s19_9, s19_10, s19_11, s19_12, s19_13, s19_14, s19_15, s19_16);
cf_rca_16_32 s20 (n2, s19_1, s19_2, s19_3, s19_4, s19_5, s19_6, s19_7, s19_8, s19_9, s19_10, s19_11, s19_12, s19_13, s19_14, s19_15, s19_16, n3, s20_1);
cf_rca_16_22 s21 (clock_config_c, clock_main_c, i1, i2, i3, i6, n5, s22_4, n8, n9, n16, s21_1, s21_2, s21_3, s21_4);
cf_rca_16_29 s22 (clock_config_c, clock_main_c, i1, i2, i3, i6, n4, n6, n7, s21_1, n15, s22_1, s22_2, s22_3, s22_4);
//cf_rca_16_9 s23 (clock_config_c, clock_main_c, i1, i2, i3, i4, i5, i6, n11, n12, n13, n14, s23_1, s23_2, s23_3, s23_4);
assign o4 = n18;
assign o3 = n17;
assign o2 = s23_2;
assign o1 = n10;
endmodule

module cf_rca_16_9 (clock_config_c, clock_main_c, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, o1, o2, o3, o4);
input  clock_config_c;
input  clock_main_c;
input  i1;
input  i2;
input  [17:0] i3;
input  [15:0] i4;
input  [3:0] i5;
input  [1:0] i6;
input  [15:0] i7;
input  [8:0] i8;
input  [8:0] i9;
input  [8:0] i10;
output [15:0] o1;
output [15:0] o2;
output [8:0] o3;
output [8:0] o4;
wire   n1;
wire   [4:0] n2;
wire   [15:0] n3;
wire   n4;
wire   n5;
wire   n6;
wire   n7;
wire   [14:0] n8;
wire   [14:0] n9;
wire   [15:0] n10;
wire   [15:0] n11;
wire   [7:0] n12;
wire   [7:0] n13;
wire   [7:0] n14;
wire   n15;
wire   [14:0] n16;
wire   [8:0] n17;
wire   [8:0] n18;
wire   s19_1;
wire   s19_2;
wire   [14:0] s19_3;
wire   [14:0] s19_4;
wire   s20_1;
wire   s20_2;
wire   s20_3;
wire   s20_4;
wire   [15:0] s21_1;
wire   [15:0] s21_2;
wire   [15:0] s21_3;
wire   [15:0] s21_4;
wire   [15:0] s21_5;
wire   [15:0] s21_6;
wire   [15:0] s21_7;
wire   [15:0] s21_8;
wire   [15:0] s21_9;
wire   [15:0] s21_10;
wire   [15:0] s21_11;
wire   [15:0] s21_12;
wire   [15:0] s21_13;
wire   [15:0] s21_14;
wire   [15:0] s21_15;
wire   [15:0] s21_16;
wire   [15:0] s22_1;
wire   [15:0] s23_1;
wire   [15:0] s23_2;
wire   [7:0] s23_3;
wire   [7:0] s23_4;
assign n1 = i8[0];
assign n2 = {n1, i5};
assign n3 = 16'b0000000000000000;
assign n4 = i9[0];
assign n5 = i10[0];
assign n6 = s22_1[0];
assign n7 = i7[0];
assign n8 = {s22_1[15],
  s22_1[14],
  s22_1[13],
  s22_1[12],
  s22_1[11],
  s22_1[10],
  s22_1[9],
  s22_1[8],
  s22_1[7],
  s22_1[6],
  s22_1[5],
  s22_1[4],
  s22_1[3],
  s22_1[2],
  s22_1[1]};
assign n9 = {i7[15],
  i7[14],
  i7[13],
  i7[12],
  i7[11],
  i7[10],
  i7[9],
  i7[8],
  i7[7],
  i7[6],
  i7[5],
  i7[4],
  i7[3],
  i7[2],
  i7[1]};
assign n10 = {s19_3, s20_1};
assign n11 = {s19_4, s20_2};
assign n12 = {i8[8],
  i8[7],
  i8[6],
  i8[5],
  i8[4],
  i8[3],
  i8[2],
  i8[1]};
assign n13 = {i9[8],
  i9[7],
  i9[6],
  i9[5],
  i9[4],
  i9[3],
  i9[2],
  i9[1]};
assign n14 = {i10[8],
  i10[7],
  i10[6],
  i10[5],
  i10[4],
  i10[3],
  i10[2],
  i10[1]};
assign n15 = s23_1[0];
assign n16 = {s23_1[15],
  s23_1[14],
  s23_1[13],
  s23_1[12],
  s23_1[11],
  s23_1[10],
  s23_1[9],
  s23_1[8],
  s23_1[7],
  s23_1[6],
  s23_1[5],
  s23_1[4],
  s23_1[3],
  s23_1[2],
  s23_1[1]};
assign n17 = {s23_3, s20_3};
assign n18 = {s23_4, s19_2};
cf_rca_16_22 s19 (clock_config_c, clock_main_c, i1, i2, i3, i6, n5, s20_4, n8, n9, n16, s19_1, s19_2, s19_3, s19_4);
cf_rca_16_29 s20 (clock_config_c, clock_main_c, i1, i2, i3, i6, n4, n6, n7, s19_1, n15, s20_1, s20_2, s20_3, s20_4);
cf_rca_16_38 s21 (s21_1, s21_2, s21_3, s21_4, s21_5, s21_6, s21_7, s21_8, s21_9, s21_10, s21_11, s21_12, s21_13, s21_14, s21_15, s21_16);
cf_rca_16_32 s22 (n2, s21_1, s21_2, s21_3, s21_4, s21_5, s21_6, s21_7, s21_8, s21_9, s21_10, s21_11, s21_12, s21_13, s21_14, s21_15, s21_16, n3, s22_1);
//cf_rca_16_10 s23 (clock_config_c, clock_main_c, i1, i2, i3, i4, i5, i6, n11, n12, n13, n14, s23_1, s23_2, s23_3, s23_4);
assign o4 = n18;
assign o3 = n17;
assign o2 = s23_2;
assign o1 = n10;
endmodule

module cf_rca_16_10 (clock_config_c, clock_main_c, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, o1, o2, o3, o4);
input  clock_config_c;
input  clock_main_c;
input  i1;
input  i2;
input  [17:0] i3;
input  [15:0] i4;
input  [3:0] i5;
input  [1:0] i6;
input  [15:0] i7;
input  [7:0] i8;
input  [7:0] i9;
input  [7:0] i10;
output [15:0] o1;
output [15:0] o2;
output [7:0] o3;
output [7:0] o4;
wire   n1;
wire   [4:0] n2;
wire   [15:0] n3;
wire   n4;
wire   n5;
wire   n6;
wire   n7;
wire   [14:0] n8;
wire   [14:0] n9;
wire   [15:0] n10;
wire   [15:0] n11;
wire   [6:0] n12;
wire   [6:0] n13;
wire   [6:0] n14;
wire   n15;
wire   [14:0] n16;
wire   [7:0] n17;
wire   [7:0] n18;
wire   s19_1;
wire   s19_2;
wire   [14:0] s19_3;
wire   [14:0] s19_4;
wire   s20_1;
wire   s20_2;
wire   s20_3;
wire   s20_4;
wire   [15:0] s21_1;
wire   [15:0] s21_2;
wire   [15:0] s21_3;
wire   [15:0] s21_4;
wire   [15:0] s21_5;
wire   [15:0] s21_6;
wire   [15:0] s21_7;
wire   [15:0] s21_8;
wire   [15:0] s21_9;
wire   [15:0] s21_10;
wire   [15:0] s21_11;
wire   [15:0] s21_12;
wire   [15:0] s21_13;
wire   [15:0] s21_14;
wire   [15:0] s21_15;
wire   [15:0] s21_16;
wire   [15:0] s22_1;
wire   [15:0] s23_1;
wire   [15:0] s23_2;
wire   [6:0] s23_3;
wire   [6:0] s23_4;
assign n1 = i8[0];
assign n2 = {n1, i5};
assign n3 = 16'b0000000000000000;
assign n4 = i9[0];
assign n5 = i10[0];
assign n6 = s22_1[0];
assign n7 = i7[0];
assign n8 = {s22_1[15],
  s22_1[14],
  s22_1[13],
  s22_1[12],
  s22_1[11],
  s22_1[10],
  s22_1[9],
  s22_1[8],
  s22_1[7],
  s22_1[6],
  s22_1[5],
  s22_1[4],
  s22_1[3],
  s22_1[2],
  s22_1[1]};
assign n9 = {i7[15],
  i7[14],
  i7[13],
  i7[12],
  i7[11],
  i7[10],
  i7[9],
  i7[8],
  i7[7],
  i7[6],
  i7[5],
  i7[4],
  i7[3],
  i7[2],
  i7[1]};
assign n10 = {s19_3, s20_1};
assign n11 = {s19_4, s20_2};
assign n12 = {i8[7],
  i8[6],
  i8[5],
  i8[4],
  i8[3],
  i8[2],
  i8[1]};
assign n13 = {i9[7],
  i9[6],
  i9[5],
  i9[4],
  i9[3],
  i9[2],
  i9[1]};
assign n14 = {i10[7],
  i10[6],
  i10[5],
  i10[4],
  i10[3],
  i10[2],
  i10[1]};
assign n15 = s23_1[0];
assign n16 = {s23_1[15],
  s23_1[14],
  s23_1[13],
  s23_1[12],
  s23_1[11],
  s23_1[10],
  s23_1[9],
  s23_1[8],
  s23_1[7],
  s23_1[6],
  s23_1[5],
  s23_1[4],
  s23_1[3],
  s23_1[2],
  s23_1[1]};
assign n17 = {s23_3, s20_3};
assign n18 = {s23_4, s19_2};
cf_rca_16_22 s19 (clock_config_c, clock_main_c, i1, i2, i3, i6, n5, s20_4, n8, n9, n16, s19_1, s19_2, s19_3, s19_4);
cf_rca_16_29 s20 (clock_config_c, clock_main_c, i1, i2, i3, i6, n4, n6, n7, s19_1, n15, s20_1, s20_2, s20_3, s20_4);
cf_rca_16_38 s21 (s21_1, s21_2, s21_3, s21_4, s21_5, s21_6, s21_7, s21_8, s21_9, s21_10, s21_11, s21_12, s21_13, s21_14, s21_15, s21_16);
cf_rca_16_32 s22 (n2, s21_1, s21_2, s21_3, s21_4, s21_5, s21_6, s21_7, s21_8, s21_9, s21_10, s21_11, s21_12, s21_13, s21_14, s21_15, s21_16, n3, s22_1);
//cf_rca_16_11 s23 (clock_config_c, clock_main_c, i1, i2, i3, i4, i5, i6, n11, n12, n13, n14, s23_1, s23_2, s23_3, s23_4);
assign o4 = n18;
assign o3 = n17;
assign o2 = s23_2;
assign o1 = n10;
endmodule

module cf_rca_16_11 (clock_config_c, clock_main_c, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, o1, o2, o3, o4);
input  clock_config_c;
input  clock_main_c;
input  i1;
input  i2;
input  [17:0] i3;
input  [15:0] i4;
input  [3:0] i5;
input  [1:0] i6;
input  [15:0] i7;
input  [6:0] i8;
input  [6:0] i9;
input  [6:0] i10;
output [15:0] o1;
output [15:0] o2;
output [6:0] o3;
output [6:0] o4;
wire   n1;
wire   [4:0] n2;
wire   [15:0] n3;
wire   n4;
wire   n5;
wire   n6;
wire   n7;
wire   [14:0] n8;
wire   [14:0] n9;
wire   [15:0] n10;
wire   [15:0] n11;
wire   [5:0] n12;
wire   [5:0] n13;
wire   [5:0] n14;
wire   n15;
wire   [14:0] n16;
wire   [6:0] n17;
wire   [6:0] n18;
wire   s19_1;
wire   s19_2;
wire   s19_3;
wire   s19_4;
wire   s20_1;
wire   s20_2;
wire   [14:0] s20_3;
wire   [14:0] s20_4;
wire   [15:0] s21_1;
wire   [15:0] s21_2;
wire   [15:0] s21_3;
wire   [15:0] s21_4;
wire   [15:0] s21_5;
wire   [15:0] s21_6;
wire   [15:0] s21_7;
wire   [15:0] s21_8;
wire   [15:0] s21_9;
wire   [15:0] s21_10;
wire   [15:0] s21_11;
wire   [15:0] s21_12;
wire   [15:0] s21_13;
wire   [15:0] s21_14;
wire   [15:0] s21_15;
wire   [15:0] s21_16;
wire   [15:0] s22_1;
wire   [15:0] s23_1;
wire   [15:0] s23_2;
wire   [5:0] s23_3;
wire   [5:0] s23_4;
assign n1 = i8[0];
assign n2 = {n1, i5};
assign n3 = 16'b0000000000000000;
assign n4 = i9[0];
assign n5 = i10[0];
assign n6 = s22_1[0];
assign n7 = i7[0];
assign n8 = {s22_1[15],
  s22_1[14],
  s22_1[13],
  s22_1[12],
  s22_1[11],
  s22_1[10],
  s22_1[9],
  s22_1[8],
  s22_1[7],
  s22_1[6],
  s22_1[5],
  s22_1[4],
  s22_1[3],
  s22_1[2],
  s22_1[1]};
assign n9 = {i7[15],
  i7[14],
  i7[13],
  i7[12],
  i7[11],
  i7[10],
  i7[9],
  i7[8],
  i7[7],
  i7[6],
  i7[5],
  i7[4],
  i7[3],
  i7[2],
  i7[1]};
assign n10 = {s20_3, s19_1};
assign n11 = {s20_4, s19_2};
assign n12 = {i8[6],
  i8[5],
  i8[4],
  i8[3],
  i8[2],
  i8[1]};
assign n13 = {i9[6],
  i9[5],
  i9[4],
  i9[3],
  i9[2],
  i9[1]};
assign n14 = {i10[6],
  i10[5],
  i10[4],
  i10[3],
  i10[2],
  i10[1]};
assign n15 = s23_1[0];
assign n16 = {s23_1[15],
  s23_1[14],
  s23_1[13],
  s23_1[12],
  s23_1[11],
  s23_1[10],
  s23_1[9],
  s23_1[8],
  s23_1[7],
  s23_1[6],
  s23_1[5],
  s23_1[4],
  s23_1[3],
  s23_1[2],
  s23_1[1]};
assign n17 = {s23_3, s19_3};
assign n18 = {s23_4, s20_2};
cf_rca_16_29 s19 (clock_config_c, clock_main_c, i1, i2, i3, i6, n4, n6, n7, s20_1, n15, s19_1, s19_2, s19_3, s19_4);
cf_rca_16_18 s20 (clock_config_c, clock_main_c, i1, i2, i3, i6, n5, s19_4, n8, n9, n16, s20_1, s20_2, s20_3, s20_4);
cf_rca_16_38 s21 (s21_1, s21_2, s21_3, s21_4, s21_5, s21_6, s21_7, s21_8, s21_9, s21_10, s21_11, s21_12, s21_13, s21_14, s21_15, s21_16);
cf_rca_16_32 s22 (n2, s21_1, s21_2, s21_3, s21_4, s21_5, s21_6, s21_7, s21_8, s21_9, s21_10, s21_11, s21_12, s21_13, s21_14, s21_15, s21_16, n3, s22_1);
//cf_rca_16_12 s23 (clock_config_c, clock_main_c, i1, i2, i3, i4, i5, i6, n11, n12, n13, n14, s23_1, s23_2, s23_3, s23_4);
assign o4 = n18;
assign o3 = n17;
assign o2 = s23_2;
assign o1 = n10;
endmodule

module cf_rca_16_12 (clock_config_c, clock_main_c, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, o1, o2, o3, o4);
input  clock_config_c;
input  clock_main_c;
input  i1;
input  i2;
input  [17:0] i3;
input  [15:0] i4;
input  [3:0] i5;
input  [1:0] i6;
input  [15:0] i7;
input  [5:0] i8;
input  [5:0] i9;
input  [5:0] i10;
output [15:0] o1;
output [15:0] o2;
output [5:0] o3;
output [5:0] o4;
wire   n1;
wire   [4:0] n2;
wire   [15:0] n3;
wire   n4;
wire   n5;
wire   n6;
wire   n7;
wire   [14:0] n8;
wire   [14:0] n9;
wire   [15:0] n10;
wire   [15:0] n11;
wire   [4:0] n12;
wire   [4:0] n13;
wire   [4:0] n14;
wire   n15;
wire   [14:0] n16;
wire   [5:0] n17;
wire   [5:0] n18;
wire   [15:0] s19_1;
wire   [15:0] s19_2;
wire   [15:0] s19_3;
wire   [15:0] s19_4;
wire   [15:0] s19_5;
wire   [15:0] s19_6;
wire   [15:0] s19_7;
wire   [15:0] s19_8;
wire   [15:0] s19_9;
wire   [15:0] s19_10;
wire   [15:0] s19_11;
wire   [15:0] s19_12;
wire   [15:0] s19_13;
wire   [15:0] s19_14;
wire   [15:0] s19_15;
wire   [15:0] s19_16;
wire   [15:0] s20_1;
wire   s21_1;
wire   s21_2;
wire   [14:0] s21_3;
wire   [14:0] s21_4;
wire   s22_1;
wire   s22_2;
wire   s22_3;
wire   s22_4;
wire   [15:0] s23_1;
wire   [15:0] s23_2;
wire   [4:0] s23_3;
wire   [4:0] s23_4;
assign n1 = i8[0];
assign n2 = {n1, i5};
assign n3 = 16'b0000000000000000;
assign n4 = i9[0];
assign n5 = i10[0];
assign n6 = s20_1[0];
assign n7 = i7[0];
assign n8 = {s20_1[15],
  s20_1[14],
  s20_1[13],
  s20_1[12],
  s20_1[11],
  s20_1[10],
  s20_1[9],
  s20_1[8],
  s20_1[7],
  s20_1[6],
  s20_1[5],
  s20_1[4],
  s20_1[3],
  s20_1[2],
  s20_1[1]};
assign n9 = {i7[15],
  i7[14],
  i7[13],
  i7[12],
  i7[11],
  i7[10],
  i7[9],
  i7[8],
  i7[7],
  i7[6],
  i7[5],
  i7[4],
  i7[3],
  i7[2],
  i7[1]};
assign n10 = {s21_3, s22_1};
assign n11 = {s21_4, s22_2};
assign n12 = {i8[5],
  i8[4],
  i8[3],
  i8[2],
  i8[1]};
assign n13 = {i9[5],
  i9[4],
  i9[3],
  i9[2],
  i9[1]};
assign n14 = {i10[5],
  i10[4],
  i10[3],
  i10[2],
  i10[1]};
assign n15 = s23_1[0];
assign n16 = {s23_1[15],
  s23_1[14],
  s23_1[13],
  s23_1[12],
  s23_1[11],
  s23_1[10],
  s23_1[9],
  s23_1[8],
  s23_1[7],
  s23_1[6],
  s23_1[5],
  s23_1[4],
  s23_1[3],
  s23_1[2],
  s23_1[1]};
assign n17 = {s23_3, s22_3};
assign n18 = {s23_4, s21_2};
cf_rca_16_38 s19 (s19_1, s19_2, s19_3, s19_4, s19_5, s19_6, s19_7, s19_8, s19_9, s19_10, s19_11, s19_12, s19_13, s19_14, s19_15, s19_16);
cf_rca_16_32 s20 (n2, s19_1, s19_2, s19_3, s19_4, s19_5, s19_6, s19_7, s19_8, s19_9, s19_10, s19_11, s19_12, s19_13, s19_14, s19_15, s19_16, n3, s20_1);
cf_rca_16_22 s21 (clock_config_c, clock_main_c, i1, i2, i3, i6, n5, s22_4, n8, n9, n16, s21_1, s21_2, s21_3, s21_4);
cf_rca_16_29 s22 (clock_config_c, clock_main_c, i1, i2, i3, i6, n4, n6, n7, s21_1, n15, s22_1, s22_2, s22_3, s22_4);
cf_rca_16_13 s23 (clock_config_c, clock_main_c, i1, i2, i3, i4, i5, i6, n11, n12, n13, n14, s23_1, s23_2, s23_3, s23_4);
assign o4 = n18;
assign o3 = n17;
assign o2 = s23_2;
assign o1 = n10;
endmodule

module cf_rca_16_13 (clock_config_c, clock_main_c, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, o1, o2, o3, o4);
input  clock_config_c;
input  clock_main_c;
input  i1;
input  i2;
input  [17:0] i3;
input  [15:0] i4;
input  [3:0] i5;
input  [1:0] i6;
input  [15:0] i7;
input  [4:0] i8;
input  [4:0] i9;
input  [4:0] i10;
output [15:0] o1;
output [15:0] o2;
output [4:0] o3;
output [4:0] o4;
wire   n1;
wire   [4:0] n2;
wire   [15:0] n3;
wire   n4;
wire   n5;
wire   n6;
wire   n7;
wire   [14:0] n8;
wire   [14:0] n9;
wire   [15:0] n10;
wire   [15:0] n11;
wire   [3:0] n12;
wire   [3:0] n13;
wire   [3:0] n14;
wire   n15;
wire   [14:0] n16;
wire   [4:0] n17;
wire   [4:0] n18;
wire   [15:0] s19_1;
wire   [15:0] s19_2;
wire   [15:0] s19_3;
wire   [15:0] s19_4;
wire   [15:0] s19_5;
wire   [15:0] s19_6;
wire   [15:0] s19_7;
wire   [15:0] s19_8;
wire   [15:0] s19_9;
wire   [15:0] s19_10;
wire   [15:0] s19_11;
wire   [15:0] s19_12;
wire   [15:0] s19_13;
wire   [15:0] s19_14;
wire   [15:0] s19_15;
wire   [15:0] s19_16;
wire   [15:0] s20_1;
wire   s21_1;
wire   s21_2;
wire   [14:0] s21_3;
wire   [14:0] s21_4;
wire   s22_1;
wire   s22_2;
wire   s22_3;
wire   s22_4;
wire   [15:0] s23_1;
wire   [15:0] s23_2;
wire   [3:0] s23_3;
wire   [3:0] s23_4;
assign n1 = i8[0];
assign n2 = {n1, i5};
assign n3 = 16'b0000000000000000;
assign n4 = i9[0];
assign n5 = i10[0];
assign n6 = s20_1[0];
assign n7 = i7[0];
assign n8 = {s20_1[15],
  s20_1[14],
  s20_1[13],
  s20_1[12],
  s20_1[11],
  s20_1[10],
  s20_1[9],
  s20_1[8],
  s20_1[7],
  s20_1[6],
  s20_1[5],
  s20_1[4],
  s20_1[3],
  s20_1[2],
  s20_1[1]};
assign n9 = {i7[15],
  i7[14],
  i7[13],
  i7[12],
  i7[11],
  i7[10],
  i7[9],
  i7[8],
  i7[7],
  i7[6],
  i7[5],
  i7[4],
  i7[3],
  i7[2],
  i7[1]};
assign n10 = {s21_3, s22_1};
assign n11 = {s21_4, s22_2};
assign n12 = {i8[4],
  i8[3],
  i8[2],
  i8[1]};
assign n13 = {i9[4],
  i9[3],
  i9[2],
  i9[1]};
assign n14 = {i10[4],
  i10[3],
  i10[2],
  i10[1]};
assign n15 = s23_1[0];
assign n16 = {s23_1[15],
  s23_1[14],
  s23_1[13],
  s23_1[12],
  s23_1[11],
  s23_1[10],
  s23_1[9],
  s23_1[8],
  s23_1[7],
  s23_1[6],
  s23_1[5],
  s23_1[4],
  s23_1[3],
  s23_1[2],
  s23_1[1]};
assign n17 = {s23_3, s22_3};
assign n18 = {s23_4, s21_2};
cf_rca_16_38 s19 (s19_1, s19_2, s19_3, s19_4, s19_5, s19_6, s19_7, s19_8, s19_9, s19_10, s19_11, s19_12, s19_13, s19_14, s19_15, s19_16);
cf_rca_16_32 s20 (n2, s19_1, s19_2, s19_3, s19_4, s19_5, s19_6, s19_7, s19_8, s19_9, s19_10, s19_11, s19_12, s19_13, s19_14, s19_15, s19_16, n3, s20_1);
cf_rca_16_22 s21 (clock_config_c, clock_main_c, i1, i2, i3, i6, n5, s22_4, n8, n9, n16, s21_1, s21_2, s21_3, s21_4);
cf_rca_16_29 s22 (clock_config_c, clock_main_c, i1, i2, i3, i6, n4, n6, n7, s21_1, n15, s22_1, s22_2, s22_3, s22_4);
cf_rca_16_14 s23 (clock_config_c, clock_main_c, i1, i2, i3, i4, i5, i6, n11, n12, n13, n14, s23_1, s23_2, s23_3, s23_4);
assign o4 = n18;
assign o3 = n17;
assign o2 = s23_2;
assign o1 = n10;
endmodule

module cf_rca_16_14 (clock_config_c, clock_main_c, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, o1, o2, o3, o4);
input  clock_config_c;
input  clock_main_c;
input  i1;
input  i2;
input  [17:0] i3;
input  [15:0] i4;
input  [3:0] i5;
input  [1:0] i6;
input  [15:0] i7;
input  [3:0] i8;
input  [3:0] i9;
input  [3:0] i10;
output [15:0] o1;
output [15:0] o2;
output [3:0] o3;
output [3:0] o4;
wire   n1;
wire   [4:0] n2;
wire   [15:0] n3;
wire   n4;
wire   n5;
wire   n6;
wire   n7;
wire   [14:0] n8;
wire   [14:0] n9;
wire   [15:0] n10;
wire   [15:0] n11;
wire   [2:0] n12;
wire   [2:0] n13;
wire   [2:0] n14;
wire   n15;
wire   [14:0] n16;
wire   [3:0] n17;
wire   [3:0] n18;
wire   [15:0] s19_1;
wire   [15:0] s19_2;
wire   [15:0] s19_3;
wire   [15:0] s19_4;
wire   [15:0] s19_5;
wire   [15:0] s19_6;
wire   [15:0] s19_7;
wire   [15:0] s19_8;
wire   [15:0] s19_9;
wire   [15:0] s19_10;
wire   [15:0] s19_11;
wire   [15:0] s19_12;
wire   [15:0] s19_13;
wire   [15:0] s19_14;
wire   [15:0] s19_15;
wire   [15:0] s19_16;
wire   [15:0] s20_1;
wire   s21_1;
wire   s21_2;
wire   [14:0] s21_3;
wire   [14:0] s21_4;
wire   s22_1;
wire   s22_2;
wire   s22_3;
wire   s22_4;
wire   [15:0] s23_1;
wire   [15:0] s23_2;
wire   [2:0] s23_3;
wire   [2:0] s23_4;
assign n1 = i8[0];
assign n2 = {n1, i5};
assign n3 = 16'b0000000000000000;
assign n4 = i9[0];
assign n5 = i10[0];
assign n6 = s20_1[0];
assign n7 = i7[0];
assign n8 = {s20_1[15],
  s20_1[14],
  s20_1[13],
  s20_1[12],
  s20_1[11],
  s20_1[10],
  s20_1[9],
  s20_1[8],
  s20_1[7],
  s20_1[6],
  s20_1[5],
  s20_1[4],
  s20_1[3],
  s20_1[2],
  s20_1[1]};
assign n9 = {i7[15],
  i7[14],
  i7[13],
  i7[12],
  i7[11],
  i7[10],
  i7[9],
  i7[8],
  i7[7],
  i7[6],
  i7[5],
  i7[4],
  i7[3],
  i7[2],
  i7[1]};
assign n10 = {s21_3, s22_1};
assign n11 = {s21_4, s22_2};
assign n12 = {i8[3],
  i8[2],
  i8[1]};
assign n13 = {i9[3],
  i9[2],
  i9[1]};
assign n14 = {i10[3],
  i10[2],
  i10[1]};
assign n15 = s23_1[0];
assign n16 = {s23_1[15],
  s23_1[14],
  s23_1[13],
  s23_1[12],
  s23_1[11],
  s23_1[10],
  s23_1[9],
  s23_1[8],
  s23_1[7],
  s23_1[6],
  s23_1[5],
  s23_1[4],
  s23_1[3],
  s23_1[2],
  s23_1[1]};
assign n17 = {s23_3, s22_3};
assign n18 = {s23_4, s21_2};
cf_rca_16_38 s19 (s19_1, s19_2, s19_3, s19_4, s19_5, s19_6, s19_7, s19_8, s19_9, s19_10, s19_11, s19_12, s19_13, s19_14, s19_15, s19_16);
cf_rca_16_32 s20 (n2, s19_1, s19_2, s19_3, s19_4, s19_5, s19_6, s19_7, s19_8, s19_9, s19_10, s19_11, s19_12, s19_13, s19_14, s19_15, s19_16, n3, s20_1);
cf_rca_16_22 s21 (clock_config_c, clock_main_c, i1, i2, i3, i6, n5, s22_4, n8, n9, n16, s21_1, s21_2, s21_3, s21_4);
cf_rca_16_29 s22 (clock_config_c, clock_main_c, i1, i2, i3, i6, n4, n6, n7, s21_1, n15, s22_1, s22_2, s22_3, s22_4);
cf_rca_16_15 s23 (clock_config_c, clock_main_c, i1, i2, i3, i4, i5, i6, n11, n12, n13, n14, s23_1, s23_2, s23_3, s23_4);
assign o4 = n18;
assign o3 = n17;
assign o2 = s23_2;
assign o1 = n10;
endmodule

module cf_rca_16_15 (clock_config_c, clock_main_c, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, o1, o2, o3, o4);
input  clock_config_c;
input  clock_main_c;
input  i1;
input  i2;
input  [17:0] i3;
input  [15:0] i4;
input  [3:0] i5;
input  [1:0] i6;
input  [15:0] i7;
input  [2:0] i8;
input  [2:0] i9;
input  [2:0] i10;
output [15:0] o1;
output [15:0] o2;
output [2:0] o3;
output [2:0] o4;
wire   n1;
wire   [4:0] n2;
wire   [15:0] n3;
wire   n4;
wire   n5;
wire   n6;
wire   n7;
wire   [14:0] n8;
wire   [14:0] n9;
wire   [15:0] n10;
wire   [15:0] n11;
wire   [1:0] n12;
wire   [1:0] n13;
wire   [1:0] n14;
wire   n15;
wire   [14:0] n16;
wire   [2:0] n17;
wire   [2:0] n18;
wire   [15:0] s19_1;
wire   [15:0] s19_2;
wire   [15:0] s19_3;
wire   [15:0] s19_4;
wire   [15:0] s19_5;
wire   [15:0] s19_6;
wire   [15:0] s19_7;
wire   [15:0] s19_8;
wire   [15:0] s19_9;
wire   [15:0] s19_10;
wire   [15:0] s19_11;
wire   [15:0] s19_12;
wire   [15:0] s19_13;
wire   [15:0] s19_14;
wire   [15:0] s19_15;
wire   [15:0] s19_16;
wire   [15:0] s20_1;
wire   s21_1;
wire   s21_2;
wire   [14:0] s21_3;
wire   [14:0] s21_4;
wire   s22_1;
wire   s22_2;
wire   s22_3;
wire   s22_4;
wire   [15:0] s23_1;
wire   [15:0] s23_2;
wire   [1:0] s23_3;
wire   [1:0] s23_4;
assign n1 = i8[0];
assign n2 = {n1, i5};
assign n3 = 16'b0000000000000000;
assign n4 = i9[0];
assign n5 = i10[0];
assign n6 = s20_1[0];
assign n7 = i7[0];
assign n8 = {s20_1[15],
  s20_1[14],
  s20_1[13],
  s20_1[12],
  s20_1[11],
  s20_1[10],
  s20_1[9],
  s20_1[8],
  s20_1[7],
  s20_1[6],
  s20_1[5],
  s20_1[4],
  s20_1[3],
  s20_1[2],
  s20_1[1]};
assign n9 = {i7[15],
  i7[14],
  i7[13],
  i7[12],
  i7[11],
  i7[10],
  i7[9],
  i7[8],
  i7[7],
  i7[6],
  i7[5],
  i7[4],
  i7[3],
  i7[2],
  i7[1]};
assign n10 = {s21_3, s22_1};
assign n11 = {s21_4, s22_2};
assign n12 = {i8[2],
  i8[1]};
assign n13 = {i9[2],
  i9[1]};
assign n14 = {i10[2],
  i10[1]};
assign n15 = s23_1[0];
assign n16 = {s23_1[15],
  s23_1[14],
  s23_1[13],
  s23_1[12],
  s23_1[11],
  s23_1[10],
  s23_1[9],
  s23_1[8],
  s23_1[7],
  s23_1[6],
  s23_1[5],
  s23_1[4],
  s23_1[3],
  s23_1[2],
  s23_1[1]};
assign n17 = {s23_3, s22_3};
assign n18 = {s23_4, s21_2};
cf_rca_16_38 s19 (s19_1, s19_2, s19_3, s19_4, s19_5, s19_6, s19_7, s19_8, s19_9, s19_10, s19_11, s19_12, s19_13, s19_14, s19_15, s19_16);
cf_rca_16_32 s20 (n2, s19_1, s19_2, s19_3, s19_4, s19_5, s19_6, s19_7, s19_8, s19_9, s19_10, s19_11, s19_12, s19_13, s19_14, s19_15, s19_16, n3, s20_1);
cf_rca_16_22 s21 (clock_config_c, clock_main_c, i1, i2, i3, i6, n5, s22_4, n8, n9, n16, s21_1, s21_2, s21_3, s21_4);
cf_rca_16_29 s22 (clock_config_c, clock_main_c, i1, i2, i3, i6, n4, n6, n7, s21_1, n15, s22_1, s22_2, s22_3, s22_4);
cf_rca_16_16 s23 (clock_config_c, clock_main_c, i1, i2, i3, i4, i5, i6, n11, n12, n13, n14, s23_1, s23_2, s23_3, s23_4);
assign o4 = n18;
assign o3 = n17;
assign o2 = s23_2;
assign o1 = n10;
endmodule

module cf_rca_16_16 (clock_config_c, clock_main_c, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, o1, o2, o3, o4);
input  clock_config_c;
input  clock_main_c;
input  i1;
input  i2;
input  [17:0] i3;
input  [15:0] i4;
input  [3:0] i5;
input  [1:0] i6;
input  [15:0] i7;
input  [1:0] i8;
input  [1:0] i9;
input  [1:0] i10;
output [15:0] o1;
output [15:0] o2;
output [1:0] o3;
output [1:0] o4;
wire   n1;
wire   [4:0] n2;
wire   [15:0] n3;
wire   n4;
wire   n5;
wire   n6;
wire   n7;
wire   [14:0] n8;
wire   [14:0] n9;
wire   [15:0] n10;
wire   [15:0] n11;
wire   n12;
wire   n13;
wire   n14;
wire   n15;
wire   [14:0] n16;
wire   [1:0] n17;
wire   [1:0] n18;
wire   [15:0] s19_1;
wire   [15:0] s19_2;
wire   [15:0] s19_3;
wire   [15:0] s19_4;
wire   [15:0] s19_5;
wire   [15:0] s19_6;
wire   [15:0] s19_7;
wire   [15:0] s19_8;
wire   [15:0] s19_9;
wire   [15:0] s19_10;
wire   [15:0] s19_11;
wire   [15:0] s19_12;
wire   [15:0] s19_13;
wire   [15:0] s19_14;
wire   [15:0] s19_15;
wire   [15:0] s19_16;
wire   [15:0] s20_1;
wire   s21_1;
wire   s21_2;
wire   [14:0] s21_3;
wire   [14:0] s21_4;
wire   s22_1;
wire   s22_2;
wire   s22_3;
wire   s22_4;
wire   s23_1;
wire   s23_2;
wire   [15:0] s23_3;
wire   [15:0] s23_4;
assign n1 = i8[0];
assign n2 = {n1, i5};
assign n3 = 16'b0000000000000000;
assign n4 = i9[0];
assign n5 = i10[0];
assign n6 = s20_1[0];
assign n7 = i7[0];
assign n8 = {s20_1[15],
  s20_1[14],
  s20_1[13],
  s20_1[12],
  s20_1[11],
  s20_1[10],
  s20_1[9],
  s20_1[8],
  s20_1[7],
  s20_1[6],
  s20_1[5],
  s20_1[4],
  s20_1[3],
  s20_1[2],
  s20_1[1]};
assign n9 = {i7[15],
  i7[14],
  i7[13],
  i7[12],
  i7[11],
  i7[10],
  i7[9],
  i7[8],
  i7[7],
  i7[6],
  i7[5],
  i7[4],
  i7[3],
  i7[2],
  i7[1]};
assign n10 = {s21_3, s22_1};
assign n11 = {s21_4, s22_2};
assign n12 = i8[1];
assign n13 = i9[1];
assign n14 = i10[1];
assign n15 = s23_3[0];
assign n16 = {s23_3[15],
  s23_3[14],
  s23_3[13],
  s23_3[12],
  s23_3[11],
  s23_3[10],
  s23_3[9],
  s23_3[8],
  s23_3[7],
  s23_3[6],
  s23_3[5],
  s23_3[4],
  s23_3[3],
  s23_3[2],
  s23_3[1]};
assign n17 = {s23_1, s22_3};
assign n18 = {s23_2, s21_2};
cf_rca_16_38 s19 (s19_1, s19_2, s19_3, s19_4, s19_5, s19_6, s19_7, s19_8, s19_9, s19_10, s19_11, s19_12, s19_13, s19_14, s19_15, s19_16);
cf_rca_16_32 s20 (n2, s19_1, s19_2, s19_3, s19_4, s19_5, s19_6, s19_7, s19_8, s19_9, s19_10, s19_11, s19_12, s19_13, s19_14, s19_15, s19_16, n3, s20_1);
cf_rca_16_22 s21 (clock_config_c, clock_main_c, i1, i2, i3, i6, n5, s22_4, n8, n9, n16, s21_1, s21_2, s21_3, s21_4);
cf_rca_16_29 s22 (clock_config_c, clock_main_c, i1, i2, i3, i6, n4, n6, n7, s21_1, n15, s22_1, s22_2, s22_3, s22_4);
cf_rca_16_17 s23 (clock_config_c, clock_main_c, i1, i2, i3, i4, i5, i6, n11, n12, n13, n14, s23_1, s23_2, s23_3, s23_4);
assign o4 = n18;
assign o3 = n17;
assign o2 = s23_4;
assign o1 = n10;
endmodule

module cf_rca_16_17 (clock_config_c, clock_main_c, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, o1, o2, o3, o4);
input  clock_config_c;
input  clock_main_c;
input  i1;
input  i2;
input  [17:0] i3;
input  [15:0] i4;
input  [3:0] i5;
input  [1:0] i6;
input  [15:0] i7;
input  i8;
input  i9;
input  i10;
output o1;
output o2;
output [15:0] o3;
output [15:0] o4;
wire   n1;
wire   [4:0] n2;
wire   [15:0] n3;
wire   n4;
wire   n5;
wire   n6;
wire   n7;
wire   [14:0] n8;
wire   [14:0] n9;
wire   [15:0] n10;
wire   [15:0] n11;
wire   n12;
wire   [14:0] n13;
wire   [15:0] s14_1;
wire   [15:0] s14_2;
wire   [15:0] s14_3;
wire   [15:0] s14_4;
wire   [15:0] s14_5;
wire   [15:0] s14_6;
wire   [15:0] s14_7;
wire   [15:0] s14_8;
wire   [15:0] s14_9;
wire   [15:0] s14_10;
wire   [15:0] s14_11;
wire   [15:0] s14_12;
wire   [15:0] s14_13;
wire   [15:0] s14_14;
wire   [15:0] s14_15;
wire   [15:0] s14_16;
wire   [15:0] s15_1;
wire   s16_1;
wire   s16_2;
wire   [14:0] s16_3;
wire   [14:0] s16_4;
wire   s17_1;
wire   s17_2;
wire   s17_3;
wire   s17_4;
assign n1 = i8;
assign n2 = {n1, i5};
assign n3 = 16'b0000000000000000;
assign n4 = i9;
assign n5 = i10;
assign n6 = s15_1[0];
assign n7 = i7[0];
assign n8 = {s15_1[15],
  s15_1[14],
  s15_1[13],
  s15_1[12],
  s15_1[11],
  s15_1[10],
  s15_1[9],
  s15_1[8],
  s15_1[7],
  s15_1[6],
  s15_1[5],
  s15_1[4],
  s15_1[3],
  s15_1[2],
  s15_1[1]};
assign n9 = {i7[15],
  i7[14],
  i7[13],
  i7[12],
  i7[11],
  i7[10],
  i7[9],
  i7[8],
  i7[7],
  i7[6],
  i7[5],
  i7[4],
  i7[3],
  i7[2],
  i7[1]};
assign n10 = {s16_3, s17_1};
assign n11 = {s16_4, s17_2};
assign n12 = i4[0];
assign n13 = {i4[15],
  i4[14],
  i4[13],
  i4[12],
  i4[11],
  i4[10],
  i4[9],
  i4[8],
  i4[7],
  i4[6],
  i4[5],
  i4[4],
  i4[3],
  i4[2],
  i4[1]};
cf_rca_16_38 s14 (s14_1, s14_2, s14_3, s14_4, s14_5, s14_6, s14_7, s14_8, s14_9, s14_10, s14_11, s14_12, s14_13, s14_14, s14_15, s14_16);
cf_rca_16_32 s15 (n2, s14_1, s14_2, s14_3, s14_4, s14_5, s14_6, s14_7, s14_8, s14_9, s14_10, s14_11, s14_12, s14_13, s14_14, s14_15, s14_16, n3, s15_1);
cf_rca_16_22 s16 (clock_config_c, clock_main_c, i1, i2, i3, i6, n5, s17_4, n8, n9, n13, s16_1, s16_2, s16_3, s16_4);
cf_rca_16_29 s17 (clock_config_c, clock_main_c, i1, i2, i3, i6, n4, n6, n7, s16_1, n12, s17_1, s17_2, s17_3, s17_4);
assign o4 = n11;
assign o3 = n10;
assign o2 = s16_2;
assign o1 = s17_3;
endmodule

module cf_rca_16_18 (clock_config_c, clock_main_c, i1, i2, i3, i4, i5, i6, i7, i8, i9, o1, o2, o3, o4);
input  clock_config_c;
input  clock_main_c;
input  i1;
input  i2;
input  [17:0] i3;
input  [1:0] i4;
input  i5;
input  i6;
input  [14:0] i7;
input  [14:0] i8;
input  [14:0] i9;
output o1;
output o2;
output [14:0] o3;
output [14:0] o4;
wire   n1;
wire   n2;
wire   [13:0] n3;
wire   [13:0] n4;
wire   n5;
wire   n6;
wire   [12:0] n7;
wire   [12:0] n8;
wire   [13:0] n9;
wire   [13:0] n10;
wire   [14:0] n11;
wire   [14:0] n12;
wire   n13;
wire   [13:0] n14;
wire   n15;
wire   [12:0] n16;
wire   s17_1;
wire   s17_2;
wire   s17_3;
wire   s17_4;
wire   s18_1;
wire   s18_2;
wire   [12:0] s18_3;
wire   [12:0] s18_4;
wire   s19_1;
wire   s19_2;
wire   s19_3;
wire   s19_4;
assign n1 = i7[0];
assign n2 = i8[0];
assign n3 = {i7[14],
  i7[13],
  i7[12],
  i7[11],
  i7[10],
  i7[9],
  i7[8],
  i7[7],
  i7[6],
  i7[5],
  i7[4],
  i7[3],
  i7[2],
  i7[1]};
assign n4 = {i8[14],
  i8[13],
  i8[12],
  i8[11],
  i8[10],
  i8[9],
  i8[8],
  i8[7],
  i8[6],
  i8[5],
  i8[4],
  i8[3],
  i8[2],
  i8[1]};
assign n5 = n3[0];
assign n6 = n4[0];
assign n7 = {n3[13],
  n3[12],
  n3[11],
  n3[10],
  n3[9],
  n3[8],
  n3[7],
  n3[6],
  n3[5],
  n3[4],
  n3[3],
  n3[2],
  n3[1]};
assign n8 = {n4[13],
  n4[12],
  n4[11],
  n4[10],
  n4[9],
  n4[8],
  n4[7],
  n4[6],
  n4[5],
  n4[4],
  n4[3],
  n4[2],
  n4[1]};
assign n9 = {s18_3, s17_1};
assign n10 = {s18_4, s17_2};
assign n11 = {n9, s19_1};
assign n12 = {n10, s19_2};
assign n13 = i9[0];
assign n14 = {i9[14],
  i9[13],
  i9[12],
  i9[11],
  i9[10],
  i9[9],
  i9[8],
  i9[7],
  i9[6],
  i9[5],
  i9[4],
  i9[3],
  i9[2],
  i9[1]};
assign n15 = n14[0];
assign n16 = {n14[13],
  n14[12],
  n14[11],
  n14[10],
  n14[9],
  n14[8],
  n14[7],
  n14[6],
  n14[5],
  n14[4],
  n14[3],
  n14[2],
  n14[1]};
cf_rca_16_29 s17 (clock_config_c, clock_main_c, i1, i2, i3, i4, s19_4, n5, n6, s18_1, n15, s17_1, s17_2, s17_3, s17_4);
cf_rca_16_19 s18 (clock_config_c, clock_main_c, i1, i2, i3, i4, i5, s17_4, n7, n8, n16, s18_1, s18_2, s18_3, s18_4);
cf_rca_16_29 s19 (clock_config_c, clock_main_c, i1, i2, i3, i4, i6, n1, n2, s17_3, n13, s19_1, s19_2, s19_3, s19_4);
assign o4 = n12;
assign o3 = n11;
assign o2 = s18_2;
assign o1 = s19_3;
endmodule

module cf_rca_16_19 (clock_config_c, clock_main_c, i1, i2, i3, i4, i5, i6, i7, i8, i9, o1, o2, o3, o4);
input  clock_config_c;
input  clock_main_c;
input  i1;
input  i2;
input  [17:0] i3;
input  [1:0] i4;
input  i5;
input  i6;
input  [12:0] i7;
input  [12:0] i8;
input  [12:0] i9;
output o1;
output o2;
output [12:0] o3;
output [12:0] o4;
wire   n1;
wire   n2;
wire   [11:0] n3;
wire   [11:0] n4;
wire   n5;
wire   n6;
wire   [10:0] n7;
wire   [10:0] n8;
wire   [11:0] n9;
wire   [11:0] n10;
wire   [12:0] n11;
wire   [12:0] n12;
wire   n13;
wire   [11:0] n14;
wire   n15;
wire   [10:0] n16;
wire   s17_1;
wire   s17_2;
wire   s17_3;
wire   s17_4;
wire   s18_1;
wire   s18_2;
wire   [10:0] s18_3;
wire   [10:0] s18_4;
wire   s19_1;
wire   s19_2;
wire   s19_3;
wire   s19_4;
assign n1 = i7[0];
assign n2 = i8[0];
assign n3 = {i7[12],
  i7[11],
  i7[10],
  i7[9],
  i7[8],
  i7[7],
  i7[6],
  i7[5],
  i7[4],
  i7[3],
  i7[2],
  i7[1]};
assign n4 = {i8[12],
  i8[11],
  i8[10],
  i8[9],
  i8[8],
  i8[7],
  i8[6],
  i8[5],
  i8[4],
  i8[3],
  i8[2],
  i8[1]};
assign n5 = n3[0];
assign n6 = n4[0];
assign n7 = {n3[11],
  n3[10],
  n3[9],
  n3[8],
  n3[7],
  n3[6],
  n3[5],
  n3[4],
  n3[3],
  n3[2],
  n3[1]};
assign n8 = {n4[11],
  n4[10],
  n4[9],
  n4[8],
  n4[7],
  n4[6],
  n4[5],
  n4[4],
  n4[3],
  n4[2],
  n4[1]};
assign n9 = {s18_3, s17_1};
assign n10 = {s18_4, s17_2};
assign n11 = {n9, s19_1};
assign n12 = {n10, s19_2};
assign n13 = i9[0];
assign n14 = {i9[12],
  i9[11],
  i9[10],
  i9[9],
  i9[8],
  i9[7],
  i9[6],
  i9[5],
  i9[4],
  i9[3],
  i9[2],
  i9[1]};
assign n15 = n14[0];
assign n16 = {n14[11],
  n14[10],
  n14[9],
  n14[8],
  n14[7],
  n14[6],
  n14[5],
  n14[4],
  n14[3],
  n14[2],
  n14[1]};
cf_rca_16_29 s17 (clock_config_c, clock_main_c, i1, i2, i3, i4, s19_4, n5, n6, s18_1, n15, s17_1, s17_2, s17_3, s17_4);
cf_rca_16_20 s18 (clock_config_c, clock_main_c, i1, i2, i3, i4, i5, s17_4, n7, n8, n16, s18_1, s18_2, s18_3, s18_4);
cf_rca_16_29 s19 (clock_config_c, clock_main_c, i1, i2, i3, i4, i6, n1, n2, s17_3, n13, s19_1, s19_2, s19_3, s19_4);
assign o4 = n12;
assign o3 = n11;
assign o2 = s18_2;
assign o1 = s19_3;
endmodule

module cf_rca_16_20 (clock_config_c, clock_main_c, i1, i2, i3, i4, i5, i6, i7, i8, i9, o1, o2, o3, o4);
input  clock_config_c;
input  clock_main_c;
input  i1;
input  i2;
input  [17:0] i3;
input  [1:0] i4;
input  i5;
input  i6;
input  [10:0] i7;
input  [10:0] i8;
input  [10:0] i9;
output o1;
output o2;
output [10:0] o3;
output [10:0] o4;
wire   n1;
wire   n2;
wire   [9:0] n3;
wire   [9:0] n4;
wire   n5;
wire   n6;
wire   [8:0] n7;
wire   [8:0] n8;
wire   [9:0] n9;
wire   [9:0] n10;
wire   [10:0] n11;
wire   [10:0] n12;
wire   n13;
wire   [9:0] n14;
wire   n15;
wire   [8:0] n16;
wire   s17_1;
wire   s17_2;
wire   s17_3;
wire   s17_4;
wire   s18_1;
wire   s18_2;
wire   [8:0] s18_3;
wire   [8:0] s18_4;
wire   s19_1;
wire   s19_2;
wire   s19_3;
wire   s19_4;
assign n1 = i7[0];
assign n2 = i8[0];
assign n3 = {i7[10],
  i7[9],
  i7[8],
  i7[7],
  i7[6],
  i7[5],
  i7[4],
  i7[3],
  i7[2],
  i7[1]};
assign n4 = {i8[10],
  i8[9],
  i8[8],
  i8[7],
  i8[6],
  i8[5],
  i8[4],
  i8[3],
  i8[2],
  i8[1]};
assign n5 = n3[0];
assign n6 = n4[0];
assign n7 = {n3[9],
  n3[8],
  n3[7],
  n3[6],
  n3[5],
  n3[4],
  n3[3],
  n3[2],
  n3[1]};
assign n8 = {n4[9],
  n4[8],
  n4[7],
  n4[6],
  n4[5],
  n4[4],
  n4[3],
  n4[2],
  n4[1]};
assign n9 = {s18_3, s17_1};
assign n10 = {s18_4, s17_2};
assign n11 = {n9, s19_1};
assign n12 = {n10, s19_2};
assign n13 = i9[0];
assign n14 = {i9[10],
  i9[9],
  i9[8],
  i9[7],
  i9[6],
  i9[5],
  i9[4],
  i9[3],
  i9[2],
  i9[1]};
assign n15 = n14[0];
assign n16 = {n14[9],
  n14[8],
  n14[7],
  n14[6],
  n14[5],
  n14[4],
  n14[3],
  n14[2],
  n14[1]};
cf_rca_16_29 s17 (clock_config_c, clock_main_c, i1, i2, i3, i4, s19_4, n5, n6, s18_1, n15, s17_1, s17_2, s17_3, s17_4);
cf_rca_16_21 s18 (clock_config_c, clock_main_c, i1, i2, i3, i4, i5, s17_4, n7, n8, n16, s18_1, s18_2, s18_3, s18_4);
cf_rca_16_29 s19 (clock_config_c, clock_main_c, i1, i2, i3, i4, i6, n1, n2, s17_3, n13, s19_1, s19_2, s19_3, s19_4);
assign o4 = n12;
assign o3 = n11;
assign o2 = s18_2;
assign o1 = s19_3;
endmodule

module cf_rca_16_21 (clock_config_c, clock_main_c, i1, i2, i3, i4, i5, i6, i7, i8, i9, o1, o2, o3, o4);
input  clock_config_c;
input  clock_main_c;
input  i1;
input  i2;
input  [17:0] i3;
input  [1:0] i4;
input  i5;
input  i6;
input  [8:0] i7;
input  [8:0] i8;
input  [8:0] i9;
output o1;
output o2;
output [8:0] o3;
output [8:0] o4;
wire   n1;
wire   n2;
wire   [7:0] n3;
wire   [7:0] n4;
wire   n5;
wire   n6;
wire   [6:0] n7;
wire   [6:0] n8;
wire   [7:0] n9;
wire   [7:0] n10;
wire   [8:0] n11;
wire   [8:0] n12;
wire   n13;
wire   [7:0] n14;
wire   n15;
wire   [6:0] n16;
wire   s17_1;
wire   s17_2;
wire   s17_3;
wire   s17_4;
wire   s18_1;
wire   s18_2;
wire   [6:0] s18_3;
wire   [6:0] s18_4;
wire   s19_1;
wire   s19_2;
wire   s19_3;
wire   s19_4;
assign n1 = i7[0];
assign n2 = i8[0];
assign n3 = {i7[8],
  i7[7],
  i7[6],
  i7[5],
  i7[4],
  i7[3],
  i7[2],
  i7[1]};
assign n4 = {i8[8],
  i8[7],
  i8[6],
  i8[5],
  i8[4],
  i8[3],
  i8[2],
  i8[1]};
assign n5 = n3[0];
assign n6 = n4[0];
assign n7 = {n3[7],
  n3[6],
  n3[5],
  n3[4],
  n3[3],
  n3[2],
  n3[1]};
assign n8 = {n4[7],
  n4[6],
  n4[5],
  n4[4],
  n4[3],
  n4[2],
  n4[1]};
assign n9 = {s18_3, s17_1};
assign n10 = {s18_4, s17_2};
assign n11 = {n9, s19_1};
assign n12 = {n10, s19_2};
assign n13 = i9[0];
assign n14 = {i9[8],
  i9[7],
  i9[6],
  i9[5],
  i9[4],
  i9[3],
  i9[2],
  i9[1]};
assign n15 = n14[0];
assign n16 = {n14[7],
  n14[6],
  n14[5],
  n14[4],
  n14[3],
  n14[2],
  n14[1]};
cf_rca_16_29 s17 (clock_config_c, clock_main_c, i1, i2, i3, i4, s19_4, n5, n6, s18_1, n15, s17_1, s17_2, s17_3, s17_4);
cf_rca_16_26 s18 (clock_config_c, clock_main_c, i1, i2, i3, i4, i5, s17_4, n7, n8, n16, s18_1, s18_2, s18_3, s18_4);
cf_rca_16_29 s19 (clock_config_c, clock_main_c, i1, i2, i3, i4, i6, n1, n2, s17_3, n13, s19_1, s19_2, s19_3, s19_4);
assign o4 = n12;
assign o3 = n11;
assign o2 = s18_2;
assign o1 = s19_3;
endmodule

module cf_rca_16_22 (clock_config_c, clock_main_c, i1, i2, i3, i4, i5, i6, i7, i8, i9, o1, o2, o3, o4);
input  clock_config_c;
input  clock_main_c;
input  i1;
input  i2;
input  [17:0] i3;
input  [1:0] i4;
input  i5;
input  i6;
input  [14:0] i7;
input  [14:0] i8;
input  [14:0] i9;
output o1;
output o2;
output [14:0] o3;
output [14:0] o4;
wire   n1;
wire   n2;
wire   [13:0] n3;
wire   [13:0] n4;
wire   n5;
wire   n6;
wire   [12:0] n7;
wire   [12:0] n8;
wire   [13:0] n9;
wire   [13:0] n10;
wire   [14:0] n11;
wire   [14:0] n12;
wire   n13;
wire   [13:0] n14;
wire   n15;
wire   [12:0] n16;
wire   s17_1;
wire   s17_2;
wire   [12:0] s17_3;
wire   [12:0] s17_4;
wire   s18_1;
wire   s18_2;
wire   s18_3;
wire   s18_4;
wire   s19_1;
wire   s19_2;
wire   s19_3;
wire   s19_4;
assign n1 = i7[0];
assign n2 = i8[0];
assign n3 = {i7[14],
  i7[13],
  i7[12],
  i7[11],
  i7[10],
  i7[9],
  i7[8],
  i7[7],
  i7[6],
  i7[5],
  i7[4],
  i7[3],
  i7[2],
  i7[1]};
assign n4 = {i8[14],
  i8[13],
  i8[12],
  i8[11],
  i8[10],
  i8[9],
  i8[8],
  i8[7],
  i8[6],
  i8[5],
  i8[4],
  i8[3],
  i8[2],
  i8[1]};
assign n5 = n3[0];
assign n6 = n4[0];
assign n7 = {n3[13],
  n3[12],
  n3[11],
  n3[10],
  n3[9],
  n3[8],
  n3[7],
  n3[6],
  n3[5],
  n3[4],
  n3[3],
  n3[2],
  n3[1]};
assign n8 = {n4[13],
  n4[12],
  n4[11],
  n4[10],
  n4[9],
  n4[8],
  n4[7],
  n4[6],
  n4[5],
  n4[4],
  n4[3],
  n4[2],
  n4[1]};
assign n9 = {s17_3, s18_1};
assign n10 = {s17_4, s18_2};
assign n11 = {n9, s19_1};
assign n12 = {n10, s19_2};
assign n13 = i9[0];
assign n14 = {i9[14],
  i9[13],
  i9[12],
  i9[11],
  i9[10],
  i9[9],
  i9[8],
  i9[7],
  i9[6],
  i9[5],
  i9[4],
  i9[3],
  i9[2],
  i9[1]};
assign n15 = n14[0];
assign n16 = {n14[13],
  n14[12],
  n14[11],
  n14[10],
  n14[9],
  n14[8],
  n14[7],
  n14[6],
  n14[5],
  n14[4],
  n14[3],
  n14[2],
  n14[1]};
cf_rca_16_23 s17 (clock_config_c, clock_main_c, i1, i2, i3, i4, i5, s18_4, n7, n8, n16, s17_1, s17_2, s17_3, s17_4);
cf_rca_16_29 s18 (clock_config_c, clock_main_c, i1, i2, i3, i4, s19_4, n5, n6, s17_1, n15, s18_1, s18_2, s18_3, s18_4);
cf_rca_16_29 s19 (clock_config_c, clock_main_c, i1, i2, i3, i4, i6, n1, n2, s18_3, n13, s19_1, s19_2, s19_3, s19_4);
assign o4 = n12;
assign o3 = n11;
assign o2 = s17_2;
assign o1 = s19_3;
endmodule

module cf_rca_16_23 (clock_config_c, clock_main_c, i1, i2, i3, i4, i5, i6, i7, i8, i9, o1, o2, o3, o4);
input  clock_config_c;
input  clock_main_c;
input  i1;
input  i2;
input  [17:0] i3;
input  [1:0] i4;
input  i5;
input  i6;
input  [12:0] i7;
input  [12:0] i8;
input  [12:0] i9;
output o1;
output o2;
output [12:0] o3;
output [12:0] o4;
wire   n1;
wire   n2;
wire   [11:0] n3;
wire   [11:0] n4;
wire   n5;
wire   n6;
wire   [10:0] n7;
wire   [10:0] n8;
wire   [11:0] n9;
wire   [11:0] n10;
wire   [12:0] n11;
wire   [12:0] n12;
wire   n13;
wire   [11:0] n14;
wire   n15;
wire   [10:0] n16;
wire   s17_1;
wire   s17_2;
wire   [10:0] s17_3;
wire   [10:0] s17_4;
wire   s18_1;
wire   s18_2;
wire   s18_3;
wire   s18_4;
wire   s19_1;
wire   s19_2;
wire   s19_3;
wire   s19_4;
assign n1 = i7[0];
assign n2 = i8[0];
assign n3 = {i7[12],
  i7[11],
  i7[10],
  i7[9],
  i7[8],
  i7[7],
  i7[6],
  i7[5],
  i7[4],
  i7[3],
  i7[2],
  i7[1]};
assign n4 = {i8[12],
  i8[11],
  i8[10],
  i8[9],
  i8[8],
  i8[7],
  i8[6],
  i8[5],
  i8[4],
  i8[3],
  i8[2],
  i8[1]};
assign n5 = n3[0];
assign n6 = n4[0];
assign n7 = {n3[11],
  n3[10],
  n3[9],
  n3[8],
  n3[7],
  n3[6],
  n3[5],
  n3[4],
  n3[3],
  n3[2],
  n3[1]};
assign n8 = {n4[11],
  n4[10],
  n4[9],
  n4[8],
  n4[7],
  n4[6],
  n4[5],
  n4[4],
  n4[3],
  n4[2],
  n4[1]};
assign n9 = {s17_3, s18_1};
assign n10 = {s17_4, s18_2};
assign n11 = {n9, s19_1};
assign n12 = {n10, s19_2};
assign n13 = i9[0];
assign n14 = {i9[12],
  i9[11],
  i9[10],
  i9[9],
  i9[8],
  i9[7],
  i9[6],
  i9[5],
  i9[4],
  i9[3],
  i9[2],
  i9[1]};
assign n15 = n14[0];
assign n16 = {n14[11],
  n14[10],
  n14[9],
  n14[8],
  n14[7],
  n14[6],
  n14[5],
  n14[4],
  n14[3],
  n14[2],
  n14[1]};
cf_rca_16_24 s17 (clock_config_c, clock_main_c, i1, i2, i3, i4, i5, s18_4, n7, n8, n16, s17_1, s17_2, s17_3, s17_4);
cf_rca_16_29 s18 (clock_config_c, clock_main_c, i1, i2, i3, i4, s19_4, n5, n6, s17_1, n15, s18_1, s18_2, s18_3, s18_4);
cf_rca_16_29 s19 (clock_config_c, clock_main_c, i1, i2, i3, i4, i6, n1, n2, s18_3, n13, s19_1, s19_2, s19_3, s19_4);
assign o4 = n12;
assign o3 = n11;
assign o2 = s17_2;
assign o1 = s19_3;
endmodule

module cf_rca_16_24 (clock_config_c, clock_main_c, i1, i2, i3, i4, i5, i6, i7, i8, i9, o1, o2, o3, o4);
input  clock_config_c;
input  clock_main_c;
input  i1;
input  i2;
input  [17:0] i3;
input  [1:0] i4;
input  i5;
input  i6;
input  [10:0] i7;
input  [10:0] i8;
input  [10:0] i9;
output o1;
output o2;
output [10:0] o3;
output [10:0] o4;
wire   n1;
wire   n2;
wire   [9:0] n3;
wire   [9:0] n4;
wire   n5;
wire   n6;
wire   [8:0] n7;
wire   [8:0] n8;
wire   [9:0] n9;
wire   [9:0] n10;
wire   [10:0] n11;
wire   [10:0] n12;
wire   n13;
wire   [9:0] n14;
wire   n15;
wire   [8:0] n16;
wire   s17_1;
wire   s17_2;
wire   [8:0] s17_3;
wire   [8:0] s17_4;
wire   s18_1;
wire   s18_2;
wire   s18_3;
wire   s18_4;
wire   s19_1;
wire   s19_2;
wire   s19_3;
wire   s19_4;
assign n1 = i7[0];
assign n2 = i8[0];
assign n3 = {i7[10],
  i7[9],
  i7[8],
  i7[7],
  i7[6],
  i7[5],
  i7[4],
  i7[3],
  i7[2],
  i7[1]};
assign n4 = {i8[10],
  i8[9],
  i8[8],
  i8[7],
  i8[6],
  i8[5],
  i8[4],
  i8[3],
  i8[2],
  i8[1]};
assign n5 = n3[0];
assign n6 = n4[0];
assign n7 = {n3[9],
  n3[8],
  n3[7],
  n3[6],
  n3[5],
  n3[4],
  n3[3],
  n3[2],
  n3[1]};
assign n8 = {n4[9],
  n4[8],
  n4[7],
  n4[6],
  n4[5],
  n4[4],
  n4[3],
  n4[2],
  n4[1]};
assign n9 = {s17_3, s18_1};
assign n10 = {s17_4, s18_2};
assign n11 = {n9, s19_1};
assign n12 = {n10, s19_2};
assign n13 = i9[0];
assign n14 = {i9[10],
  i9[9],
  i9[8],
  i9[7],
  i9[6],
  i9[5],
  i9[4],
  i9[3],
  i9[2],
  i9[1]};
assign n15 = n14[0];
assign n16 = {n14[9],
  n14[8],
  n14[7],
  n14[6],
  n14[5],
  n14[4],
  n14[3],
  n14[2],
  n14[1]};
cf_rca_16_25 s17 (clock_config_c, clock_main_c, i1, i2, i3, i4, i5, s18_4, n7, n8, n16, s17_1, s17_2, s17_3, s17_4);
cf_rca_16_29 s18 (clock_config_c, clock_main_c, i1, i2, i3, i4, s19_4, n5, n6, s17_1, n15, s18_1, s18_2, s18_3, s18_4);
cf_rca_16_29 s19 (clock_config_c, clock_main_c, i1, i2, i3, i4, i6, n1, n2, s18_3, n13, s19_1, s19_2, s19_3, s19_4);
assign o4 = n12;
assign o3 = n11;
assign o2 = s17_2;
assign o1 = s19_3;
endmodule

module cf_rca_16_25 (clock_config_c, clock_main_c, i1, i2, i3, i4, i5, i6, i7, i8, i9, o1, o2, o3, o4);
input  clock_config_c;
input  clock_main_c;
input  i1;
input  i2;
input  [17:0] i3;
input  [1:0] i4;
input  i5;
input  i6;
input  [8:0] i7;
input  [8:0] i8;
input  [8:0] i9;
output o1;
output o2;
output [8:0] o3;
output [8:0] o4;
wire   n1;
wire   n2;
wire   [7:0] n3;
wire   [7:0] n4;
wire   n5;
wire   n6;
wire   [6:0] n7;
wire   [6:0] n8;
wire   [7:0] n9;
wire   [7:0] n10;
wire   [8:0] n11;
wire   [8:0] n12;
wire   n13;
wire   [7:0] n14;
wire   n15;
wire   [6:0] n16;
wire   s17_1;
wire   s17_2;
wire   [6:0] s17_3;
wire   [6:0] s17_4;
wire   s18_1;
wire   s18_2;
wire   s18_3;
wire   s18_4;
wire   s19_1;
wire   s19_2;
wire   s19_3;
wire   s19_4;
assign n1 = i7[0];
assign n2 = i8[0];
assign n3 = {i7[8],
  i7[7],
  i7[6],
  i7[5],
  i7[4],
  i7[3],
  i7[2],
  i7[1]};
assign n4 = {i8[8],
  i8[7],
  i8[6],
  i8[5],
  i8[4],
  i8[3],
  i8[2],
  i8[1]};
assign n5 = n3[0];
assign n6 = n4[0];
assign n7 = {n3[7],
  n3[6],
  n3[5],
  n3[4],
  n3[3],
  n3[2],
  n3[1]};
assign n8 = {n4[7],
  n4[6],
  n4[5],
  n4[4],
  n4[3],
  n4[2],
  n4[1]};
assign n9 = {s17_3, s18_1};
assign n10 = {s17_4, s18_2};
assign n11 = {n9, s19_1};
assign n12 = {n10, s19_2};
assign n13 = i9[0];
assign n14 = {i9[8],
  i9[7],
  i9[6],
  i9[5],
  i9[4],
  i9[3],
  i9[2],
  i9[1]};
assign n15 = n14[0];
assign n16 = {n14[7],
  n14[6],
  n14[5],
  n14[4],
  n14[3],
  n14[2],
  n14[1]};
cf_rca_16_26 s17 (clock_config_c, clock_main_c, i1, i2, i3, i4, i5, s18_4, n7, n8, n16, s17_1, s17_2, s17_3, s17_4);
cf_rca_16_29 s18 (clock_config_c, clock_main_c, i1, i2, i3, i4, s19_4, n5, n6, s17_1, n15, s18_1, s18_2, s18_3, s18_4);
cf_rca_16_29 s19 (clock_config_c, clock_main_c, i1, i2, i3, i4, i6, n1, n2, s18_3, n13, s19_1, s19_2, s19_3, s19_4);
assign o4 = n12;
assign o3 = n11;
assign o2 = s17_2;
assign o1 = s19_3;
endmodule

module cf_rca_16_26 (clock_config_c, clock_main_c, i1, i2, i3, i4, i5, i6, i7, i8, i9, o1, o2, o3, o4);
input  clock_config_c;
input  clock_main_c;
input  i1;
input  i2;
input  [17:0] i3;
input  [1:0] i4;
input  i5;
input  i6;
input  [6:0] i7;
input  [6:0] i8;
input  [6:0] i9;
output o1;
output o2;
output [6:0] o3;
output [6:0] o4;
wire   n1;
wire   n2;
wire   [5:0] n3;
wire   [5:0] n4;
wire   n5;
wire   n6;
wire   [4:0] n7;
wire   [4:0] n8;
wire   [5:0] n9;
wire   [5:0] n10;
wire   [6:0] n11;
wire   [6:0] n12;
wire   n13;
wire   [5:0] n14;
wire   n15;
wire   [4:0] n16;
wire   s17_1;
wire   s17_2;
wire   [4:0] s17_3;
wire   [4:0] s17_4;
wire   s18_1;
wire   s18_2;
wire   s18_3;
wire   s18_4;
wire   s19_1;
wire   s19_2;
wire   s19_3;
wire   s19_4;
assign n1 = i7[0];
assign n2 = i8[0];
assign n3 = {i7[6],
  i7[5],
  i7[4],
  i7[3],
  i7[2],
  i7[1]};
assign n4 = {i8[6],
  i8[5],
  i8[4],
  i8[3],
  i8[2],
  i8[1]};
assign n5 = n3[0];
assign n6 = n4[0];
assign n7 = {n3[5],
  n3[4],
  n3[3],
  n3[2],
  n3[1]};
assign n8 = {n4[5],
  n4[4],
  n4[3],
  n4[2],
  n4[1]};
assign n9 = {s17_3, s18_1};
assign n10 = {s17_4, s18_2};
assign n11 = {n9, s19_1};
assign n12 = {n10, s19_2};
assign n13 = i9[0];
assign n14 = {i9[6],
  i9[5],
  i9[4],
  i9[3],
  i9[2],
  i9[1]};
assign n15 = n14[0];
assign n16 = {n14[5],
  n14[4],
  n14[3],
  n14[2],
  n14[1]};
cf_rca_16_27 s17 (clock_config_c, clock_main_c, i1, i2, i3, i4, i5, s18_4, n7, n8, n16, s17_1, s17_2, s17_3, s17_4);
cf_rca_16_29 s18 (clock_config_c, clock_main_c, i1, i2, i3, i4, s19_4, n5, n6, s17_1, n15, s18_1, s18_2, s18_3, s18_4);
cf_rca_16_29 s19 (clock_config_c, clock_main_c, i1, i2, i3, i4, i6, n1, n2, s18_3, n13, s19_1, s19_2, s19_3, s19_4);
assign o4 = n12;
assign o3 = n11;
assign o2 = s17_2;
assign o1 = s19_3;
endmodule

module cf_rca_16_27 (clock_config_c, clock_main_c, i1, i2, i3, i4, i5, i6, i7, i8, i9, o1, o2, o3, o4);
input  clock_config_c;
input  clock_main_c;
input  i1;
input  i2;
input  [17:0] i3;
input  [1:0] i4;
input  i5;
input  i6;
input  [4:0] i7;
input  [4:0] i8;
input  [4:0] i9;
output o1;
output o2;
output [4:0] o3;
output [4:0] o4;
wire   n1;
wire   n2;
wire   [3:0] n3;
wire   [3:0] n4;
wire   n5;
wire   n6;
wire   [2:0] n7;
wire   [2:0] n8;
wire   [3:0] n9;
wire   [3:0] n10;
wire   [4:0] n11;
wire   [4:0] n12;
wire   n13;
wire   [3:0] n14;
wire   n15;
wire   [2:0] n16;
wire   s17_1;
wire   s17_2;
wire   [2:0] s17_3;
wire   [2:0] s17_4;
wire   s18_1;
wire   s18_2;
wire   s18_3;
wire   s18_4;
wire   s19_1;
wire   s19_2;
wire   s19_3;
wire   s19_4;
assign n1 = i7[0];
assign n2 = i8[0];
assign n3 = {i7[4],
  i7[3],
  i7[2],
  i7[1]};
assign n4 = {i8[4],
  i8[3],
  i8[2],
  i8[1]};
assign n5 = n3[0];
assign n6 = n4[0];
assign n7 = {n3[3],
  n3[2],
  n3[1]};
assign n8 = {n4[3],
  n4[2],
  n4[1]};
assign n9 = {s17_3, s18_1};
assign n10 = {s17_4, s18_2};
assign n11 = {n9, s19_1};
assign n12 = {n10, s19_2};
assign n13 = i9[0];
assign n14 = {i9[4],
  i9[3],
  i9[2],
  i9[1]};
assign n15 = n14[0];
assign n16 = {n14[3],
  n14[2],
  n14[1]};
cf_rca_16_28 s17 (clock_config_c, clock_main_c, i1, i2, i3, i4, i5, s18_4, n7, n8, n16, s17_1, s17_2, s17_3, s17_4);
cf_rca_16_29 s18 (clock_config_c, clock_main_c, i1, i2, i3, i4, s19_4, n5, n6, s17_1, n15, s18_1, s18_2, s18_3, s18_4);
cf_rca_16_29 s19 (clock_config_c, clock_main_c, i1, i2, i3, i4, i6, n1, n2, s18_3, n13, s19_1, s19_2, s19_3, s19_4);
assign o4 = n12;
assign o3 = n11;
assign o2 = s17_2;
assign o1 = s19_3;
endmodule

module cf_rca_16_28 (clock_config_c, clock_main_c, i1, i2, i3, i4, i5, i6, i7, i8, i9, o1, o2, o3, o4);
input  clock_config_c;
input  clock_main_c;
input  i1;
input  i2;
input  [17:0] i3;
input  [1:0] i4;
input  i5;
input  i6;
input  [2:0] i7;
input  [2:0] i8;
input  [2:0] i9;
output o1;
output o2;
output [2:0] o3;
output [2:0] o4;
wire   n1;
wire   n2;
wire   [1:0] n3;
wire   [1:0] n4;
wire   n5;
wire   n6;
wire   n7;
wire   n8;
wire   n9;
wire   n10;
wire   [1:0] n11;
wire   [1:0] n12;
wire   [2:0] n13;
wire   [2:0] n14;
wire   n15;
wire   [1:0] n16;
wire   n17;
wire   n18;
wire   n19;
wire   s20_1;
wire   s20_2;
wire   s20_3;
wire   s20_4;
wire   s21_1;
wire   s21_2;
wire   s21_3;
wire   s21_4;
wire   s22_1;
wire   s22_2;
wire   s22_3;
wire   s22_4;
assign n1 = i7[0];
assign n2 = i8[0];
assign n3 = {i7[2],
  i7[1]};
assign n4 = {i8[2],
  i8[1]};
assign n5 = n3[0];
assign n6 = n4[0];
assign n7 = n3[1];
assign n8 = n4[1];
assign n9 = n7;
assign n10 = n8;
assign n11 = {s20_1, s21_1};
assign n12 = {s20_2, s21_2};
assign n13 = {n11, s22_1};
assign n14 = {n12, s22_2};
assign n15 = i9[0];
assign n16 = {i9[2],
  i9[1]};
assign n17 = n16[0];
assign n18 = n16[1];
assign n19 = n18;
cf_rca_16_30 s20 (clock_config_c, clock_main_c, i1, i2, i3, i4, i5, s21_4, n9, n10, n19, s20_1, s20_2, s20_3, s20_4);
cf_rca_16_29 s21 (clock_config_c, clock_main_c, i1, i2, i3, i4, s22_4, n5, n6, s20_3, n17, s21_1, s21_2, s21_3, s21_4);
cf_rca_16_29 s22 (clock_config_c, clock_main_c, i1, i2, i3, i4, i6, n1, n2, s21_3, n15, s22_1, s22_2, s22_3, s22_4);
assign o4 = n14;
assign o3 = n13;
assign o2 = s20_4;
assign o1 = s22_3;
endmodule

module cf_rca_16_29 (clock_config_c, clock_main_c, i1, i2, i3, i4, i5, i6, i7, i8, i9, o1, o2, o3, o4);
input  clock_config_c;
input  clock_main_c;
input  i1;
input  i2;
input  [17:0] i3;
input  [1:0] i4;
input  i5;
input  i6;
input  i7;
input  i8;
input  i9;
output o1;
output o2;
output o3;
output o4;
wire   [2:0] n1;
wire   [3:0] n2;
wire   [3:0] n3;
wire   [3:0] n4;
wire   [3:0] n5;
wire   [3:0] n6;
wire   [2:0] n7;
wire   n8;
wire   [3:0] n9;
wire   n10;
reg    [17:0] n11;
wire   n12;
wire   [2:0] n13;
wire   [2:0] n14;
wire   [2:0] n15;
wire   [7:0] n16;
wire   n17;
reg    [17:0] n18;
wire   n19;
wire   [2:0] n20;
wire   [2:0] n21;
wire   [2:0] n22;
wire   [7:0] n23;
wire   n24;
reg    [17:0] n25;
wire   n26;
wire   [2:0] n27;
wire   [2:0] n28;
wire   [2:0] n29;
wire   [7:0] n30;
wire   n31;
reg    [17:0] n32;
wire   n33;
wire   [2:0] n34;
wire   [2:0] n35;
wire   [2:0] n36;
wire   [7:0] n37;
reg    n38;
reg    n39;
wire   n40;
wire   [6:0] n41;
wire   n42;
wire   [5:0] n43;
wire   n44;
wire   [4:0] n45;
wire   n46;
wire   [3:0] n47;
wire   n48;
wire   [2:0] n49;
wire   n50;
wire   [1:0] n51;
wire   n52;
wire   n53;
wire   n54;
wire   n55;
wire   [6:0] n56;
wire   n57;
wire   [5:0] n58;
wire   n59;
wire   [4:0] n60;
wire   n61;
wire   [3:0] n62;
wire   n63;
wire   [2:0] n64;
wire   n65;
wire   [1:0] n66;
wire   n67;
wire   n68;
wire   n69;
wire   n70;
wire   [6:0] n71;
wire   n72;
wire   [5:0] n73;
wire   n74;
wire   [4:0] n75;
wire   n76;
wire   [3:0] n77;
wire   n78;
wire   [2:0] n79;
wire   n80;
wire   [1:0] n81;
wire   n82;
wire   n83;
wire   n84;
wire   n85;
wire   [6:0] n86;
wire   n87;
wire   [5:0] n88;
wire   n89;
wire   [4:0] n90;
wire   n91;
wire   [3:0] n92;
wire   n93;
wire   [2:0] n94;
wire   n95;
wire   [1:0] n96;
wire   n97;
wire   n98;
wire   n99;
wire   [1:0] n100;
wire   n101;
wire   n102;
wire   n103;
wire   n104;
wire   n105;
wire   n106;
wire   n107;
wire   n108;
wire   n109;
wire   n110;
wire   n111;
wire   [1:0] n112;
wire   n113;
wire   n114;
wire   n115;
wire   n116;
wire   n117;
wire   n118;
wire   n119;
wire   n120;
wire   n121;
wire   n122;
wire   n123;
wire   [1:0] n124;
wire   n125;
wire   n126;
wire   n127;
wire   n128;
wire   n129;
wire   n130;
wire   n131;
wire   n132;
wire   n133;
wire   n134;
wire   n135;
wire   [1:0] n136;
wire   [2:0] n137;
wire   [1:0] n138;
wire   n139;
wire   n140;
wire   n141;
wire   n142;
wire   n143;
wire   n144;
wire   n145;
wire   n146;
wire   n147;
wire   n148;
wire   n149;
reg    n150;
wire   [1:0] n151;
wire   n152;
wire   n153;
wire   n154;
wire   n155;
wire   n156;
wire   n157;
wire   n158;
wire   n159;
wire   n160;
wire   n161;
wire   n162;
wire   [1:0] n163;
wire   n164;
wire   n165;
wire   n166;
wire   n167;
wire   n168;
wire   n169;
wire   n170;
wire   n171;
wire   n172;
wire   n173;
wire   n174;
wire   [1:0] n175;
wire   n176;
wire   n177;
wire   n178;
wire   n179;
wire   n180;
wire   n181;
wire   n182;
wire   n183;
wire   n184;
wire   n185;
wire   n186;
wire   [1:0] n187;
wire   [2:0] n188;
wire   [1:0] n189;
wire   n190;
wire   n191;
wire   n192;
wire   n193;
wire   n194;
wire   n195;
wire   n196;
wire   n197;
wire   n198;
wire   n199;
wire   n200;
reg    n201;
wire   [1:0] n202;
wire   n203;
wire   n204;
wire   n205;
wire   n206;
wire   n207;
wire   n208;
wire   n209;
wire   n210;
wire   n211;
wire   n212;
wire   n213;
wire   [1:0] n214;
wire   n215;
wire   n216;
wire   n217;
wire   n218;
wire   n219;
wire   n220;
wire   n221;
wire   n222;
wire   n223;
wire   n224;
wire   n225;
wire   [1:0] n226;
wire   n227;
wire   n228;
wire   n229;
wire   n230;
wire   n231;
wire   n232;
wire   n233;
wire   n234;
wire   n235;
wire   n236;
wire   n237;
wire   [1:0] n238;
wire   [2:0] n239;
wire   [1:0] n240;
wire   n241;
wire   n242;
wire   n243;
wire   n244;
wire   n245;
wire   n246;
wire   n247;
wire   n248;
wire   n249;
wire   n250;
wire   n251;
reg    n252;
wire   [1:0] n253;
wire   n254;
wire   n255;
wire   n256;
wire   n257;
wire   n258;
wire   n259;
wire   n260;
wire   n261;
wire   n262;
wire   n263;
wire   n264;
wire   [1:0] n265;
wire   n266;
wire   n267;
wire   n268;
wire   n269;
wire   n270;
wire   n271;
wire   n272;
wire   n273;
wire   n274;
wire   n275;
wire   n276;
wire   [1:0] n277;
wire   n278;
wire   n279;
wire   n280;
wire   n281;
wire   n282;
wire   n283;
wire   n284;
wire   n285;
wire   n286;
wire   n287;
wire   n288;
wire   [1:0] n289;
wire   [2:0] n290;
wire   [1:0] n291;
wire   n292;
wire   n293;
wire   n294;
wire   n295;
wire   n296;
wire   n297;
wire   n298;
wire   n299;
wire   n300;
wire   n301;
wire   n302;
reg    n303;
wire   n304;
wire   n305;
wire   n306;
wire   n307;
reg    n308;
reg    n309;
wire   [3:0] s310_1;
assign n1 = {i6, i4};
assign n2 = 4'b1000;
assign n3 = 4'b0100;
assign n4 = 4'b0010;
assign n5 = 4'b0001;
assign n6 = 4'b0000;
assign n7 = 3'b000;
assign n8 = n1 == n7;
assign n9 = n8 ? n6 : s310_1;
assign n10 = n9[0];
initial n11 = 18'b000000000000000000;
always @ (posedge clock_config_c)
  if (i2 == 1'b1)
    n11 <= 18'b000000000000000000;
  else if (n10 == 1'b1)
    n11 <= i3;
assign n12 = n11[17];
assign n13 = {n11[16],
  n11[15],
  n11[14]};
assign n14 = {n11[13],
  n11[12],
  n11[11]};
assign n15 = {n11[10],
  n11[9],
  n11[8]};
assign n16 = {n11[7],
  n11[6],
  n11[5],
  n11[4],
  n11[3],
  n11[2],
  n11[1],
  n11[0]};
assign n17 = n9[1];
initial n18 = 18'b000000000000000000;
always @ (posedge clock_config_c)
  if (i2 == 1'b1)
    n18 <= 18'b000000000000000000;
  else if (n17 == 1'b1)
    n18 <= i3;
assign n19 = n18[17];
assign n20 = {n18[16],
  n18[15],
  n18[14]};
assign n21 = {n18[13],
  n18[12],
  n18[11]};
assign n22 = {n18[10],
  n18[9],
  n18[8]};
assign n23 = {n18[7],
  n18[6],
  n18[5],
  n18[4],
  n18[3],
  n18[2],
  n18[1],
  n18[0]};
assign n24 = n9[2];
initial n25 = 18'b000000000000000000;
always @ (posedge clock_config_c)
  if (i2 == 1'b1)
    n25 <= 18'b000000000000000000;
  else if (n24 == 1'b1)
    n25 <= i3;
assign n26 = n25[17];
assign n27 = {n25[16],
  n25[15],
  n25[14]};
assign n28 = {n25[13],
  n25[12],
  n25[11]};
assign n29 = {n25[10],
  n25[9],
  n25[8]};
assign n30 = {n25[7],
  n25[6],
  n25[5],
  n25[4],
  n25[3],
  n25[2],
  n25[1],
  n25[0]};
assign n31 = n9[3];
initial n32 = 18'b000000000000000000;
always @ (posedge clock_config_c)
  if (i2 == 1'b1)
    n32 <= 18'b000000000000000000;
  else if (n31 == 1'b1)
    n32 <= i3;
assign n33 = n32[17];
assign n34 = {n32[16],
  n32[15],
  n32[14]};
assign n35 = {n32[13],
  n32[12],
  n32[11]};
assign n36 = {n32[10],
  n32[9],
  n32[8]};
assign n37 = {n32[7],
  n32[6],
  n32[5],
  n32[4],
  n32[3],
  n32[2],
  n32[1],
  n32[0]};
initial n38 = 1'b0;
always @ (posedge clock_main_c)
  if (i2 == 1'b1)
    n38 <= 1'b0;
  else if (i1 == 1'b1)
    n38 <= i7;
initial n39 = 1'b0;
always @ (posedge clock_main_c)
  if (i2 == 1'b1)
    n39 <= 1'b0;
  else if (i1 == 1'b1)
    n39 <= i5;
assign n40 = n16[7];
assign n41 = {n16[6],
  n16[5],
  n16[4],
  n16[3],
  n16[2],
  n16[1],
  n16[0]};
assign n42 = n41[6];
assign n43 = {n41[5],
  n41[4],
  n41[3],
  n41[2],
  n41[1],
  n41[0]};
assign n44 = n43[5];
assign n45 = {n43[4],
  n43[3],
  n43[2],
  n43[1],
  n43[0]};
assign n46 = n45[4];
assign n47 = {n45[3],
  n45[2],
  n45[1],
  n45[0]};
assign n48 = n47[3];
assign n49 = {n47[2],
  n47[1],
  n47[0]};
assign n50 = n49[2];
assign n51 = {n49[1],
  n49[0]};
assign n52 = n51[1];
assign n53 = n51[0];
assign n54 = n53;
assign n55 = n23[7];
assign n56 = {n23[6],
  n23[5],
  n23[4],
  n23[3],
  n23[2],
  n23[1],
  n23[0]};
assign n57 = n56[6];
assign n58 = {n56[5],
  n56[4],
  n56[3],
  n56[2],
  n56[1],
  n56[0]};
assign n59 = n58[5];
assign n60 = {n58[4],
  n58[3],
  n58[2],
  n58[1],
  n58[0]};
assign n61 = n60[4];
assign n62 = {n60[3],
  n60[2],
  n60[1],
  n60[0]};
assign n63 = n62[3];
assign n64 = {n62[2],
  n62[1],
  n62[0]};
assign n65 = n64[2];
assign n66 = {n64[1],
  n64[0]};
assign n67 = n66[1];
assign n68 = n66[0];
assign n69 = n68;
assign n70 = n30[7];
assign n71 = {n30[6],
  n30[5],
  n30[4],
  n30[3],
  n30[2],
  n30[1],
  n30[0]};
assign n72 = n71[6];
assign n73 = {n71[5],
  n71[4],
  n71[3],
  n71[2],
  n71[1],
  n71[0]};
assign n74 = n73[5];
assign n75 = {n73[4],
  n73[3],
  n73[2],
  n73[1],
  n73[0]};
assign n76 = n75[4];
assign n77 = {n75[3],
  n75[2],
  n75[1],
  n75[0]};
assign n78 = n77[3];
assign n79 = {n77[2],
  n77[1],
  n77[0]};
assign n80 = n79[2];
assign n81 = {n79[1],
  n79[0]};
assign n82 = n81[1];
assign n83 = n81[0];
assign n84 = n83;
assign n85 = n37[7];
assign n86 = {n37[6],
  n37[5],
  n37[4],
  n37[3],
  n37[2],
  n37[1],
  n37[0]};
assign n87 = n86[6];
assign n88 = {n86[5],
  n86[4],
  n86[3],
  n86[2],
  n86[1],
  n86[0]};
assign n89 = n88[5];
assign n90 = {n88[4],
  n88[3],
  n88[2],
  n88[1],
  n88[0]};
assign n91 = n90[4];
assign n92 = {n90[3],
  n90[2],
  n90[1],
  n90[0]};
assign n93 = n92[3];
assign n94 = {n92[2],
  n92[1],
  n92[0]};
assign n95 = n94[2];
assign n96 = {n94[1],
  n94[0]};
assign n97 = n96[1];
assign n98 = n96[0];
assign n99 = n98;
assign n100 = {n13[2],
  n13[1]};
assign n101 = n13[0];
assign n102 = n101 ? n309 : n38;
assign n103 = n101 ? n308 : n39;
assign n104 = n101 ? n201 : n150;
assign n105 = n101 ? n303 : n252;
assign n106 = n100[1];
assign n107 = n100[0];
assign n108 = n107 ? n103 : n102;
assign n109 = n107 ? n105 : n104;
assign n110 = n106;
assign n111 = n110 ? n109 : n108;
assign n112 = {n14[2],
  n14[1]};
assign n113 = n14[0];
assign n114 = n113 ? n309 : n38;
assign n115 = n113 ? n308 : n39;
assign n116 = n113 ? n201 : n150;
assign n117 = n113 ? n303 : n252;
assign n118 = n112[1];
assign n119 = n112[0];
assign n120 = n119 ? n115 : n114;
assign n121 = n119 ? n117 : n116;
assign n122 = n118;
assign n123 = n122 ? n121 : n120;
assign n124 = {n15[2],
  n15[1]};
assign n125 = n15[0];
assign n126 = n125 ? n309 : n38;
assign n127 = n125 ? n308 : n39;
assign n128 = n125 ? n201 : n150;
assign n129 = n125 ? n303 : n252;
assign n130 = n124[1];
assign n131 = n124[0];
assign n132 = n131 ? n127 : n126;
assign n133 = n131 ? n129 : n128;
assign n134 = n130;
assign n135 = n134 ? n133 : n132;
assign n136 = {n123, n135};
assign n137 = {n111, n136};
assign n138 = {n137[2],
  n137[1]};
assign n139 = n137[0];
assign n140 = n139 ? n52 : n54;
assign n141 = n139 ? n48 : n50;
assign n142 = n139 ? n44 : n46;
assign n143 = n139 ? n40 : n42;
assign n144 = n138[1];
assign n145 = n138[0];
assign n146 = n145 ? n141 : n140;
assign n147 = n145 ? n143 : n142;
assign n148 = n144;
assign n149 = n148 ? n147 : n146;
initial n150 = 1'b0;
always @ (posedge clock_main_c)
  if (i2 == 1'b1)
    n150 <= 1'b0;
  else if (i1 == 1'b1)
    n150 <= n149;
assign n151 = {n20[2],
  n20[1]};
assign n152 = n20[0];
assign n153 = n152 ? n309 : n38;
assign n154 = n152 ? n308 : n39;
assign n155 = n152 ? n201 : n150;
assign n156 = n152 ? n303 : n252;
assign n157 = n151[1];
assign n158 = n151[0];
assign n159 = n158 ? n154 : n153;
assign n160 = n158 ? n156 : n155;
assign n161 = n157;
assign n162 = n161 ? n160 : n159;
assign n163 = {n21[2],
  n21[1]};
assign n164 = n21[0];
assign n165 = n164 ? n309 : n38;
assign n166 = n164 ? n308 : n39;
assign n167 = n164 ? n201 : n150;
assign n168 = n164 ? n303 : n252;
assign n169 = n163[1];
assign n170 = n163[0];
assign n171 = n170 ? n166 : n165;
assign n172 = n170 ? n168 : n167;
assign n173 = n169;
assign n174 = n173 ? n172 : n171;
assign n175 = {n22[2],
  n22[1]};
assign n176 = n22[0];
assign n177 = n176 ? n309 : n38;
assign n178 = n176 ? n308 : n39;
assign n179 = n176 ? n201 : n150;
assign n180 = n176 ? n303 : n252;
assign n181 = n175[1];
assign n182 = n175[0];
assign n183 = n182 ? n178 : n177;
assign n184 = n182 ? n180 : n179;
assign n185 = n181;
assign n186 = n185 ? n184 : n183;
assign n187 = {n174, n186};
assign n188 = {n162, n187};
assign n189 = {n188[2],
  n188[1]};
assign n190 = n188[0];
assign n191 = n190 ? n67 : n69;
assign n192 = n190 ? n63 : n65;
assign n193 = n190 ? n59 : n61;
assign n194 = n190 ? n55 : n57;
assign n195 = n189[1];
assign n196 = n189[0];
assign n197 = n196 ? n192 : n191;
assign n198 = n196 ? n194 : n193;
assign n199 = n195;
assign n200 = n199 ? n198 : n197;
initial n201 = 1'b0;
always @ (posedge clock_main_c)
  if (i2 == 1'b1)
    n201 <= 1'b0;
  else if (i1 == 1'b1)
    n201 <= n200;
assign n202 = {n27[2],
  n27[1]};
assign n203 = n27[0];
assign n204 = n203 ? n309 : n38;
assign n205 = n203 ? n308 : n39;
assign n206 = n203 ? n201 : n150;
assign n207 = n203 ? n303 : n252;
assign n208 = n202[1];
assign n209 = n202[0];
assign n210 = n209 ? n205 : n204;
assign n211 = n209 ? n207 : n206;
assign n212 = n208;
assign n213 = n212 ? n211 : n210;
assign n214 = {n28[2],
  n28[1]};
assign n215 = n28[0];
assign n216 = n215 ? n309 : n38;
assign n217 = n215 ? n308 : n39;
assign n218 = n215 ? n201 : n150;
assign n219 = n215 ? n303 : n252;
assign n220 = n214[1];
assign n221 = n214[0];
assign n222 = n221 ? n217 : n216;
assign n223 = n221 ? n219 : n218;
assign n224 = n220;
assign n225 = n224 ? n223 : n222;
assign n226 = {n29[2],
  n29[1]};
assign n227 = n29[0];
assign n228 = n227 ? n309 : n38;
assign n229 = n227 ? n308 : n39;
assign n230 = n227 ? n201 : n150;
assign n231 = n227 ? n303 : n252;
assign n232 = n226[1];
assign n233 = n226[0];
assign n234 = n233 ? n229 : n228;
assign n235 = n233 ? n231 : n230;
assign n236 = n232;
assign n237 = n236 ? n235 : n234;
assign n238 = {n225, n237};
assign n239 = {n213, n238};
assign n240 = {n239[2],
  n239[1]};
assign n241 = n239[0];
assign n242 = n241 ? n82 : n84;
assign n243 = n241 ? n78 : n80;
assign n244 = n241 ? n74 : n76;
assign n245 = n241 ? n70 : n72;
assign n246 = n240[1];
assign n247 = n240[0];
assign n248 = n247 ? n243 : n242;
assign n249 = n247 ? n245 : n244;
assign n250 = n246;
assign n251 = n250 ? n249 : n248;
initial n252 = 1'b0;
always @ (posedge clock_main_c)
  if (i2 == 1'b1)
    n252 <= 1'b0;
  else if (i1 == 1'b1)
    n252 <= n251;
assign n253 = {n34[2],
  n34[1]};
assign n254 = n34[0];
assign n255 = n254 ? n309 : n38;
assign n256 = n254 ? n308 : n39;
assign n257 = n254 ? n201 : n150;
assign n258 = n254 ? n303 : n252;
assign n259 = n253[1];
assign n260 = n253[0];
assign n261 = n260 ? n256 : n255;
assign n262 = n260 ? n258 : n257;
assign n263 = n259;
assign n264 = n263 ? n262 : n261;
assign n265 = {n35[2],
  n35[1]};
assign n266 = n35[0];
assign n267 = n266 ? n309 : n38;
assign n268 = n266 ? n308 : n39;
assign n269 = n266 ? n201 : n150;
assign n270 = n266 ? n303 : n252;
assign n271 = n265[1];
assign n272 = n265[0];
assign n273 = n272 ? n268 : n267;
assign n274 = n272 ? n270 : n269;
assign n275 = n271;
assign n276 = n275 ? n274 : n273;
assign n277 = {n36[2],
  n36[1]};
assign n278 = n36[0];
assign n279 = n278 ? n309 : n38;
assign n280 = n278 ? n308 : n39;
assign n281 = n278 ? n201 : n150;
assign n282 = n278 ? n303 : n252;
assign n283 = n277[1];
assign n284 = n277[0];
assign n285 = n284 ? n280 : n279;
assign n286 = n284 ? n282 : n281;
assign n287 = n283;
assign n288 = n287 ? n286 : n285;
assign n289 = {n276, n288};
assign n290 = {n264, n289};
assign n291 = {n290[2],
  n290[1]};
assign n292 = n290[0];
assign n293 = n292 ? n97 : n99;
assign n294 = n292 ? n93 : n95;
assign n295 = n292 ? n89 : n91;
assign n296 = n292 ? n85 : n87;
assign n297 = n291[1];
assign n298 = n291[0];
assign n299 = n298 ? n294 : n293;
assign n300 = n298 ? n296 : n295;
assign n301 = n297;
assign n302 = n301 ? n300 : n299;
initial n303 = 1'b0;
always @ (posedge clock_main_c)
  if (i2 == 1'b1)
    n303 <= 1'b0;
  else if (i1 == 1'b1)
    n303 <= n302;
assign n304 = n12 ? n150 : n149;
assign n305 = n19 ? n201 : n200;
assign n306 = n26 ? n252 : n251;
assign n307 = n33 ? n303 : n302;
initial n308 = 1'b0;
always @ (posedge clock_main_c)
  if (i2 == 1'b1)
    n308 <= 1'b0;
  else if (i1 == 1'b1)
    n308 <= i8;
initial n309 = 1'b0;
always @ (posedge clock_main_c)
  if (i2 == 1'b1)
    n309 <= 1'b0;
  else if (i1 == 1'b1)
    n309 <= i9;
cf_rca_16_31 s310 (n1, n2, n3, n4, n5, n6, s310_1);
assign o4 = n307;
assign o3 = n306;
assign o2 = n305;
assign o1 = n304;
endmodule

module cf_rca_16_30 (clock_config_c, clock_main_c, i1, i2, i3, i4, i5, i6, i7, i8, i9, o1, o2, o3, o4);
input  clock_config_c;
input  clock_main_c;
input  i1;
input  i2;
input  [17:0] i3;
input  [1:0] i4;
input  i5;
input  i6;
input  i7;
input  i8;
input  i9;
output o1;
output o2;
output o3;
output o4;
wire   [2:0] n1;
wire   [3:0] n2;
wire   [3:0] n3;
wire   [3:0] n4;
wire   [3:0] n5;
wire   [3:0] n6;
wire   [2:0] n7;
wire   n8;
wire   [3:0] n9;
wire   n10;
reg    [17:0] n11;
wire   n12;
wire   [2:0] n13;
wire   [2:0] n14;
wire   [2:0] n15;
wire   [7:0] n16;
wire   n17;
reg    [17:0] n18;
wire   n19;
wire   [2:0] n20;
wire   [2:0] n21;
wire   [2:0] n22;
wire   [7:0] n23;
wire   n24;
reg    [17:0] n25;
wire   n26;
wire   [2:0] n27;
wire   [2:0] n28;
wire   [2:0] n29;
wire   [7:0] n30;
wire   n31;
reg    [17:0] n32;
wire   n33;
wire   [2:0] n34;
wire   [2:0] n35;
wire   [2:0] n36;
wire   [7:0] n37;
reg    n38;
reg    n39;
wire   n40;
wire   [6:0] n41;
wire   n42;
wire   [5:0] n43;
wire   n44;
wire   [4:0] n45;
wire   n46;
wire   [3:0] n47;
wire   n48;
wire   [2:0] n49;
wire   n50;
wire   [1:0] n51;
wire   n52;
wire   n53;
wire   n54;
wire   n55;
wire   [6:0] n56;
wire   n57;
wire   [5:0] n58;
wire   n59;
wire   [4:0] n60;
wire   n61;
wire   [3:0] n62;
wire   n63;
wire   [2:0] n64;
wire   n65;
wire   [1:0] n66;
wire   n67;
wire   n68;
wire   n69;
wire   n70;
wire   [6:0] n71;
wire   n72;
wire   [5:0] n73;
wire   n74;
wire   [4:0] n75;
wire   n76;
wire   [3:0] n77;
wire   n78;
wire   [2:0] n79;
wire   n80;
wire   [1:0] n81;
wire   n82;
wire   n83;
wire   n84;
wire   n85;
wire   [6:0] n86;
wire   n87;
wire   [5:0] n88;
wire   n89;
wire   [4:0] n90;
wire   n91;
wire   [3:0] n92;
wire   n93;
wire   [2:0] n94;
wire   n95;
wire   [1:0] n96;
wire   n97;
wire   n98;
wire   n99;
wire   [1:0] n100;
wire   n101;
wire   n102;
wire   n103;
wire   n104;
wire   n105;
wire   n106;
wire   n107;
wire   n108;
wire   n109;
wire   n110;
wire   n111;
wire   [1:0] n112;
wire   n113;
wire   n114;
wire   n115;
wire   n116;
wire   n117;
wire   n118;
wire   n119;
wire   n120;
wire   n121;
wire   n122;
wire   n123;
wire   [1:0] n124;
wire   n125;
wire   n126;
wire   n127;
wire   n128;
wire   n129;
wire   n130;
wire   n131;
wire   n132;
wire   n133;
wire   n134;
wire   n135;
wire   [1:0] n136;
wire   [2:0] n137;
wire   [1:0] n138;
wire   n139;
wire   n140;
wire   n141;
wire   n142;
wire   n143;
wire   n144;
wire   n145;
wire   n146;
wire   n147;
wire   n148;
wire   n149;
reg    n150;
wire   [1:0] n151;
wire   n152;
wire   n153;
wire   n154;
wire   n155;
wire   n156;
wire   n157;
wire   n158;
wire   n159;
wire   n160;
wire   n161;
wire   n162;
wire   [1:0] n163;
wire   n164;
wire   n165;
wire   n166;
wire   n167;
wire   n168;
wire   n169;
wire   n170;
wire   n171;
wire   n172;
wire   n173;
wire   n174;
wire   [1:0] n175;
wire   n176;
wire   n177;
wire   n178;
wire   n179;
wire   n180;
wire   n181;
wire   n182;
wire   n183;
wire   n184;
wire   n185;
wire   n186;
wire   [1:0] n187;
wire   [2:0] n188;
wire   [1:0] n189;
wire   n190;
wire   n191;
wire   n192;
wire   n193;
wire   n194;
wire   n195;
wire   n196;
wire   n197;
wire   n198;
wire   n199;
wire   n200;
reg    n201;
wire   [1:0] n202;
wire   n203;
wire   n204;
wire   n205;
wire   n206;
wire   n207;
wire   n208;
wire   n209;
wire   n210;
wire   n211;
wire   n212;
wire   n213;
wire   [1:0] n214;
wire   n215;
wire   n216;
wire   n217;
wire   n218;
wire   n219;
wire   n220;
wire   n221;
wire   n222;
wire   n223;
wire   n224;
wire   n225;
wire   [1:0] n226;
wire   n227;
wire   n228;
wire   n229;
wire   n230;
wire   n231;
wire   n232;
wire   n233;
wire   n234;
wire   n235;
wire   n236;
wire   n237;
wire   [1:0] n238;
wire   [2:0] n239;
wire   [1:0] n240;
wire   n241;
wire   n242;
wire   n243;
wire   n244;
wire   n245;
wire   n246;
wire   n247;
wire   n248;
wire   n249;
wire   n250;
wire   n251;
reg    n252;
wire   [1:0] n253;
wire   n254;
wire   n255;
wire   n256;
wire   n257;
wire   n258;
wire   n259;
wire   n260;
wire   n261;
wire   n262;
wire   n263;
wire   n264;
wire   [1:0] n265;
wire   n266;
wire   n267;
wire   n268;
wire   n269;
wire   n270;
wire   n271;
wire   n272;
wire   n273;
wire   n274;
wire   n275;
wire   n276;
wire   [1:0] n277;
wire   n278;
wire   n279;
wire   n280;
wire   n281;
wire   n282;
wire   n283;
wire   n284;
wire   n285;
wire   n286;
wire   n287;
wire   n288;
wire   [1:0] n289;
wire   [2:0] n290;
wire   [1:0] n291;
wire   n292;
wire   n293;
wire   n294;
wire   n295;
wire   n296;
wire   n297;
wire   n298;
wire   n299;
wire   n300;
wire   n301;
wire   n302;
reg    n303;
wire   n304;
wire   n305;
wire   n306;
wire   n307;
reg    n308;
reg    n309;
wire   [3:0] s310_1;
assign n1 = {i7, i4};
assign n2 = 4'b1000;
assign n3 = 4'b0100;
assign n4 = 4'b0010;
assign n5 = 4'b0001;
assign n6 = 4'b0000;
assign n7 = 3'b000;
assign n8 = n1 == n7;
assign n9 = n8 ? n6 : s310_1;
assign n10 = n9[0];
initial n11 = 18'b000000000000000000;
always @ (posedge clock_config_c)
  if (i2 == 1'b1)
    n11 <= 18'b000000000000000000;
  else if (n10 == 1'b1)
    n11 <= i3;
assign n12 = n11[17];
assign n13 = {n11[16],
  n11[15],
  n11[14]};
assign n14 = {n11[13],
  n11[12],
  n11[11]};
assign n15 = {n11[10],
  n11[9],
  n11[8]};
assign n16 = {n11[7],
  n11[6],
  n11[5],
  n11[4],
  n11[3],
  n11[2],
  n11[1],
  n11[0]};
assign n17 = n9[1];
initial n18 = 18'b000000000000000000;
always @ (posedge clock_config_c)
  if (i2 == 1'b1)
    n18 <= 18'b000000000000000000;
  else if (n17 == 1'b1)
    n18 <= i3;
assign n19 = n18[17];
assign n20 = {n18[16],
  n18[15],
  n18[14]};
assign n21 = {n18[13],
  n18[12],
  n18[11]};
assign n22 = {n18[10],
  n18[9],
  n18[8]};
assign n23 = {n18[7],
  n18[6],
  n18[5],
  n18[4],
  n18[3],
  n18[2],
  n18[1],
  n18[0]};
assign n24 = n9[2];
initial n25 = 18'b000000000000000000;
always @ (posedge clock_config_c)
  if (i2 == 1'b1)
    n25 <= 18'b000000000000000000;
  else if (n24 == 1'b1)
    n25 <= i3;
assign n26 = n25[17];
assign n27 = {n25[16],
  n25[15],
  n25[14]};
assign n28 = {n25[13],
  n25[12],
  n25[11]};
assign n29 = {n25[10],
  n25[9],
  n25[8]};
assign n30 = {n25[7],
  n25[6],
  n25[5],
  n25[4],
  n25[3],
  n25[2],
  n25[1],
  n25[0]};
assign n31 = n9[3];
initial n32 = 18'b000000000000000000;
always @ (posedge clock_config_c)
  if (i2 == 1'b1)
    n32 <= 18'b000000000000000000;
  else if (n31 == 1'b1)
    n32 <= i3;
assign n33 = n32[17];
assign n34 = {n32[16],
  n32[15],
  n32[14]};
assign n35 = {n32[13],
  n32[12],
  n32[11]};
assign n36 = {n32[10],
  n32[9],
  n32[8]};
assign n37 = {n32[7],
  n32[6],
  n32[5],
  n32[4],
  n32[3],
  n32[2],
  n32[1],
  n32[0]};
initial n38 = 1'b0;
always @ (posedge clock_main_c)
  if (i2 == 1'b1)
    n38 <= 1'b0;
  else if (i1 == 1'b1)
    n38 <= i8;
initial n39 = 1'b0;
always @ (posedge clock_main_c)
  if (i2 == 1'b1)
    n39 <= 1'b0;
  else if (i1 == 1'b1)
    n39 <= i6;
assign n40 = n16[7];
assign n41 = {n16[6],
  n16[5],
  n16[4],
  n16[3],
  n16[2],
  n16[1],
  n16[0]};
assign n42 = n41[6];
assign n43 = {n41[5],
  n41[4],
  n41[3],
  n41[2],
  n41[1],
  n41[0]};
assign n44 = n43[5];
assign n45 = {n43[4],
  n43[3],
  n43[2],
  n43[1],
  n43[0]};
assign n46 = n45[4];
assign n47 = {n45[3],
  n45[2],
  n45[1],
  n45[0]};
assign n48 = n47[3];
assign n49 = {n47[2],
  n47[1],
  n47[0]};
assign n50 = n49[2];
assign n51 = {n49[1],
  n49[0]};
assign n52 = n51[1];
assign n53 = n51[0];
assign n54 = n53;
assign n55 = n23[7];
assign n56 = {n23[6],
  n23[5],
  n23[4],
  n23[3],
  n23[2],
  n23[1],
  n23[0]};
assign n57 = n56[6];
assign n58 = {n56[5],
  n56[4],
  n56[3],
  n56[2],
  n56[1],
  n56[0]};
assign n59 = n58[5];
assign n60 = {n58[4],
  n58[3],
  n58[2],
  n58[1],
  n58[0]};
assign n61 = n60[4];
assign n62 = {n60[3],
  n60[2],
  n60[1],
  n60[0]};
assign n63 = n62[3];
assign n64 = {n62[2],
  n62[1],
  n62[0]};
assign n65 = n64[2];
assign n66 = {n64[1],
  n64[0]};
assign n67 = n66[1];
assign n68 = n66[0];
assign n69 = n68;
assign n70 = n30[7];
assign n71 = {n30[6],
  n30[5],
  n30[4],
  n30[3],
  n30[2],
  n30[1],
  n30[0]};
assign n72 = n71[6];
assign n73 = {n71[5],
  n71[4],
  n71[3],
  n71[2],
  n71[1],
  n71[0]};
assign n74 = n73[5];
assign n75 = {n73[4],
  n73[3],
  n73[2],
  n73[1],
  n73[0]};
assign n76 = n75[4];
assign n77 = {n75[3],
  n75[2],
  n75[1],
  n75[0]};
assign n78 = n77[3];
assign n79 = {n77[2],
  n77[1],
  n77[0]};
assign n80 = n79[2];
assign n81 = {n79[1],
  n79[0]};
assign n82 = n81[1];
assign n83 = n81[0];
assign n84 = n83;
assign n85 = n37[7];
assign n86 = {n37[6],
  n37[5],
  n37[4],
  n37[3],
  n37[2],
  n37[1],
  n37[0]};
assign n87 = n86[6];
assign n88 = {n86[5],
  n86[4],
  n86[3],
  n86[2],
  n86[1],
  n86[0]};
assign n89 = n88[5];
assign n90 = {n88[4],
  n88[3],
  n88[2],
  n88[1],
  n88[0]};
assign n91 = n90[4];
assign n92 = {n90[3],
  n90[2],
  n90[1],
  n90[0]};
assign n93 = n92[3];
assign n94 = {n92[2],
  n92[1],
  n92[0]};
assign n95 = n94[2];
assign n96 = {n94[1],
  n94[0]};
assign n97 = n96[1];
assign n98 = n96[0];
assign n99 = n98;
assign n100 = {n13[2],
  n13[1]};
assign n101 = n13[0];
assign n102 = n101 ? n309 : n38;
assign n103 = n101 ? n308 : n39;
assign n104 = n101 ? n201 : n150;
assign n105 = n101 ? n303 : n252;
assign n106 = n100[1];
assign n107 = n100[0];
assign n108 = n107 ? n103 : n102;
assign n109 = n107 ? n105 : n104;
assign n110 = n106;
assign n111 = n110 ? n109 : n108;
assign n112 = {n14[2],
  n14[1]};
assign n113 = n14[0];
assign n114 = n113 ? n309 : n38;
assign n115 = n113 ? n308 : n39;
assign n116 = n113 ? n201 : n150;
assign n117 = n113 ? n303 : n252;
assign n118 = n112[1];
assign n119 = n112[0];
assign n120 = n119 ? n115 : n114;
assign n121 = n119 ? n117 : n116;
assign n122 = n118;
assign n123 = n122 ? n121 : n120;
assign n124 = {n15[2],
  n15[1]};
assign n125 = n15[0];
assign n126 = n125 ? n309 : n38;
assign n127 = n125 ? n308 : n39;
assign n128 = n125 ? n201 : n150;
assign n129 = n125 ? n303 : n252;
assign n130 = n124[1];
assign n131 = n124[0];
assign n132 = n131 ? n127 : n126;
assign n133 = n131 ? n129 : n128;
assign n134 = n130;
assign n135 = n134 ? n133 : n132;
assign n136 = {n123, n135};
assign n137 = {n111, n136};
assign n138 = {n137[2],
  n137[1]};
assign n139 = n137[0];
assign n140 = n139 ? n52 : n54;
assign n141 = n139 ? n48 : n50;
assign n142 = n139 ? n44 : n46;
assign n143 = n139 ? n40 : n42;
assign n144 = n138[1];
assign n145 = n138[0];
assign n146 = n145 ? n141 : n140;
assign n147 = n145 ? n143 : n142;
assign n148 = n144;
assign n149 = n148 ? n147 : n146;
initial n150 = 1'b0;
always @ (posedge clock_main_c)
  if (i2 == 1'b1)
    n150 <= 1'b0;
  else if (i1 == 1'b1)
    n150 <= n149;
assign n151 = {n20[2],
  n20[1]};
assign n152 = n20[0];
assign n153 = n152 ? n309 : n38;
assign n154 = n152 ? n308 : n39;
assign n155 = n152 ? n201 : n150;
assign n156 = n152 ? n303 : n252;
assign n157 = n151[1];
assign n158 = n151[0];
assign n159 = n158 ? n154 : n153;
assign n160 = n158 ? n156 : n155;
assign n161 = n157;
assign n162 = n161 ? n160 : n159;
assign n163 = {n21[2],
  n21[1]};
assign n164 = n21[0];
assign n165 = n164 ? n309 : n38;
assign n166 = n164 ? n308 : n39;
assign n167 = n164 ? n201 : n150;
assign n168 = n164 ? n303 : n252;
assign n169 = n163[1];
assign n170 = n163[0];
assign n171 = n170 ? n166 : n165;
assign n172 = n170 ? n168 : n167;
assign n173 = n169;
assign n174 = n173 ? n172 : n171;
assign n175 = {n22[2],
  n22[1]};
assign n176 = n22[0];
assign n177 = n176 ? n309 : n38;
assign n178 = n176 ? n308 : n39;
assign n179 = n176 ? n201 : n150;
assign n180 = n176 ? n303 : n252;
assign n181 = n175[1];
assign n182 = n175[0];
assign n183 = n182 ? n178 : n177;
assign n184 = n182 ? n180 : n179;
assign n185 = n181;
assign n186 = n185 ? n184 : n183;
assign n187 = {n174, n186};
assign n188 = {n162, n187};
assign n189 = {n188[2],
  n188[1]};
assign n190 = n188[0];
assign n191 = n190 ? n67 : n69;
assign n192 = n190 ? n63 : n65;
assign n193 = n190 ? n59 : n61;
assign n194 = n190 ? n55 : n57;
assign n195 = n189[1];
assign n196 = n189[0];
assign n197 = n196 ? n192 : n191;
assign n198 = n196 ? n194 : n193;
assign n199 = n195;
assign n200 = n199 ? n198 : n197;
initial n201 = 1'b0;
always @ (posedge clock_main_c)
  if (i2 == 1'b1)
    n201 <= 1'b0;
  else if (i1 == 1'b1)
    n201 <= n200;
assign n202 = {n27[2],
  n27[1]};
assign n203 = n27[0];
assign n204 = n203 ? n309 : n38;
assign n205 = n203 ? n308 : n39;
assign n206 = n203 ? n201 : n150;
assign n207 = n203 ? n303 : n252;
assign n208 = n202[1];
assign n209 = n202[0];
assign n210 = n209 ? n205 : n204;
assign n211 = n209 ? n207 : n206;
assign n212 = n208;
assign n213 = n212 ? n211 : n210;
assign n214 = {n28[2],
  n28[1]};
assign n215 = n28[0];
assign n216 = n215 ? n309 : n38;
assign n217 = n215 ? n308 : n39;
assign n218 = n215 ? n201 : n150;
assign n219 = n215 ? n303 : n252;
assign n220 = n214[1];
assign n221 = n214[0];
assign n222 = n221 ? n217 : n216;
assign n223 = n221 ? n219 : n218;
assign n224 = n220;
assign n225 = n224 ? n223 : n222;
assign n226 = {n29[2],
  n29[1]};
assign n227 = n29[0];
assign n228 = n227 ? n309 : n38;
assign n229 = n227 ? n308 : n39;
assign n230 = n227 ? n201 : n150;
assign n231 = n227 ? n303 : n252;
assign n232 = n226[1];
assign n233 = n226[0];
assign n234 = n233 ? n229 : n228;
assign n235 = n233 ? n231 : n230;
assign n236 = n232;
assign n237 = n236 ? n235 : n234;
assign n238 = {n225, n237};
assign n239 = {n213, n238};
assign n240 = {n239[2],
  n239[1]};
assign n241 = n239[0];
assign n242 = n241 ? n82 : n84;
assign n243 = n241 ? n78 : n80;
assign n244 = n241 ? n74 : n76;
assign n245 = n241 ? n70 : n72;
assign n246 = n240[1];
assign n247 = n240[0];
assign n248 = n247 ? n243 : n242;
assign n249 = n247 ? n245 : n244;
assign n250 = n246;
assign n251 = n250 ? n249 : n248;
initial n252 = 1'b0;
always @ (posedge clock_main_c)
  if (i2 == 1'b1)
    n252 <= 1'b0;
  else if (i1 == 1'b1)
    n252 <= n251;
assign n253 = {n34[2],
  n34[1]};
assign n254 = n34[0];
assign n255 = n254 ? n309 : n38;
assign n256 = n254 ? n308 : n39;
assign n257 = n254 ? n201 : n150;
assign n258 = n254 ? n303 : n252;
assign n259 = n253[1];
assign n260 = n253[0];
assign n261 = n260 ? n256 : n255;
assign n262 = n260 ? n258 : n257;
assign n263 = n259;
assign n264 = n263 ? n262 : n261;
assign n265 = {n35[2],
  n35[1]};
assign n266 = n35[0];
assign n267 = n266 ? n309 : n38;
assign n268 = n266 ? n308 : n39;
assign n269 = n266 ? n201 : n150;
assign n270 = n266 ? n303 : n252;
assign n271 = n265[1];
assign n272 = n265[0];
assign n273 = n272 ? n268 : n267;
assign n274 = n272 ? n270 : n269;
assign n275 = n271;
assign n276 = n275 ? n274 : n273;
assign n277 = {n36[2],
  n36[1]};
assign n278 = n36[0];
assign n279 = n278 ? n309 : n38;
assign n280 = n278 ? n308 : n39;
assign n281 = n278 ? n201 : n150;
assign n282 = n278 ? n303 : n252;
assign n283 = n277[1];
assign n284 = n277[0];
assign n285 = n284 ? n280 : n279;
assign n286 = n284 ? n282 : n281;
assign n287 = n283;
assign n288 = n287 ? n286 : n285;
assign n289 = {n276, n288};
assign n290 = {n264, n289};
assign n291 = {n290[2],
  n290[1]};
assign n292 = n290[0];
assign n293 = n292 ? n97 : n99;
assign n294 = n292 ? n93 : n95;
assign n295 = n292 ? n89 : n91;
assign n296 = n292 ? n85 : n87;
assign n297 = n291[1];
assign n298 = n291[0];
assign n299 = n298 ? n294 : n293;
assign n300 = n298 ? n296 : n295;
assign n301 = n297;
assign n302 = n301 ? n300 : n299;
initial n303 = 1'b0;
always @ (posedge clock_main_c)
  if (i2 == 1'b1)
    n303 <= 1'b0;
  else if (i1 == 1'b1)
    n303 <= n302;
assign n304 = n12 ? n150 : n149;
assign n305 = n19 ? n201 : n200;
assign n306 = n26 ? n252 : n251;
assign n307 = n33 ? n303 : n302;
initial n308 = 1'b0;
always @ (posedge clock_main_c)
  if (i2 == 1'b1)
    n308 <= 1'b0;
  else if (i1 == 1'b1)
    n308 <= i5;
initial n309 = 1'b0;
always @ (posedge clock_main_c)
  if (i2 == 1'b1)
    n309 <= 1'b0;
  else if (i1 == 1'b1)
    n309 <= i9;
cf_rca_16_31 s310 (n1, n2, n3, n4, n5, n6, s310_1);
assign o4 = n307;
assign o3 = n306;
assign o2 = n305;
assign o1 = n304;
endmodule

module cf_rca_16_31 (i1, i2, i3, i4, i5, i6, o1);
input  [2:0] i1;
input  [3:0] i2;
input  [3:0] i3;
input  [3:0] i4;
input  [3:0] i5;
input  [3:0] i6;
output [3:0] o1;
wire   [2:0] n1;
wire   n2;
wire   [2:0] n3;
wire   n4;
wire   [2:0] n5;
wire   n6;
wire   [2:0] n7;
wire   n8;
wire   [2:0] n9;
wire   n10;
wire   [2:0] n11;
wire   n12;
wire   [3:0] n13;
wire   [3:0] n14;
wire   [3:0] n15;
wire   [3:0] n16;
wire   [3:0] n17;
wire   [3:0] n18;
assign n1 = 3'b001;
assign n2 = i1 == n1;
assign n3 = 3'b010;
assign n4 = i1 == n3;
assign n5 = 3'b011;
assign n6 = i1 == n5;
assign n7 = 3'b100;
assign n8 = i1 == n7;
assign n9 = 3'b101;
assign n10 = i1 == n9;
assign n11 = 3'b110;
assign n12 = i1 == n11;
assign n13 = n12 ? i3 : i2;
assign n14 = n10 ? i4 : n13;
assign n15 = n8 ? i5 : n14;
assign n16 = n6 ? i6 : n15;
assign n17 = n4 ? i6 : n16;
assign n18 = n2 ? i6 : n17;
assign o1 = n18;
endmodule

module cf_rca_16_32 (i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, o1);
input  [4:0] i1;
input  [15:0] i2;
input  [15:0] i3;
input  [15:0] i4;
input  [15:0] i5;
input  [15:0] i6;
input  [15:0] i7;
input  [15:0] i8;
input  [15:0] i9;
input  [15:0] i10;
input  [15:0] i11;
input  [15:0] i12;
input  [15:0] i13;
input  [15:0] i14;
input  [15:0] i15;
input  [15:0] i16;
input  [15:0] i17;
input  [15:0] i18;
output [15:0] o1;
wire   [4:0] n1;
wire   n2;
wire   [4:0] n3;
wire   n4;
wire   [4:0] n5;
wire   n6;
wire   [4:0] n7;
wire   n8;
wire   [4:0] n9;
wire   n10;
wire   [15:0] n11;
wire   [15:0] n12;
wire   [15:0] n13;
wire   [15:0] n14;
wire   [15:0] n15;
wire   [15:0] s16_1;
assign n1 = 5'b00000;
assign n2 = i1 == n1;
assign n3 = 5'b00001;
assign n4 = i1 == n3;
assign n5 = 5'b00010;
assign n6 = i1 == n5;
assign n7 = 5'b00011;
assign n8 = i1 == n7;
assign n9 = 5'b00100;
assign n10 = i1 == n9;
assign n11 = n10 ? i18 : s16_1;
assign n12 = n8 ? i18 : n11;
assign n13 = n6 ? i18 : n12;
assign n14 = n4 ? i18 : n13;
assign n15 = n2 ? i18 : n14;
cf_rca_16_33 s16 (i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, s16_1);
assign o1 = n15;
endmodule

module cf_rca_16_33 (i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, o1);
input  [4:0] i1;
input  [15:0] i2;
input  [15:0] i3;
input  [15:0] i4;
input  [15:0] i5;
input  [15:0] i6;
input  [15:0] i7;
input  [15:0] i8;
input  [15:0] i9;
input  [15:0] i10;
input  [15:0] i11;
input  [15:0] i12;
input  [15:0] i13;
input  [15:0] i14;
input  [15:0] i15;
input  [15:0] i16;
input  [15:0] i17;
input  [15:0] i18;
output [15:0] o1;
wire   [4:0] n1;
wire   n2;
wire   [4:0] n3;
wire   n4;
wire   [4:0] n5;
wire   n6;
wire   [4:0] n7;
wire   n8;
wire   [4:0] n9;
wire   n10;
wire   [15:0] n11;
wire   [15:0] n12;
wire   [15:0] n13;
wire   [15:0] n14;
wire   [15:0] n15;
wire   [15:0] s16_1;
assign n1 = 5'b00101;
assign n2 = i1 == n1;
assign n3 = 5'b00110;
assign n4 = i1 == n3;
assign n5 = 5'b00111;
assign n6 = i1 == n5;
assign n7 = 5'b01000;
assign n8 = i1 == n7;
assign n9 = 5'b01001;
assign n10 = i1 == n9;
assign n11 = n10 ? i18 : s16_1;
assign n12 = n8 ? i18 : n11;
assign n13 = n6 ? i18 : n12;
assign n14 = n4 ? i18 : n13;
assign n15 = n2 ? i18 : n14;
cf_rca_16_34 s16 (i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, s16_1);
assign o1 = n15;
endmodule

module cf_rca_16_34 (i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, o1);
input  [4:0] i1;
input  [15:0] i2;
input  [15:0] i3;
input  [15:0] i4;
input  [15:0] i5;
input  [15:0] i6;
input  [15:0] i7;
input  [15:0] i8;
input  [15:0] i9;
input  [15:0] i10;
input  [15:0] i11;
input  [15:0] i12;
input  [15:0] i13;
input  [15:0] i14;
input  [15:0] i15;
input  [15:0] i16;
input  [15:0] i17;
input  [15:0] i18;
output [15:0] o1;
wire   [4:0] n1;
wire   n2;
wire   [4:0] n3;
wire   n4;
wire   [4:0] n5;
wire   n6;
wire   [4:0] n7;
wire   n8;
wire   [4:0] n9;
wire   n10;
wire   [15:0] n11;
wire   [15:0] n12;
wire   [15:0] n13;
wire   [15:0] n14;
wire   [15:0] n15;
wire   [15:0] s16_1;
assign n1 = 5'b01010;
assign n2 = i1 == n1;
assign n3 = 5'b01011;
assign n4 = i1 == n3;
assign n5 = 5'b01100;
assign n6 = i1 == n5;
assign n7 = 5'b01101;
assign n8 = i1 == n7;
assign n9 = 5'b01110;
assign n10 = i1 == n9;
assign n11 = n10 ? i18 : s16_1;
assign n12 = n8 ? i18 : n11;
assign n13 = n6 ? i18 : n12;
assign n14 = n4 ? i18 : n13;
assign n15 = n2 ? i18 : n14;
cf_rca_16_35 s16 (i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, s16_1);
assign o1 = n15;
endmodule

module cf_rca_16_35 (i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, o1);
input  [4:0] i1;
input  [15:0] i2;
input  [15:0] i3;
input  [15:0] i4;
input  [15:0] i5;
input  [15:0] i6;
input  [15:0] i7;
input  [15:0] i8;
input  [15:0] i9;
input  [15:0] i10;
input  [15:0] i11;
input  [15:0] i12;
input  [15:0] i13;
input  [15:0] i14;
input  [15:0] i15;
input  [15:0] i16;
input  [15:0] i17;
input  [15:0] i18;
output [15:0] o1;
wire   [4:0] n1;
wire   n2;
wire   [4:0] n3;
wire   n4;
wire   [4:0] n5;
wire   n6;
wire   [4:0] n7;
wire   n8;
wire   [4:0] n9;
wire   n10;
wire   [15:0] n11;
wire   [15:0] n12;
wire   [15:0] n13;
wire   [15:0] n14;
wire   [15:0] n15;
wire   [15:0] s16_1;
assign n1 = 5'b01111;
assign n2 = i1 == n1;
assign n3 = 5'b10000;
assign n4 = i1 == n3;
assign n5 = 5'b10001;
assign n6 = i1 == n5;
assign n7 = 5'b10010;
assign n8 = i1 == n7;
assign n9 = 5'b10011;
assign n10 = i1 == n9;
assign n11 = n10 ? i14 : s16_1;
assign n12 = n8 ? i15 : n11;
assign n13 = n6 ? i16 : n12;
assign n14 = n4 ? i17 : n13;
assign n15 = n2 ? i18 : n14;
cf_rca_16_36 s16 (i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, s16_1);
assign o1 = n15;
endmodule

module cf_rca_16_36 (i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, o1);
input  [4:0] i1;
input  [15:0] i2;
input  [15:0] i3;
input  [15:0] i4;
input  [15:0] i5;
input  [15:0] i6;
input  [15:0] i7;
input  [15:0] i8;
input  [15:0] i9;
input  [15:0] i10;
input  [15:0] i11;
input  [15:0] i12;
input  [15:0] i13;
output [15:0] o1;
wire   [4:0] n1;
wire   n2;
wire   [4:0] n3;
wire   n4;
wire   [4:0] n5;
wire   n6;
wire   [4:0] n7;
wire   n8;
wire   [4:0] n9;
wire   n10;
wire   [15:0] n11;
wire   [15:0] n12;
wire   [15:0] n13;
wire   [15:0] n14;
wire   [15:0] n15;
wire   [15:0] s16_1;
assign n1 = 5'b10100;
assign n2 = i1 == n1;
assign n3 = 5'b10101;
assign n4 = i1 == n3;
assign n5 = 5'b10110;
assign n6 = i1 == n5;
assign n7 = 5'b10111;
assign n8 = i1 == n7;
assign n9 = 5'b11000;
assign n10 = i1 == n9;
assign n11 = n10 ? i9 : s16_1;
assign n12 = n8 ? i10 : n11;
assign n13 = n6 ? i11 : n12;
assign n14 = n4 ? i12 : n13;
assign n15 = n2 ? i13 : n14;
cf_rca_16_37 s16 (i1, i2, i3, i4, i5, i6, i7, i8, s16_1);
assign o1 = n15;
endmodule

module cf_rca_16_37 (i1, i2, i3, i4, i5, i6, i7, i8, o1);
input  [4:0] i1;
input  [15:0] i2;
input  [15:0] i3;
input  [15:0] i4;
input  [15:0] i5;
input  [15:0] i6;
input  [15:0] i7;
input  [15:0] i8;
output [15:0] o1;
wire   [4:0] n1;
wire   n2;
wire   [4:0] n3;
wire   n4;
wire   [4:0] n5;
wire   n6;
wire   [4:0] n7;
wire   n8;
wire   [4:0] n9;
wire   n10;
wire   [4:0] n11;
wire   n12;
wire   [15:0] n13;
wire   [15:0] n14;
wire   [15:0] n15;
wire   [15:0] n16;
wire   [15:0] n17;
wire   [15:0] n18;
assign n1 = 5'b11001;
assign n2 = i1 == n1;
assign n3 = 5'b11010;
assign n4 = i1 == n3;
assign n5 = 5'b11011;
assign n6 = i1 == n5;
assign n7 = 5'b11100;
assign n8 = i1 == n7;
assign n9 = 5'b11101;
assign n10 = i1 == n9;
assign n11 = 5'b11110;
assign n12 = i1 == n11;
assign n13 = n12 ? i3 : i2;
assign n14 = n10 ? i4 : n13;
assign n15 = n8 ? i5 : n14;
assign n16 = n6 ? i6 : n15;
assign n17 = n4 ? i7 : n16;
assign n18 = n2 ? i8 : n17;
assign o1 = n18;
endmodule

module cf_rca_16_38 (o1, o2, o3, o4, o5, o6, o7, o8, o9, o10, o11, o12, o13, o14, o15, o16);
output [15:0] o1;
output [15:0] o2;
output [15:0] o3;
output [15:0] o4;
output [15:0] o5;
output [15:0] o6;
output [15:0] o7;
output [15:0] o8;
output [15:0] o9;
output [15:0] o10;
output [15:0] o11;
output [15:0] o12;
output [15:0] o13;
output [15:0] o14;
output [15:0] o15;
output [15:0] o16;
wire   [15:0] n1;
wire   [15:0] n2;
wire   [15:0] n3;
wire   [15:0] n4;
wire   [15:0] n5;
wire   [15:0] n6;
wire   [15:0] n7;
wire   [15:0] n8;
wire   [15:0] n9;
wire   [15:0] n10;
wire   [15:0] n11;
wire   [15:0] n12;
wire   [15:0] n13;
wire   [15:0] n14;
wire   [15:0] n15;
wire   [15:0] n16;
assign n1 = 16'b1000000000000000;
assign n2 = 16'b0100000000000000;
assign n3 = 16'b0010000000000000;
assign n4 = 16'b0001000000000000;
assign n5 = 16'b0000100000000000;
assign n6 = 16'b0000010000000000;
assign n7 = 16'b0000001000000000;
assign n8 = 16'b0000000100000000;
assign n9 = 16'b0000000010000000;
assign n10 = 16'b0000000001000000;
assign n11 = 16'b0000000000100000;
assign n12 = 16'b0000000000010000;
assign n13 = 16'b0000000000001000;
assign n14 = 16'b0000000000000100;
assign n15 = 16'b0000000000000010;
assign n16 = 16'b0000000000000001;
assign o16 = n16;
assign o15 = n15;
assign o14 = n14;
assign o13 = n13;
assign o12 = n12;
assign o11 = n11;
assign o10 = n10;
assign o9 = n9;
assign o8 = n8;
assign o7 = n7;
assign o6 = n6;
assign o5 = n5;
assign o4 = n4;
assign o3 = n3;
assign o2 = n2;
assign o1 = n1;
endmodule

